{"version":3,"sources":["webpack:///bundle.js","webpack:///webpack/bootstrap d988894b94978dc2eb8f","webpack:///./src/app.js","webpack:///external \"PIXI\"","webpack:///./src/Global/index.js","webpack:///./~/eventemitter3/index.js","webpack:///./src/Global/Input.js","webpack:///./src/util/extends.js","webpack:///./src/SoundSystem.js","webpack:///external \"createjs.Sound\"","webpack:///./src/GameEngine.js","webpack:///./src/GameObject/Assets.js","webpack:///./src/GameObject/Background.js","webpack:///./src/GameObject/Plane.js","webpack:///external \"TweenMax\"","webpack:///external \"TimelineMax\"","webpack:///./src/Collision.js","webpack:///./src/BulletSystem.js","webpack:///./src/GameObject/RockArray.js","webpack:///./src/GameObject/Rock.js","webpack:///./src/GameObject/BankArray.js","webpack:///./src/GameObject/Bank.js","webpack:///./src/ExplosionSystem.js","webpack:///./src/util/JsonToArray.js","webpack:///./src/UI/Score.js","webpack:///./src/UI/Level.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","PIXI","Global","SoundSystem","GameEngine","Assets","Score","Level","$","animate","requestAnimationFrame","gameEngine","update","renderer","render","stage","resize","screenWidth","stageWidth","screenHeight","stageHeight","winObject","width","height","gameWidth","gameHeight","screenRatio","mask","clear","beginFill","x","y","drawRect","endFill","scale","updatePosition","autoDetectRenderer","window","innerWidth","innerHeight","view","Container","Graphics","init","assetsLoaded","Deferred","soundsLoaded","loader","baseUrl","assetList","i","push","once","resolve","reject","add","load","gameEvent","when","then","loadingScreen","find","html","on","off","detach","emit","alert","EventEmitter","Input","this","gameStage","gameStartTime","EE","fn","context","has","Object","prototype","hasOwnProperty","prefix","create","_events","undefined","eventNames","name","events","names","slice","getOwnPropertySymbols","concat","listeners","event","exists","evt","available","l","length","ee","Array","a1","a2","a3","a4","a5","args","len","arguments","removeListener","apply","j","listener","removeAllListeners","addListener","setMaxListeners","prefixed","keyListener","that","type","keyDownList","keyCode","pointerListener","data","local","toLocal","global","KEY_LEFT","KEY_UP","KEY_RIGHT","KEY_DOWN","keydown","keyup","keypress","isDown","key","isUp","interactive","Extends","target","source","constructor","lastTick","path","sounds","laser","explosion1","explosion2","explosion3","music","laserDelay","laserVolume","checkDone","done","keys","array","loadFail","SoundJS","src","registerSounds","big","play","currentTime","Date","now","volume","loop","instance","createjs","Sound","addScore","score","currentScore","updateScore","currentLevel","updateLevel","rocks","resetScore","banks","bankTick","gameObjectList","bankSpawnConstant","resources","plane","Plane","texture","bg","Background","RockArray","BankArray","addChild","bullets","BulletSystem","getInstance","bullet","ExplosionSystem","delta","spawn","url","rock1","rock2","dbs","standard","uob","resetHeight","movableWidth","speedY","minX","planeMovableWidth","maxX","sprite","Sprite","cacheAsBitmap","dt","onPointerDown","moveToPosition","onPointerUp","onPointerMove","timeline","y1","y2","TimelineMax","TweenMax","to","onComplete","stopped","speed","deathTime","anchor","Collision","addGroup","TYPE_CIRCLE","visible","moveToX","distance","Math","min","abs","keyLeft","keyRight","isCollide","isBig","rect_rect","x1","width1","height1","x2","width2","height2","rect_cir","halfWidth1","halfHeight1","testX","testY","getDistance","sqrt","pow","cir_cir","totalRadius","checkCollision","type1","type2","TYPE_RECTANGLE","groups","group","area","collisionType","collisionArea","shoot","lastFire","firePerSecond","pop","updates","count","splice","spawnRock","totalNames","rocksPerSecond","rock","rockNames","floor","random","refresh","spawnConstant","Rock","level","textureName","speedX","speedConstant","speedRotation","life","initialLife","rotation","spawnBank","bank","bankNames","Bank","explosions","types","textures","explosion","JsonToArray","convert","extras","MovieClip","animationSpeed","PI","gotoAndPlay","jsonObject","returnObj","scoreDiv","scoreSpan","css","top","left","levelDiv","levelSpan"],"mappings":"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","file":"bundle.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// require('../css/app.css');\n\t// require('babel-polyfill');\n\t//\n\t// import Point from './Point';\n\t// console.log(Point);\n\t\n\tconst PIXI = __webpack_require__(1);\n\t\n\tconst Global = __webpack_require__(2);\n\tconst SoundSystem = __webpack_require__(6);\n\tconst GameEngine = __webpack_require__(8);\n\tconst Assets = __webpack_require__(9);\n\tconst Score = __webpack_require__(22);\n\tconst Level = __webpack_require__(23);\n\t\n\t$(function() {\n\t  var renderer = PIXI.autoDetectRenderer(window.innerWidth, window.innerHeight, {\n\t    view: $(\"canvas\")[0]\n\t  });\n\t\n\t  var stage = new PIXI.Container(),\n\t    mask = new PIXI.Graphics(),\n\t    gameEngine = new GameEngine(stage),\n\t    winObject = $(window);\n\t\n\t  Score.init();\n\t  Level.init();\n\t\n\t  Global.init(stage);\n\t  stage.mask = mask;\n\t\n\t  //load\n\t  (function(){\n\t    var assetsLoaded = $.Deferred();\n\t    var soundsLoaded = $.Deferred();\n\t    var loader = PIXI.loader;\n\t\n\t    loader.baseUrl = \"image/\";\n\t    var assetList = [];\n\t    for (var i in Assets)\n\t      assetList.push(Assets[i]);\n\t    loader\n\t      .once('complete', function() {\n\t        assetsLoaded.resolve();\n\t      })\n\t      .once('error', function() {\n\t        assetsLoaded.reject();\n\t      })\n\t      .add(assetList)\n\t      .load();\n\t\n\t    Global.gameEvent.once('soundDone', function() {\n\t      soundsLoaded.resolve();\n\t    });\n\t    Global.gameEvent.once('soundFail', function() {\n\t      soundsLoaded.reject();\n\t    });\n\t    SoundSystem.init();\n\t\n\t    $.when(assetsLoaded, soundsLoaded).then(function() {\n\t      assetsLoaded = soundsLoaded = loader = assetList = null;\n\t      var loadingScreen = $(\".loading\");\n\t      loadingScreen.find(\"div\").html(\"Tap on screen to start\");\n\t      loadingScreen.on(\"click\", function() {\n\t        loadingScreen.off(\"click\");\n\t        loadingScreen.detach();\n\t        loadingScreen = null;\n\t        gameEngine.init();\n\t        // var area = new PIXI.Graphics();\n\t        // area.beginFill(0xFFFFFF);\n\t        // area.drawRect(0, 0, Global.gameWidth, Global.gameHeight);\n\t        // area.endFill();\n\t        // stage.addChild(area);\n\t        Global.gameEvent.emit('gameStart');\n\t        animate();\n\t      });\n\t    }, function() {\n\t      alert(\"Loading failed\");\n\t    });\n\t  })();\n\t\n\t  function animate() {\n\t    requestAnimationFrame(animate);\n\t    gameEngine.update();\n\t    renderer.render(stage);\n\t  }\n\t\n\t  winObject.on(\"resize\", resize);\n\t  resize();\n\t\n\t  function resize() {\n\t    var screenWidth, stageWidth, screenHeight, stageHeight;\n\t    screenWidth = stageWidth = winObject.width();\n\t    screenHeight = stageHeight = winObject.height();\n\t    var gameWidth = Global.gameWidth;\n\t    var gameHeight = Global.gameHeight;\n\t    var screenRatio = gameHeight / gameWidth;\n\t    if (stageHeight / stageWidth < screenRatio)\n\t      stageWidth = stageHeight / screenRatio;\n\t    else\n\t      stageHeight = stageWidth * screenRatio;\n\t    mask.clear();\n\t    mask.beginFill(0xFFFFFF, 1);\n\t    var x = (screenWidth - stageWidth) / 2;\n\t    var y = (screenHeight - stageHeight) / 2;\n\t    mask.drawRect(x, y, stageWidth, stageHeight);\n\t    mask.endFill();\n\t    stage.x = x;\n\t    stage.y = y;\n\t    stage.scale.x = stageWidth / gameWidth;\n\t    stage.scale.y = stageHeight / gameHeight;\n\t    renderer.resize(screenWidth, screenHeight);\n\t    Score.updatePosition(x, y);\n\t    Level.updatePosition(x, y, stageWidth);\n\t  }\n\t});\n\n\n/***/ },\n/* 1 */\n/***/ function(module, exports) {\n\n\tmodule.exports = PIXI;\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tconst EventEmitter = __webpack_require__(3);\n\tconst Input = __webpack_require__(4);\n\tmodule.exports = {\n\t  init: function(stage) {\n\t    this.gameStage = stage;\n\t    this.Input = new Input(stage);\n\t  },\n\t  gameStage: null,\n\t  gameWidth: 500,\n\t  gameHeight: 800,\n\t  gameEvent: new EventEmitter(),\n\t  gameStartTime: null,\n\t  Input: null\n\t};\n\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar has = Object.prototype.hasOwnProperty;\n\t\n\t//\n\t// We store our EE objects in a plain object whose properties are event names.\n\t// If `Object.create(null)` is not supported we prefix the event names with a\n\t// `~` to make sure that the built-in object properties are not overridden or\n\t// used as an attack vector.\n\t// We also assume that `Object.create(null)` is available when the event name\n\t// is an ES6 Symbol.\n\t//\n\tvar prefix = typeof Object.create !== 'function' ? '~' : false;\n\t\n\t/**\n\t * Representation of a single EventEmitter function.\n\t *\n\t * @param {Function} fn Event handler to be called.\n\t * @param {Mixed} context Context for function execution.\n\t * @param {Boolean} [once=false] Only emit once\n\t * @api private\n\t */\n\tfunction EE(fn, context, once) {\n\t  this.fn = fn;\n\t  this.context = context;\n\t  this.once = once || false;\n\t}\n\t\n\t/**\n\t * Minimal EventEmitter interface that is molded against the Node.js\n\t * EventEmitter interface.\n\t *\n\t * @constructor\n\t * @api public\n\t */\n\tfunction EventEmitter() { /* Nothing to set */ }\n\t\n\t/**\n\t * Hold the assigned EventEmitters by name.\n\t *\n\t * @type {Object}\n\t * @private\n\t */\n\tEventEmitter.prototype._events = undefined;\n\t\n\t/**\n\t * Return an array listing the events for which the emitter has registered\n\t * listeners.\n\t *\n\t * @returns {Array}\n\t * @api public\n\t */\n\tEventEmitter.prototype.eventNames = function eventNames() {\n\t  var events = this._events\n\t    , names = []\n\t    , name;\n\t\n\t  if (!events) return names;\n\t\n\t  for (name in events) {\n\t    if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);\n\t  }\n\t\n\t  if (Object.getOwnPropertySymbols) {\n\t    return names.concat(Object.getOwnPropertySymbols(events));\n\t  }\n\t\n\t  return names;\n\t};\n\t\n\t/**\n\t * Return a list of assigned event listeners.\n\t *\n\t * @param {String} event The events that should be listed.\n\t * @param {Boolean} exists We only need to know if there are listeners.\n\t * @returns {Array|Boolean}\n\t * @api public\n\t */\n\tEventEmitter.prototype.listeners = function listeners(event, exists) {\n\t  var evt = prefix ? prefix + event : event\n\t    , available = this._events && this._events[evt];\n\t\n\t  if (exists) return !!available;\n\t  if (!available) return [];\n\t  if (available.fn) return [available.fn];\n\t\n\t  for (var i = 0, l = available.length, ee = new Array(l); i < l; i++) {\n\t    ee[i] = available[i].fn;\n\t  }\n\t\n\t  return ee;\n\t};\n\t\n\t/**\n\t * Emit an event to all registered event listeners.\n\t *\n\t * @param {String} event The name of the event.\n\t * @returns {Boolean} Indication if we've emitted an event.\n\t * @api public\n\t */\n\tEventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n\t  var evt = prefix ? prefix + event : event;\n\t\n\t  if (!this._events || !this._events[evt]) return false;\n\t\n\t  var listeners = this._events[evt]\n\t    , len = arguments.length\n\t    , args\n\t    , i;\n\t\n\t  if ('function' === typeof listeners.fn) {\n\t    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\n\t\n\t    switch (len) {\n\t      case 1: return listeners.fn.call(listeners.context), true;\n\t      case 2: return listeners.fn.call(listeners.context, a1), true;\n\t      case 3: return listeners.fn.call(listeners.context, a1, a2), true;\n\t      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;\n\t      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n\t      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n\t    }\n\t\n\t    for (i = 1, args = new Array(len -1); i < len; i++) {\n\t      args[i - 1] = arguments[i];\n\t    }\n\t\n\t    listeners.fn.apply(listeners.context, args);\n\t  } else {\n\t    var length = listeners.length\n\t      , j;\n\t\n\t    for (i = 0; i < length; i++) {\n\t      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\n\t\n\t      switch (len) {\n\t        case 1: listeners[i].fn.call(listeners[i].context); break;\n\t        case 2: listeners[i].fn.call(listeners[i].context, a1); break;\n\t        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;\n\t        default:\n\t          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {\n\t            args[j - 1] = arguments[j];\n\t          }\n\t\n\t          listeners[i].fn.apply(listeners[i].context, args);\n\t      }\n\t    }\n\t  }\n\t\n\t  return true;\n\t};\n\t\n\t/**\n\t * Register a new EventListener for the given event.\n\t *\n\t * @param {String} event Name of the event.\n\t * @param {Function} fn Callback function.\n\t * @param {Mixed} [context=this] The context of the function.\n\t * @api public\n\t */\n\tEventEmitter.prototype.on = function on(event, fn, context) {\n\t  var listener = new EE(fn, context || this)\n\t    , evt = prefix ? prefix + event : event;\n\t\n\t  if (!this._events) this._events = prefix ? {} : Object.create(null);\n\t  if (!this._events[evt]) this._events[evt] = listener;\n\t  else {\n\t    if (!this._events[evt].fn) this._events[evt].push(listener);\n\t    else this._events[evt] = [\n\t      this._events[evt], listener\n\t    ];\n\t  }\n\t\n\t  return this;\n\t};\n\t\n\t/**\n\t * Add an EventListener that's only called once.\n\t *\n\t * @param {String} event Name of the event.\n\t * @param {Function} fn Callback function.\n\t * @param {Mixed} [context=this] The context of the function.\n\t * @api public\n\t */\n\tEventEmitter.prototype.once = function once(event, fn, context) {\n\t  var listener = new EE(fn, context || this, true)\n\t    , evt = prefix ? prefix + event : event;\n\t\n\t  if (!this._events) this._events = prefix ? {} : Object.create(null);\n\t  if (!this._events[evt]) this._events[evt] = listener;\n\t  else {\n\t    if (!this._events[evt].fn) this._events[evt].push(listener);\n\t    else this._events[evt] = [\n\t      this._events[evt], listener\n\t    ];\n\t  }\n\t\n\t  return this;\n\t};\n\t\n\t/**\n\t * Remove event listeners.\n\t *\n\t * @param {String} event The event we want to remove.\n\t * @param {Function} fn The listener that we need to find.\n\t * @param {Mixed} context Only remove listeners matching this context.\n\t * @param {Boolean} once Only remove once listeners.\n\t * @api public\n\t */\n\tEventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\n\t  var evt = prefix ? prefix + event : event;\n\t\n\t  if (!this._events || !this._events[evt]) return this;\n\t\n\t  var listeners = this._events[evt]\n\t    , events = [];\n\t\n\t  if (fn) {\n\t    if (listeners.fn) {\n\t      if (\n\t           listeners.fn !== fn\n\t        || (once && !listeners.once)\n\t        || (context && listeners.context !== context)\n\t      ) {\n\t        events.push(listeners);\n\t      }\n\t    } else {\n\t      for (var i = 0, length = listeners.length; i < length; i++) {\n\t        if (\n\t             listeners[i].fn !== fn\n\t          || (once && !listeners[i].once)\n\t          || (context && listeners[i].context !== context)\n\t        ) {\n\t          events.push(listeners[i]);\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  //\n\t  // Reset the array, or remove it completely if we have no more listeners.\n\t  //\n\t  if (events.length) {\n\t    this._events[evt] = events.length === 1 ? events[0] : events;\n\t  } else {\n\t    delete this._events[evt];\n\t  }\n\t\n\t  return this;\n\t};\n\t\n\t/**\n\t * Remove all listeners or only the listeners for the specified event.\n\t *\n\t * @param {String} event The event want to remove all listeners for.\n\t * @api public\n\t */\n\tEventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\n\t  if (!this._events) return this;\n\t\n\t  if (event) delete this._events[prefix ? prefix + event : event];\n\t  else this._events = prefix ? {} : Object.create(null);\n\t\n\t  return this;\n\t};\n\t\n\t//\n\t// Alias methods names because people roll like that.\n\t//\n\tEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\tEventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\t\n\t//\n\t// This function doesn't apply anymore.\n\t//\n\tEventEmitter.prototype.setMaxListeners = function setMaxListeners() {\n\t  return this;\n\t};\n\t\n\t//\n\t// Expose the prefix.\n\t//\n\tEventEmitter.prefixed = prefix;\n\t\n\t//\n\t// Expose the module.\n\t//\n\tif (true) {\n\t  module.exports = EventEmitter;\n\t}\n\n\n/***/ },\n/* 4 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tconst EventEmitter = __webpack_require__(3);\n\tconst Extends = __webpack_require__(5);\n\tconst Global = __webpack_require__(2);\n\t\n\tfunction Input(stage) {\n\t  var that = this;\n\t  EventEmitter.call(that);\n\t\n\t  var keyDownList = {};\n\t  // var pointerList = {};\n\t\n\t  that.KEY_LEFT = 37;\n\t  that.KEY_UP = 38;\n\t  that.KEY_RIGHT = 39;\n\t  that.KEY_DOWN = 40;\n\t\n\t  $(function() {\n\t    $(window)\n\t      .keydown(keyListener)\n\t      .keyup(keyListener)\n\t      .keypress(keyListener);\n\t  });\n\t\n\t  function keyListener(event) {\n\t    that.emit(event.type, event);\n\t    if (event.type == \"keydown\")\n\t      keyDownList[event.keyCode] = true;\n\t    else if (event.type == \"keyup\")\n\t      keyDownList[event.keyCode] = false;\n\t  }\n\t\n\t  function pointerListener(event) {\n\t    event.data.local = stage.toLocal(event.data.global);\n\t    that.emit(event.type, event);\n\t  }\n\t\n\t  that.isDown = function(key) {\n\t    return keyDownList[key];\n\t  };\n\t\n\t  that.isUp = function(key) {\n\t    return !keyDownList[key];\n\t  };\n\t\n\t  // that.isPointerDown = function() {\n\t  //\n\t  // };\n\t  //\n\t  // that.isPointerUp = function() {\n\t  //\n\t  // };\n\t  //\n\t  // that.isPointerMove = function() {\n\t  //\n\t  // };\n\t  //\n\t  // function pointerListener(event) {\n\t  // }\n\t  //\n\t\n\t  stage.interactive = true;\n\t  stage\n\t    .on('mousedown', pointerListener)\n\t    .on('touchstart', pointerListener)\n\t    .on('mouseup', pointerListener)\n\t    .on('touchend', pointerListener)\n\t    .on('mouseupoutside', pointerListener)\n\t    .on('touchendoutside', pointerListener)\n\t    .on('mousemove', pointerListener)\n\t    .on('touchmove', pointerListener);\n\t}\n\tExtends(Input, EventEmitter);\n\tmodule.exports = Input;\n\n\n/***/ },\n/* 5 */\n/***/ function(module, exports) {\n\n\tmodule.exports = function(target, source) {\n\t  target.prototype = Object.create(source.prototype);\n\t  target.prototype.constructor = target;\n\t};\n\n\n/***/ },\n/* 6 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// const Howl = require('Howl');\n\tconst SoundJS = __webpack_require__(7);\n\t\n\tconst Global = __webpack_require__(2);\n\t\n\tvar instance = null;\n\t\n\tfunction SoundSystem() {\n\t  var path = \"sound/\";\n\t  var sounds = {\n\t    laser: \"laser\",\n\t    explosion1: \"explosion1\",\n\t    explosion2: \"explosion2\",\n\t    explosion3: \"explosion3\",\n\t    music: \"music\"\n\t  };\n\t\n\t  var laserDelay = 200;\n\t  var laserVolume = 0.2;\n\t  var lastTick;\n\t\n\t  (function() {\n\t    var done = 0;\n\t    var array = [];\n\t\n\t    function checkDone() {\n\t      done++;\n\t      if (done >= Object.keys(sounds).length) {\n\t        done = array = null;\n\t        Global.gameEvent.emit('soundDone');\n\t      }\n\t    }\n\t\n\t    function loadFail() {\n\t      Global.gameEvent.emit('soundFail');\n\t    }\n\t\n\t    SoundJS.on(\"fileload\", checkDone);\n\t    SoundJS.on(\"fileerror\", loadFail);\n\t\n\t    for (var i in sounds)\n\t      array.push({\n\t        id: i,\n\t        src: sounds[i] + \".mp3\"\n\t      });\n\t\n\t    SoundJS.registerSounds(array, path);\n\t  })();\n\t\n\t  Global.gameEvent.on('explosion', function(x, y, big) {\n\t    if (big)\n\t      SoundJS.play(sounds.explosion2);\n\t    else\n\t      SoundJS.play(sounds.explosion1);\n\t  });\n\t  Global.gameEvent.on('dead', function() {\n\t    SoundJS.play(sounds.explosion3);\n\t  });\n\t  Global.gameEvent.on('shoot', function() {\n\t    var currentTime = Date.now();\n\t    if (lastTick && currentTime - lastTick < laserDelay) return;\n\t    lastTick = currentTime;\n\t    SoundJS.play(sounds.laser, {\n\t      volume: laserVolume\n\t    });\n\t  });\n\t  Global.gameEvent.once('gameStart', function() {\n\t    SoundJS.play(sounds.music, {\n\t      loop: -1\n\t    });\n\t  });\n\t}\n\t\n\tmodule.exports = {\n\t  init: function() {\n\t    if (instance) return instance;\n\t    instance = new SoundSystem();\n\t    return instance;\n\t  }\n\t};\n\n\n/***/ },\n/* 7 */\n/***/ function(module, exports) {\n\n\tmodule.exports = createjs.Sound;\n\n/***/ },\n/* 8 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tconst PIXI = __webpack_require__(1);\n\t\n\tconst Global = __webpack_require__(2);\n\tconst Assets = __webpack_require__(9);\n\tconst Background = __webpack_require__(10);\n\tconst Plane = __webpack_require__(11);\n\tconst BulletSystem = __webpack_require__(15);\n\tconst RockArray = __webpack_require__(16);\n\tconst BankArray = __webpack_require__(18);\n\tconst ExplosionSystem = __webpack_require__(20);\n\tconst Score = __webpack_require__(22);\n\tconst Level = __webpack_require__(23);\n\t\n\tfunction GameEngine(stage) {\n\t  var that = this;\n\t\n\t  var lastTick = Date.now();\n\t  var gameObjectList = [];\n\t  var currentScore = 0;\n\t  var currentLevel = 1;\n\t  var rocks;\n\t  var banks;\n\t\n\t  var bankSpawnConstant = 10000;\n\t  var bankTick;\n\t\n\t  function addScore(score) {\n\t    currentScore += score;\n\t    Score.updateScore(currentScore);\n\t    if (currentLevel < 4 && currentLevel < currentScore / 500) {\n\t      currentLevel++;\n\t      Level.updateLevel(currentLevel);\n\t      rocks.updateLevel(currentLevel);\n\t    }\n\t  }\n\t\n\t  function resetScore() {\n\t    currentScore = 0;\n\t    Score.updateScore(currentScore);\n\t  }\n\t\n\t  that.init = function() {\n\t    var resources = PIXI.loader.resources;\n\t\n\t    var plane = new Plane(resources[Assets.plane.name].texture);\n\t\n\t    var bg = new Background(resources[Assets.bg.name].texture, plane);\n\t\n\t    rocks = new RockArray();\n\t\n\t    banks = new BankArray();\n\t\n\t    stage.addChild(bg);\n\t    stage.addChild(plane);\n\t    var bullets = BulletSystem.getInstance(stage, resources[Assets.bullet.name].texture);\n\t    stage.addChild(rocks);\n\t    stage.addChild(banks);\n\t\n\t    ExplosionSystem.getInstance(stage);\n\t\n\t    gameObjectList.push(plane);\n\t    gameObjectList.push(bg);\n\t    gameObjectList.push(bullets);\n\t    gameObjectList.push(rocks);\n\t    gameObjectList.push(banks);\n\t\n\t    for (var i = 0, l = gameObjectList.length; i < l; i++)\n\t      gameObjectList[i].init();\n\t\n\t    Global.gameStartTime = Date.now();\n\t    Global.gameEvent.on('score', addScore);\n\t    Global.gameEvent.on('resetscore', resetScore);\n\t\n\t    bankTick = Date.now();\n\t  };\n\t\n\t  that.update = function() {\n\t    var currentTime = Date.now();\n\t    var delta = (currentTime - lastTick) * 0.001;\n\t    for (var i = 0, l = gameObjectList.length; i < l; i++)\n\t      gameObjectList[i].update(delta);\n\t    if (currentTime - bankTick > bankSpawnConstant) {\n\t      banks.spawn();\n\t      bankTick = currentTime;\n\t    }\n\t    lastTick = currentTime;\n\t  };\n\t}\n\tmodule.exports = GameEngine;\n\n\n/***/ },\n/* 9 */\n/***/ function(module, exports) {\n\n\tmodule.exports = {\n\t  plane: {\n\t    name: \"plane\",\n\t    url: \"redfighter.png\"\n\t  },\n\t  bg: {\n\t    name: \"bg\",\n\t    url: \"spacebg.jpg\"\n\t  },\n\t  rock1: {\n\t    name: \"rock1\",\n\t    url: \"rock1.png\"\n\t  },\n\t  rock2: {\n\t    name: \"rock2\",\n\t    url: \"rock2.png\"\n\t  },\n\t  bullet: {\n\t    name: \"bullet\",\n\t    url: \"bullet.png\"\n\t  },\n\t  explosion1: {\n\t    name: \"explosion1\",\n\t    url: \"explosion1.json\"\n\t  },\n\t  explosion2: {\n\t    name: \"explosion2\",\n\t    url: \"explosion2.json\"\n\t  },\n\t  dbs: {\n\t    name: \"dbs\",\n\t    url: \"dbs.png\"\n\t  },\n\t  standard: {\n\t    name: \"standard\",\n\t    url: \"standard.png\"\n\t  },\n\t  uob: {\n\t    name: \"uob\",\n\t    url: \"uob.png\"\n\t  }\n\t};\n\n\n/***/ },\n/* 10 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tconst PIXI = __webpack_require__(1);\n\t\n\tconst Global = __webpack_require__(2);\n\tconst Extends = __webpack_require__(5);\n\t\n\tfunction Background(texture, plane) {\n\t  var that = this;\n\t  PIXI.Container.call(that);\n\t\n\t  var speedY = 50;\n\t  var resetHeight;\n\t  var movableWidth;\n\t  var minX = plane.minX;\n\t  var planeMovableWidth = plane.maxX - minX;\n\t\n\t  that.init = function() {\n\t    var sprite = new PIXI.Sprite(texture);\n\t    that.addChild(sprite);\n\t    resetHeight = sprite.height;\n\t    sprite = new PIXI.Sprite(texture);\n\t    sprite.y = -resetHeight;\n\t    that.addChild(sprite);\n\t    that.scale.x = that.scale.y = Global.gameHeight / resetHeight;\n\t    resetHeight = that.height / 2;\n\t    that.cacheAsBitmap = true;\n\t    movableWidth = that.width - Global.gameWidth;\n\t  };\n\t\n\t  that.update = function(dt) {\n\t    that.y += speedY * dt;\n\t    if (that.y > resetHeight)\n\t      that.y -= resetHeight;\n\t    that.x = -movableWidth * (plane.x - minX) / planeMovableWidth;\n\t  };\n\t}\n\tExtends(Background, PIXI.Container);\n\tmodule.exports = Background;\n\n\n/***/ },\n/* 11 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tconst PIXI = __webpack_require__(1);\n\tconst TweenMax = __webpack_require__(12);\n\tconst TimelineMax = __webpack_require__(13);\n\t\n\tconst Global = __webpack_require__(2);\n\tconst Extends = __webpack_require__(5);\n\tconst Collision = __webpack_require__(14);\n\t\n\tfunction Plane(texture) {\n\t  var that = this;\n\t  PIXI.Sprite.call(that, texture);\n\t\n\t  var stopped = true;\n\t  var speed = 500;\n\t  var moveToPosition = null;\n\t\n\t  var isDown = false;\n\t\n\t  that.maxX = Global.gameWidth - that.width / 2;\n\t  that.minX = that.width / 2;\n\t\n\t  var timeline;\n\t  var deathTime;\n\t\n\t  function onPointerDown(event) {\n\t    isDown = true;\n\t    moveToPosition = event.data.local;\n\t  }\n\t\n\t  function onPointerUp() {\n\t    isDown = false;\n\t    moveToPosition = null;\n\t  }\n\t\n\t  function onPointerMove(event) {\n\t    if (isDown) moveToPosition = event.data.local;\n\t  }\n\t\n\t  function spawn() {\n\t    that.scale.x = that.scale.y = 1;\n\t    that.y = Global.gameHeight;\n\t    if (timeline) {\n\t      timeline.play(0);\n\t      return;\n\t    }\n\t    var y1 = that.y - that.height;\n\t    var y2 = y1 + that.height / 2;\n\t    timeline = new TimelineMax();\n\t    timeline.add(TweenMax.to(that.scale, 1.5, {\n\t      x: 0.5,\n\t      y: 0.5\n\t    }), 0);\n\t    timeline.add(TweenMax.to(that, 0.5, {\n\t      y: y1\n\t    }), 0);\n\t    timeline.add(TweenMax.to(that, 1, {\n\t      y: y2,\n\t      onComplete: function() {\n\t        stopped = false;\n\t        Global.gameEvent.emit('spawn');\n\t      }\n\t    }), 0.5);\n\t  }\n\t\n\t  that.init = function() {\n\t    that.anchor.x = that.anchor.y = 0.5;\n\t    that.x = Global.gameWidth / 2;\n\t    Global.Input\n\t      .on('mousedown', onPointerDown)\n\t      .on('touchstart', onPointerDown)\n\t      .on('mouseup', onPointerUp)\n\t      .on('touchend', onPointerUp)\n\t      .on('mouseupoutside', onPointerUp)\n\t      .on('touchendoutside', onPointerUp)\n\t      .on('mousemove', onPointerMove)\n\t      .on('touchmove', onPointerMove);\n\t    that.scale.x = that.scale.y = 0.5;\n\t    Collision.addGroup(that, 'plane', Collision.TYPE_CIRCLE, {\n\t      width: that.width - 10,\n\t      height: that.height - 10\n\t    });\n\t    spawn();\n\t  };\n\t\n\t  that.update = function(dt) {\n\t    if (!that.visible) {\n\t      if (Date.now() - deathTime >= 5000) {\n\t        that.visible = true;\n\t        spawn();\n\t      } else\n\t        return;\n\t    }\n\t    if (stopped) return;\n\t    if (moveToPosition) {\n\t      if (that.x != moveToPosition.x) {\n\t        var moveToX = moveToPosition.x;\n\t        var distance = Math.min(speed * dt, Math.abs(moveToX - that.x));\n\t        that.x += (that.x < moveToX) ? distance : -distance;\n\t      }\n\t    } else {\n\t      var keyLeft = Global.Input.isDown(Global.Input.KEY_LEFT);\n\t      var keyRight = Global.Input.isDown(Global.Input.KEY_RIGHT);\n\t      if (keyLeft || keyRight)\n\t        that.x += (keyLeft ? -1 : 1) * speed * dt;\n\t    }\n\t\n\t    //check position\n\t    if (that.x > that.maxX)\n\t      that.x = that.maxX;\n\t    else if (that.x < that.minX)\n\t      that.x = that.minX;\n\t\n\t    Global.gameEvent.emit('shoot', that.x, that.y);\n\t\n\t    //check collision with rock\n\t    var target = Collision.isCollide(that, 'rock');\n\t    if (target) {\n\t      target.visible = false;\n\t      that.visible = false;\n\t      deathTime = Date.now();\n\t      Global.gameEvent.emit('dead');\n\t      Global.gameEvent.emit('explosion', target.x, target.y, target.isBig);\n\t      Global.gameEvent.emit('explosion', that.x, that.y);\n\t      stopped = true;\n\t    }\n\t  };\n\t}\n\tExtends(Plane, PIXI.Sprite);\n\tmodule.exports = Plane;\n\n\n/***/ },\n/* 12 */\n/***/ function(module, exports) {\n\n\tmodule.exports = TweenMax;\n\n/***/ },\n/* 13 */\n/***/ function(module, exports) {\n\n\tmodule.exports = TimelineMax;\n\n/***/ },\n/* 14 */\n/***/ function(module, exports) {\n\n\t// not complete\n\t// rotation not in the calculation\n\t\n\tvar groups = {};\n\t\n\tfunction rect_rect(x1, y1, width1, height1, x2, y2, width2, height2) {\n\t  return Math.abs(x1 - x2) < (width1 + width2) / 2 && Math.abs(y1 - y2) < (height1 + height2) / 2;\n\t}\n\t\n\t// not accurate\n\tfunction rect_cir(x1, y1, width1, height1, x2, y2, width2, height2) {\n\t  var halfWidth1 = width1 / 2;\n\t  var halfHeight1 = height1 / 2;\n\t  var testX = (x1 > x2) ? x1 - halfWidth1 : x1 + halfWidth1;\n\t  var testY = (y1 > y2) ? y1 - halfHeight1 : y1 + halfHeight1;\n\t  return getDistance(Math.abs(testX - x2), Math.abs(testY - y2)) < height2 / 2;\n\t}\n\t\n\tfunction getDistance(x, y) {\n\t  return Math.sqrt(Math.pow(x, 2) + Math.pow(y, 2));\n\t}\n\t\n\tfunction cir_cir(x1, y1, width1, height1, x2, y2, width2, height2) {\n\t  var totalRadius = height1 / 2 + height2 / 2;\n\t  var distance = getDistance(Math.abs(x1 - x2), Math.abs(y1 - y2));\n\t  return distance < totalRadius;\n\t}\n\t\n\tfunction checkCollision(x1, y1, width1, height1, type1, x2, y2, width2, height2, type2) {\n\t  if (type1 == Collision.TYPE_RECTANGLE) {\n\t    if (type2 == Collision.TYPE_RECTANGLE)\n\t      return rect_rect(x1, y1, width1, height1, x2, y2, width2, height2);\n\t    else\n\t      return rect_cir(x1, y1, width1, height1, x2, y2, width2, height2);\n\t  } else {\n\t    if (type2 == Collision.TYPE_RECTANGLE)\n\t      return rect_cir(x2, y2, width2, height2, x1, y1, width1, height1);\n\t    else\n\t      return cir_cir(x1, y1, width1, height1, x2, y2, width2, height2);\n\t  }\n\t}\n\t\n\tvar Collision = {\n\t  TYPE_RECTANGLE: 0,\n\t  TYPE_CIRCLE: 1,\n\t  addGroup: function(instance, group, type, area) {\n\t    if (!type) instance.collisionType = this.TYPE_RECTANGLE;\n\t    else instance.collisionType = type;\n\t    if (area)\n\t      instance.collisionArea = {\n\t        width: area.width,\n\t        height: area.height\n\t      };\n\t    else\n\t      instance.collisionArea = {\n\t        width: instance.width,\n\t        height: instance.height\n\t      };\n\t    var array = groups[group];\n\t    if (array)\n\t      array.push(instance);\n\t    else\n\t      groups[group] = [instance];\n\t  },\n\t  isCollide: function(instance, group) {\n\t    if (!instance.visible) return;\n\t    var width1 = instance.collisionArea.width;\n\t    var height1 = instance.collisionArea.height;\n\t    var x1 = instance.x + (0.5 - instance.anchor.x) * width1;\n\t    var y1 = instance.y + (0.5 - instance.anchor.y) * height1;\n\t    var type1 = instance.collisionType;\n\t    var array = groups[group];\n\t    var target, width2, height2, x2, y2, type2;\n\t    for (var i = 0, l = array.length; i < l; i++) {\n\t      target = array[i];\n\t      if (!target.visible) continue;\n\t      width2 = target.collisionArea.width;\n\t      height2 = target.collisionArea.height;\n\t      x2 = target.x + (0.5 - target.anchor.x) * width2;\n\t      y2 = target.y + (0.5 - target.anchor.y) * height2;\n\t      type2 = target.collisionType;\n\t      if (checkCollision(x1, y1, width1, height1, type1, x2, y2, width2, height2, type2))\n\t        return target;\n\t    }\n\t    return null;\n\t  }\n\t};\n\tmodule.exports = Collision;\n\n\n/***/ },\n/* 15 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tconst PIXI = __webpack_require__(1);\n\t\n\tconst Global = __webpack_require__(2);\n\tconst Collision = __webpack_require__(14);\n\t\n\tvar instance = null;\n\t\n\tfunction BulletSystem(stage, texture) {\n\t  var that = this;\n\t\n\t  var count = 20;\n\t\n\t  var bullets = [];\n\t  var updates = [];\n\t\n\t  var lastFire = null;\n\t  var firePerSecond = 10;\n\t  var speed = 1000;\n\t\n\t  function shoot(x, y) {\n\t    var currentTime = Date.now();\n\t    if (lastFire && currentTime - lastFire < 1000 / firePerSecond) return;\n\t    lastFire = currentTime;\n\t    var bullet = bullets.pop();\n\t    bullet.x = x;\n\t    bullet.y = y;\n\t    updates.push(bullet);\n\t    bullet.visible = true;\n\t  }\n\t\n\t  for (var i = 0; i < count; i++) {\n\t    var bullet = new PIXI.Sprite(texture);\n\t    bullet.anchor.x = bullet.anchor.y = 0.5;\n\t    bullet.visible = false;\n\t    stage.addChild(bullet);\n\t    bullets.push(bullet);\n\t    Collision.addGroup(bullet, 'bullet');\n\t  }\n\t  Global.gameEvent.on('shoot', shoot);\n\t\n\t  that.init = function() {};\n\t\n\t  that.update = function(dt) {\n\t    for (var i = 0, l = updates.length; i < l; i++) {\n\t      var bullet = updates[i];\n\t      bullet.y -= speed * dt;\n\t      if (bullet.y < -bullet.height || !bullet.visible) {\n\t        bullet.visible = false;\n\t        bullets.push(bullet);\n\t        updates.splice(i, 1);\n\t        l--;\n\t        i--;\n\t      }\n\t    }\n\t  };\n\t}\n\t\n\tmodule.exports = {\n\t  getInstance: function(stage, texture) {\n\t    if (instance) return instance;\n\t    instance = new BulletSystem(stage, texture);\n\t    return instance;\n\t  }\n\t};\n\n\n/***/ },\n/* 16 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tconst PIXI = __webpack_require__(1);\n\t\n\tconst Global = __webpack_require__(2);\n\tconst Extends = __webpack_require__(5);\n\tconst Assets = __webpack_require__(9);\n\tconst Rock = __webpack_require__(17);\n\t\n\tfunction RockArray() {\n\t  var that = this;\n\t  var count = 40;\n\t\n\t  PIXI.Container.call(that);\n\t\n\t  var rockNames = [Assets.rock1.name, Assets.rock2.name];\n\t  var totalNames = rockNames.length;\n\t  var rocks = {};\n\t  var updates = [];\n\t\n\t  var stopped = true;\n\t  var lastFire = null;\n\t  var spawnConstant = 2;\n\t  var rocksPerSecond = spawnConstant;\n\t\n\t  function spawnRock() {\n\t    var currentTime = Date.now();\n\t    if (stopped ||\n\t      updates.length > totalNames * count ||\n\t      (lastFire && currentTime - lastFire < 1000 / rocksPerSecond))\n\t      return;\n\t    lastFire = currentTime;\n\t    var name = rockNames[Math.floor(Math.random() * totalNames)];\n\t    var rock;\n\t    while (!rock) {\n\t      rock = rocks[name].pop();\n\t      if (!rock) {\n\t        name = (name + 1) % totalNames;\n\t        return;\n\t      }\n\t      rock.refresh();\n\t      updates.push(rock);\n\t      rock.visible = true;\n\t    }\n\t  }\n\t\n\t  that.init = function() {\n\t    var resources = PIXI.loader.resources;\n\t    var i, j, name, texture, array, rock;\n\t    for (j = 0; j < totalNames; j++) {\n\t      name = rockNames[j];\n\t      texture = resources[name].texture;\n\t      array = rocks[name] = [];\n\t      for (i = 0; i < count; i++) {\n\t        rock = new Rock(name, texture);\n\t        rock.init();\n\t        rock.visible = false;\n\t        that.addChild(rock);\n\t        array.push(rock);\n\t      }\n\t    }\n\t    Global.gameEvent.on('spawn', function() {\n\t      stopped = false;\n\t    });\n\t    Global.gameEvent.on('dead', function() {\n\t      stopped = true;\n\t    });\n\t  };\n\t\n\t  that.update = function(dt) {\n\t    for (var i = 0, l = updates.length; i < l; i++) {\n\t      var rock = updates[i];\n\t      if (rock.visible && rock.y < Global.gameHeight + rock.height)\n\t        rock.update(dt);\n\t      else {\n\t        rocks[rock.type].push(rock);\n\t        updates.splice(i, 1);\n\t        l--;\n\t        i--;\n\t      }\n\t    }\n\t    spawnRock();\n\t  };\n\t\n\t  that.updateLevel = function(level) {\n\t    rocksPerSecond = level * spawnConstant;\n\t  };\n\t}\n\tExtends(RockArray, PIXI.Container);\n\tmodule.exports = RockArray;\n\n\n/***/ },\n/* 17 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tconst PIXI = __webpack_require__(1);\n\t\n\tconst Global = __webpack_require__(2);\n\tconst Extends = __webpack_require__(5);\n\tconst Collision = __webpack_require__(14);\n\tconst Assets = __webpack_require__(9);\n\t\n\tfunction Rock(textureName, texture) {\n\t  var that = this;\n\t  PIXI.Sprite.call(that, texture);\n\t\n\t  if (textureName == Assets.rock1.name)\n\t    that.initialLife = 4;\n\t  else\n\t    that.initialLife = 1;\n\t\n\t  that.type = textureName;\n\t  that.isBig = textureName == Assets.rock1.name;\n\t\n\t  var speedConstant = (that.isBig) ? 2 : 4;\n\t\n\t  function refresh() {\n\t    that.x = Global.gameWidth / 4 + (Math.random() * Global.gameWidth) / 2;\n\t    that.y = -that.height;\n\t    that.speedX = (Math.random() * 1 - 0.5) * 100;\n\t    that.speedY = (1.5 + Math.random() * speedConstant) * 100;\n\t    that.speedRotation = (Math.random() * 1 - 0.5) * 10;\n\t    that.life = that.initialLife;\n\t  }\n\t\n\t  that.refresh = refresh;\n\t\n\t  that.init = function() {\n\t    that.anchor.x = that.anchor.y = 0.5;\n\t    Collision.addGroup(that, 'rock', Collision.TYPE_CIRCLE);\n\t    refresh();\n\t  };\n\t\n\t  that.update = function(dt) {\n\t    that.x += that.speedX * dt;\n\t    that.y += that.speedY * dt;\n\t    if (that.y > Global.gameHeight + that.height) {\n\t      that.visible = false;\n\t      return;\n\t    }\n\t    var target = Collision.isCollide(that, 'bullet');\n\t    that.rotation += that.speedRotation * dt;\n\t    if (target) {\n\t      target.visible = false;\n\t      that.life--;\n\t      if (that.life > 0) return;\n\t      that.visible = false;\n\t      Global.gameEvent.emit('explosion', that.x, that.y, that.isBig);\n\t      if (that.isBig)\n\t        Global.gameEvent.emit('score', 10);\n\t      else\n\t        Global.gameEvent.emit('score', 5);\n\t    }\n\t  };\n\t}\n\tExtends(Rock, PIXI.Sprite);\n\tmodule.exports = Rock;\n\n\n/***/ },\n/* 18 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tconst PIXI = __webpack_require__(1);\n\t\n\tconst Global = __webpack_require__(2);\n\tconst Extends = __webpack_require__(5);\n\tconst Assets = __webpack_require__(9);\n\tconst Bank = __webpack_require__(19);\n\t\n\tfunction BankArray() {\n\t  var that = this;\n\t  var count = 2;\n\t\n\t  PIXI.Container.call(that);\n\t\n\t  var bankNames = [Assets.dbs.name, Assets.standard.name, Assets.uob.name];\n\t  var totalNames = bankNames.length;\n\t  var banks = {};\n\t  var updates = [];\n\t\n\t  function spawnBank() {\n\t    if (updates.length > totalNames * count) return;\n\t    var name = bankNames[Math.floor(Math.random() * totalNames)];\n\t    var bank;\n\t    while (!bank) {\n\t      bank = banks[name].pop();\n\t      if (!bank) {\n\t        name = (name + 1) % totalNames;\n\t        return;\n\t      }\n\t      bank.refresh();\n\t      updates.push(bank);\n\t      bank.visible = true;\n\t    }\n\t  }\n\t\n\t  that.init = function() {\n\t    var resources = PIXI.loader.resources;\n\t    var i, j, name, texture, array, bank;\n\t    for (j = 0; j < totalNames; j++) {\n\t      name = bankNames[j];\n\t      texture = resources[name].texture;\n\t      array = banks[name] = [];\n\t      for (i = 0; i < count; i++) {\n\t        bank = new Bank(name, texture);\n\t        bank.init();\n\t        bank.visible = false;\n\t        that.addChild(bank);\n\t        array.push(bank);\n\t      }\n\t    }\n\t  };\n\t\n\t  that.update = function(dt) {\n\t    for (var i = 0, l = updates.length; i < l; i++) {\n\t      var bank = updates[i];\n\t      if (bank.visible && bank.y < Global.gameHeight + bank.height)\n\t        bank.update(dt);\n\t      else {\n\t        banks[bank.type].push(bank);\n\t        updates.splice(i, 1);\n\t        l--;\n\t        i--;\n\t      }\n\t    }\n\t  };\n\t\n\t  that.spawn = spawnBank;\n\t}\n\tExtends(BankArray, PIXI.Container);\n\tmodule.exports = BankArray;\n\n\n/***/ },\n/* 19 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tconst PIXI = __webpack_require__(1);\n\t\n\tconst Global = __webpack_require__(2);\n\tconst Extends = __webpack_require__(5);\n\tconst Collision = __webpack_require__(14);\n\tconst Assets = __webpack_require__(9);\n\t\n\tfunction Bank(textureName, texture) {\n\t  var that = this;\n\t  PIXI.Sprite.call(that, texture);\n\t\n\t  that.type = textureName;\n\t\n\t  var initialLife = 10;\n\t  var speedConstant = 1;\n\t\n\t  that.refresh = function() {\n\t    that.x = Global.gameWidth / 4 + (Math.random() * Global.gameWidth) / 2;\n\t    that.y = -that.height;\n\t    that.speedX = (Math.random() * 1 - 0.5) * 100;\n\t    that.speedY = (1.5 + Math.random() * speedConstant) * 100;\n\t    that.life = initialLife;\n\t  };\n\t\n\t  that.init = function() {\n\t    that.anchor.x = that.anchor.y = 0.5;\n\t    that.refresh();\n\t    Collision.addGroup(that, 'bank');\n\t  };\n\t\n\t  that.update = function(dt) {\n\t    that.x += that.speedX * dt;\n\t    that.y += that.speedY * dt;\n\t    if (that.y > Global.gameHeight + that.height) {\n\t      that.visible = false;\n\t      return;\n\t    }\n\t    var target = Collision.isCollide(that, 'bullet');\n\t    if (target) {\n\t      target.visible = false;\n\t      that.life--;\n\t      if (that.life > 0) return;\n\t      that.visible = false;\n\t      Global.gameEvent.emit('explosion', that.x, that.y, true);\n\t      if (textureName == Assets.dbs.name)\n\t        Global.gameEvent.emit('resetscore');\n\t      else\n\t        Global.gameEvent.emit('score', 100);\n\t    }\n\t  };\n\t}\n\tExtends(Bank, PIXI.Sprite);\n\tmodule.exports = Bank;\n\n\n/***/ },\n/* 20 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tconst PIXI = __webpack_require__(1);\n\t\n\tconst Global = __webpack_require__(2);\n\tconst Assets = __webpack_require__(9);\n\tconst JsonToArray = __webpack_require__(21);\n\t\n\tvar instance = null;\n\t\n\tfunction ExplosionSystem(stage) {\n\t  var explosions = {};\n\t  var types = [{\n\t    name: Assets.explosion1.name,\n\t    count: 10\n\t  }, {\n\t    name: Assets.explosion2.name,\n\t    count: 20\n\t  }];\n\t\n\t  (function() {\n\t    var totalNames = types.length;\n\t    var i, j, type, count, textures, array, explosion;\n\t    var resources = PIXI.loader.resources;\n\t    for (i = 0; i < totalNames; i++) {\n\t      type = types[i].name;\n\t      count = types[i].count;\n\t      textures = JsonToArray.convert(resources[type].textures);\n\t      array = explosions[type] = [];\n\t      for (j = 0; j < count; j++) {\n\t        explosion = new PIXI.extras.MovieClip(textures);\n\t        explosion.anchor.x = explosion.anchor.y = 0.5;\n\t        explosion.loop = false;\n\t        explosion.type = type;\n\t        if (i == 0) {\n\t          explosion.animationSpeed = 0.5;\n\t          explosion.scale.x = explosion.scale.y = 2;\n\t        }\n\t        explosion.onComplete = function() {\n\t          this.visible = false;\n\t          explosions[this.type].push(this);\n\t        };\n\t        explosion.visible = false;\n\t        stage.addChild(explosion);\n\t        array.push(explosion);\n\t      }\n\t    }\n\t  })();\n\t\n\t  Global.gameEvent.on('explosion', function(x, y, big) {\n\t    var type;\n\t    if (big)\n\t      type = types[0].name;\n\t    else\n\t      type = types[1].name;\n\t    var explosion = explosions[type].pop();\n\t    if (explosion) {\n\t      explosion.rotation = ((Math.random() > 0.5) ? -1 : 1) * Math.random() * Math.PI;\n\t      explosion.x = x;\n\t      explosion.y = y;\n\t      explosion.visible = true;\n\t      explosion.gotoAndPlay(0);\n\t    }\n\t  });\n\t}\n\t\n\tmodule.exports = {\n\t  getInstance: function(stage) {\n\t    if (instance) return instance;\n\t    instance = new ExplosionSystem(stage);\n\t    return instance;\n\t  }\n\t};\n\n\n/***/ },\n/* 21 */\n/***/ function(module, exports) {\n\n\tmodule.exports = {\n\t  convert: function(jsonObject) {\n\t    var returnObj = [];\n\t    for (var i in jsonObject)\n\t      returnObj.push(jsonObject[i]);\n\t    return returnObj;\n\t  }\n\t};\n\n\n/***/ },\n/* 22 */\n/***/ function(module, exports) {\n\n\tvar scoreDiv;\n\tvar scoreSpan;\n\tmodule.exports = {\n\t  init: function() {\n\t    scoreDiv = $(\".scoreDiv\");\n\t    scoreSpan = $(\".scoreDiv span\");\n\t  },\n\t  updateScore: function(score) {\n\t    scoreSpan.html(score);\n\t  },\n\t  updatePosition: function(x, y) {\n\t    scoreDiv.css({\n\t      top: y,\n\t      left: x\n\t    });\n\t  }\n\t};\n\n\n/***/ },\n/* 23 */\n/***/ function(module, exports) {\n\n\tvar levelDiv;\n\tvar levelSpan;\n\tmodule.exports = {\n\t  init: function() {\n\t    levelDiv = $(\".levelDiv\");\n\t    levelSpan = $(\".levelDiv span\");\n\t  },\n\t  updateLevel: function(level) {\n\t    levelSpan.html(level);\n\t  },\n\t  updatePosition: function(x, y, width) {\n\t    levelDiv.css({\n\t      top: y,\n\t      left: x,\n\t      width: width\n\t    });\n\t  }\n\t};\n\n\n/***/ }\n/******/ ]);\n\n\n/** WEBPACK FOOTER **\n ** bundle.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap d988894b94978dc2eb8f\n **/","// require('../css/app.css');\n// require('babel-polyfill');\n//\n// import Point from './Point';\n// console.log(Point);\n\nconst PIXI = require('PIXI');\n\nconst Global = require('./Global');\nconst SoundSystem = require('./SoundSystem');\nconst GameEngine = require('./GameEngine');\nconst Assets = require('./GameObject/Assets');\nconst Score = require('./UI/Score');\nconst Level = require('./UI/Level');\n\n$(function() {\n  var renderer = PIXI.autoDetectRenderer(window.innerWidth, window.innerHeight, {\n    view: $(\"canvas\")[0]\n  });\n\n  var stage = new PIXI.Container(),\n    mask = new PIXI.Graphics(),\n    gameEngine = new GameEngine(stage),\n    winObject = $(window);\n\n  Score.init();\n  Level.init();\n\n  Global.init(stage);\n  stage.mask = mask;\n\n  //load\n  (function(){\n    var assetsLoaded = $.Deferred();\n    var soundsLoaded = $.Deferred();\n    var loader = PIXI.loader;\n\n    loader.baseUrl = \"image/\";\n    var assetList = [];\n    for (var i in Assets)\n      assetList.push(Assets[i]);\n    loader\n      .once('complete', function() {\n        assetsLoaded.resolve();\n      })\n      .once('error', function() {\n        assetsLoaded.reject();\n      })\n      .add(assetList)\n      .load();\n\n    Global.gameEvent.once('soundDone', function() {\n      soundsLoaded.resolve();\n    });\n    Global.gameEvent.once('soundFail', function() {\n      soundsLoaded.reject();\n    });\n    SoundSystem.init();\n\n    $.when(assetsLoaded, soundsLoaded).then(function() {\n      assetsLoaded = soundsLoaded = loader = assetList = null;\n      var loadingScreen = $(\".loading\");\n      loadingScreen.find(\"div\").html(\"Tap on screen to start\");\n      loadingScreen.on(\"click\", function() {\n        loadingScreen.off(\"click\");\n        loadingScreen.detach();\n        loadingScreen = null;\n        gameEngine.init();\n        // var area = new PIXI.Graphics();\n        // area.beginFill(0xFFFFFF);\n        // area.drawRect(0, 0, Global.gameWidth, Global.gameHeight);\n        // area.endFill();\n        // stage.addChild(area);\n        Global.gameEvent.emit('gameStart');\n        animate();\n      });\n    }, function() {\n      alert(\"Loading failed\");\n    });\n  })();\n\n  function animate() {\n    requestAnimationFrame(animate);\n    gameEngine.update();\n    renderer.render(stage);\n  }\n\n  winObject.on(\"resize\", resize);\n  resize();\n\n  function resize() {\n    var screenWidth, stageWidth, screenHeight, stageHeight;\n    screenWidth = stageWidth = winObject.width();\n    screenHeight = stageHeight = winObject.height();\n    var gameWidth = Global.gameWidth;\n    var gameHeight = Global.gameHeight;\n    var screenRatio = gameHeight / gameWidth;\n    if (stageHeight / stageWidth < screenRatio)\n      stageWidth = stageHeight / screenRatio;\n    else\n      stageHeight = stageWidth * screenRatio;\n    mask.clear();\n    mask.beginFill(0xFFFFFF, 1);\n    var x = (screenWidth - stageWidth) / 2;\n    var y = (screenHeight - stageHeight) / 2;\n    mask.drawRect(x, y, stageWidth, stageHeight);\n    mask.endFill();\n    stage.x = x;\n    stage.y = y;\n    stage.scale.x = stageWidth / gameWidth;\n    stage.scale.y = stageHeight / gameHeight;\n    renderer.resize(screenWidth, screenHeight);\n    Score.updatePosition(x, y);\n    Level.updatePosition(x, y, stageWidth);\n  }\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/app.js\n ** module id = 0\n ** module chunks = 0\n **/","module.exports = PIXI;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"PIXI\"\n ** module id = 1\n ** module chunks = 0\n **/","const EventEmitter = require('eventemitter3');\nconst Input = require('./Input');\nmodule.exports = {\n  init: function(stage) {\n    this.gameStage = stage;\n    this.Input = new Input(stage);\n  },\n  gameStage: null,\n  gameWidth: 500,\n  gameHeight: 800,\n  gameEvent: new EventEmitter(),\n  gameStartTime: null,\n  Input: null\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/Global/index.js\n ** module id = 2\n ** module chunks = 0\n **/","'use strict';\n\nvar has = Object.prototype.hasOwnProperty;\n\n//\n// We store our EE objects in a plain object whose properties are event names.\n// If `Object.create(null)` is not supported we prefix the event names with a\n// `~` to make sure that the built-in object properties are not overridden or\n// used as an attack vector.\n// We also assume that `Object.create(null)` is available when the event name\n// is an ES6 Symbol.\n//\nvar prefix = typeof Object.create !== 'function' ? '~' : false;\n\n/**\n * Representation of a single EventEmitter function.\n *\n * @param {Function} fn Event handler to be called.\n * @param {Mixed} context Context for function execution.\n * @param {Boolean} [once=false] Only emit once\n * @api private\n */\nfunction EE(fn, context, once) {\n  this.fn = fn;\n  this.context = context;\n  this.once = once || false;\n}\n\n/**\n * Minimal EventEmitter interface that is molded against the Node.js\n * EventEmitter interface.\n *\n * @constructor\n * @api public\n */\nfunction EventEmitter() { /* Nothing to set */ }\n\n/**\n * Hold the assigned EventEmitters by name.\n *\n * @type {Object}\n * @private\n */\nEventEmitter.prototype._events = undefined;\n\n/**\n * Return an array listing the events for which the emitter has registered\n * listeners.\n *\n * @returns {Array}\n * @api public\n */\nEventEmitter.prototype.eventNames = function eventNames() {\n  var events = this._events\n    , names = []\n    , name;\n\n  if (!events) return names;\n\n  for (name in events) {\n    if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);\n  }\n\n  if (Object.getOwnPropertySymbols) {\n    return names.concat(Object.getOwnPropertySymbols(events));\n  }\n\n  return names;\n};\n\n/**\n * Return a list of assigned event listeners.\n *\n * @param {String} event The events that should be listed.\n * @param {Boolean} exists We only need to know if there are listeners.\n * @returns {Array|Boolean}\n * @api public\n */\nEventEmitter.prototype.listeners = function listeners(event, exists) {\n  var evt = prefix ? prefix + event : event\n    , available = this._events && this._events[evt];\n\n  if (exists) return !!available;\n  if (!available) return [];\n  if (available.fn) return [available.fn];\n\n  for (var i = 0, l = available.length, ee = new Array(l); i < l; i++) {\n    ee[i] = available[i].fn;\n  }\n\n  return ee;\n};\n\n/**\n * Emit an event to all registered event listeners.\n *\n * @param {String} event The name of the event.\n * @returns {Boolean} Indication if we've emitted an event.\n * @api public\n */\nEventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events || !this._events[evt]) return false;\n\n  var listeners = this._events[evt]\n    , len = arguments.length\n    , args\n    , i;\n\n  if ('function' === typeof listeners.fn) {\n    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\n\n    switch (len) {\n      case 1: return listeners.fn.call(listeners.context), true;\n      case 2: return listeners.fn.call(listeners.context, a1), true;\n      case 3: return listeners.fn.call(listeners.context, a1, a2), true;\n      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;\n      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n    }\n\n    for (i = 1, args = new Array(len -1); i < len; i++) {\n      args[i - 1] = arguments[i];\n    }\n\n    listeners.fn.apply(listeners.context, args);\n  } else {\n    var length = listeners.length\n      , j;\n\n    for (i = 0; i < length; i++) {\n      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\n\n      switch (len) {\n        case 1: listeners[i].fn.call(listeners[i].context); break;\n        case 2: listeners[i].fn.call(listeners[i].context, a1); break;\n        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;\n        default:\n          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {\n            args[j - 1] = arguments[j];\n          }\n\n          listeners[i].fn.apply(listeners[i].context, args);\n      }\n    }\n  }\n\n  return true;\n};\n\n/**\n * Register a new EventListener for the given event.\n *\n * @param {String} event Name of the event.\n * @param {Function} fn Callback function.\n * @param {Mixed} [context=this] The context of the function.\n * @api public\n */\nEventEmitter.prototype.on = function on(event, fn, context) {\n  var listener = new EE(fn, context || this)\n    , evt = prefix ? prefix + event : event;\n\n  if (!this._events) this._events = prefix ? {} : Object.create(null);\n  if (!this._events[evt]) this._events[evt] = listener;\n  else {\n    if (!this._events[evt].fn) this._events[evt].push(listener);\n    else this._events[evt] = [\n      this._events[evt], listener\n    ];\n  }\n\n  return this;\n};\n\n/**\n * Add an EventListener that's only called once.\n *\n * @param {String} event Name of the event.\n * @param {Function} fn Callback function.\n * @param {Mixed} [context=this] The context of the function.\n * @api public\n */\nEventEmitter.prototype.once = function once(event, fn, context) {\n  var listener = new EE(fn, context || this, true)\n    , evt = prefix ? prefix + event : event;\n\n  if (!this._events) this._events = prefix ? {} : Object.create(null);\n  if (!this._events[evt]) this._events[evt] = listener;\n  else {\n    if (!this._events[evt].fn) this._events[evt].push(listener);\n    else this._events[evt] = [\n      this._events[evt], listener\n    ];\n  }\n\n  return this;\n};\n\n/**\n * Remove event listeners.\n *\n * @param {String} event The event we want to remove.\n * @param {Function} fn The listener that we need to find.\n * @param {Mixed} context Only remove listeners matching this context.\n * @param {Boolean} once Only remove once listeners.\n * @api public\n */\nEventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events || !this._events[evt]) return this;\n\n  var listeners = this._events[evt]\n    , events = [];\n\n  if (fn) {\n    if (listeners.fn) {\n      if (\n           listeners.fn !== fn\n        || (once && !listeners.once)\n        || (context && listeners.context !== context)\n      ) {\n        events.push(listeners);\n      }\n    } else {\n      for (var i = 0, length = listeners.length; i < length; i++) {\n        if (\n             listeners[i].fn !== fn\n          || (once && !listeners[i].once)\n          || (context && listeners[i].context !== context)\n        ) {\n          events.push(listeners[i]);\n        }\n      }\n    }\n  }\n\n  //\n  // Reset the array, or remove it completely if we have no more listeners.\n  //\n  if (events.length) {\n    this._events[evt] = events.length === 1 ? events[0] : events;\n  } else {\n    delete this._events[evt];\n  }\n\n  return this;\n};\n\n/**\n * Remove all listeners or only the listeners for the specified event.\n *\n * @param {String} event The event want to remove all listeners for.\n * @api public\n */\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\n  if (!this._events) return this;\n\n  if (event) delete this._events[prefix ? prefix + event : event];\n  else this._events = prefix ? {} : Object.create(null);\n\n  return this;\n};\n\n//\n// Alias methods names because people roll like that.\n//\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\nEventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n//\n// This function doesn't apply anymore.\n//\nEventEmitter.prototype.setMaxListeners = function setMaxListeners() {\n  return this;\n};\n\n//\n// Expose the prefix.\n//\nEventEmitter.prefixed = prefix;\n\n//\n// Expose the module.\n//\nif ('undefined' !== typeof module) {\n  module.exports = EventEmitter;\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/eventemitter3/index.js\n ** module id = 3\n ** module chunks = 0\n **/","const EventEmitter = require('eventemitter3');\nconst Extends = require('../util/extends');\nconst Global = require('../Global');\n\nfunction Input(stage) {\n  var that = this;\n  EventEmitter.call(that);\n\n  var keyDownList = {};\n  // var pointerList = {};\n\n  that.KEY_LEFT = 37;\n  that.KEY_UP = 38;\n  that.KEY_RIGHT = 39;\n  that.KEY_DOWN = 40;\n\n  $(function() {\n    $(window)\n      .keydown(keyListener)\n      .keyup(keyListener)\n      .keypress(keyListener);\n  });\n\n  function keyListener(event) {\n    that.emit(event.type, event);\n    if (event.type == \"keydown\")\n      keyDownList[event.keyCode] = true;\n    else if (event.type == \"keyup\")\n      keyDownList[event.keyCode] = false;\n  }\n\n  function pointerListener(event) {\n    event.data.local = stage.toLocal(event.data.global);\n    that.emit(event.type, event);\n  }\n\n  that.isDown = function(key) {\n    return keyDownList[key];\n  };\n\n  that.isUp = function(key) {\n    return !keyDownList[key];\n  };\n\n  // that.isPointerDown = function() {\n  //\n  // };\n  //\n  // that.isPointerUp = function() {\n  //\n  // };\n  //\n  // that.isPointerMove = function() {\n  //\n  // };\n  //\n  // function pointerListener(event) {\n  // }\n  //\n\n  stage.interactive = true;\n  stage\n    .on('mousedown', pointerListener)\n    .on('touchstart', pointerListener)\n    .on('mouseup', pointerListener)\n    .on('touchend', pointerListener)\n    .on('mouseupoutside', pointerListener)\n    .on('touchendoutside', pointerListener)\n    .on('mousemove', pointerListener)\n    .on('touchmove', pointerListener);\n}\nExtends(Input, EventEmitter);\nmodule.exports = Input;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/Global/Input.js\n ** module id = 4\n ** module chunks = 0\n **/","module.exports = function(target, source) {\n  target.prototype = Object.create(source.prototype);\n  target.prototype.constructor = target;\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/util/extends.js\n ** module id = 5\n ** module chunks = 0\n **/","// const Howl = require('Howl');\nconst SoundJS = require('SoundJS');\n\nconst Global = require('./Global');\n\nvar instance = null;\n\nfunction SoundSystem() {\n  var path = \"sound/\";\n  var sounds = {\n    laser: \"laser\",\n    explosion1: \"explosion1\",\n    explosion2: \"explosion2\",\n    explosion3: \"explosion3\",\n    music: \"music\"\n  };\n\n  var laserDelay = 200;\n  var laserVolume = 0.2;\n  var lastTick;\n\n  (function() {\n    var done = 0;\n    var array = [];\n\n    function checkDone() {\n      done++;\n      if (done >= Object.keys(sounds).length) {\n        done = array = null;\n        Global.gameEvent.emit('soundDone');\n      }\n    }\n\n    function loadFail() {\n      Global.gameEvent.emit('soundFail');\n    }\n\n    SoundJS.on(\"fileload\", checkDone);\n    SoundJS.on(\"fileerror\", loadFail);\n\n    for (var i in sounds)\n      array.push({\n        id: i,\n        src: sounds[i] + \".mp3\"\n      });\n\n    SoundJS.registerSounds(array, path);\n  })();\n\n  Global.gameEvent.on('explosion', function(x, y, big) {\n    if (big)\n      SoundJS.play(sounds.explosion2);\n    else\n      SoundJS.play(sounds.explosion1);\n  });\n  Global.gameEvent.on('dead', function() {\n    SoundJS.play(sounds.explosion3);\n  });\n  Global.gameEvent.on('shoot', function() {\n    var currentTime = Date.now();\n    if (lastTick && currentTime - lastTick < laserDelay) return;\n    lastTick = currentTime;\n    SoundJS.play(sounds.laser, {\n      volume: laserVolume\n    });\n  });\n  Global.gameEvent.once('gameStart', function() {\n    SoundJS.play(sounds.music, {\n      loop: -1\n    });\n  });\n}\n\nmodule.exports = {\n  init: function() {\n    if (instance) return instance;\n    instance = new SoundSystem();\n    return instance;\n  }\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/SoundSystem.js\n ** module id = 6\n ** module chunks = 0\n **/","module.exports = createjs.Sound;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"createjs.Sound\"\n ** module id = 7\n ** module chunks = 0\n **/","const PIXI = require('PIXI');\n\nconst Global = require('./Global');\nconst Assets = require('./GameObject/Assets');\nconst Background = require('./GameObject/Background');\nconst Plane = require('./GameObject/Plane');\nconst BulletSystem = require('./BulletSystem');\nconst RockArray = require('./GameObject/RockArray');\nconst BankArray = require('./GameObject/BankArray');\nconst ExplosionSystem = require('./ExplosionSystem');\nconst Score = require('./UI/Score');\nconst Level = require('./UI/Level');\n\nfunction GameEngine(stage) {\n  var that = this;\n\n  var lastTick = Date.now();\n  var gameObjectList = [];\n  var currentScore = 0;\n  var currentLevel = 1;\n  var rocks;\n  var banks;\n\n  var bankSpawnConstant = 10000;\n  var bankTick;\n\n  function addScore(score) {\n    currentScore += score;\n    Score.updateScore(currentScore);\n    if (currentLevel < 4 && currentLevel < currentScore / 500) {\n      currentLevel++;\n      Level.updateLevel(currentLevel);\n      rocks.updateLevel(currentLevel);\n    }\n  }\n\n  function resetScore() {\n    currentScore = 0;\n    Score.updateScore(currentScore);\n  }\n\n  that.init = function() {\n    var resources = PIXI.loader.resources;\n\n    var plane = new Plane(resources[Assets.plane.name].texture);\n\n    var bg = new Background(resources[Assets.bg.name].texture, plane);\n\n    rocks = new RockArray();\n\n    banks = new BankArray();\n\n    stage.addChild(bg);\n    stage.addChild(plane);\n    var bullets = BulletSystem.getInstance(stage, resources[Assets.bullet.name].texture);\n    stage.addChild(rocks);\n    stage.addChild(banks);\n\n    ExplosionSystem.getInstance(stage);\n\n    gameObjectList.push(plane);\n    gameObjectList.push(bg);\n    gameObjectList.push(bullets);\n    gameObjectList.push(rocks);\n    gameObjectList.push(banks);\n\n    for (var i = 0, l = gameObjectList.length; i < l; i++)\n      gameObjectList[i].init();\n\n    Global.gameStartTime = Date.now();\n    Global.gameEvent.on('score', addScore);\n    Global.gameEvent.on('resetscore', resetScore);\n\n    bankTick = Date.now();\n  };\n\n  that.update = function() {\n    var currentTime = Date.now();\n    var delta = (currentTime - lastTick) * 0.001;\n    for (var i = 0, l = gameObjectList.length; i < l; i++)\n      gameObjectList[i].update(delta);\n    if (currentTime - bankTick > bankSpawnConstant) {\n      banks.spawn();\n      bankTick = currentTime;\n    }\n    lastTick = currentTime;\n  };\n}\nmodule.exports = GameEngine;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/GameEngine.js\n ** module id = 8\n ** module chunks = 0\n **/","module.exports = {\n  plane: {\n    name: \"plane\",\n    url: \"redfighter.png\"\n  },\n  bg: {\n    name: \"bg\",\n    url: \"spacebg.jpg\"\n  },\n  rock1: {\n    name: \"rock1\",\n    url: \"rock1.png\"\n  },\n  rock2: {\n    name: \"rock2\",\n    url: \"rock2.png\"\n  },\n  bullet: {\n    name: \"bullet\",\n    url: \"bullet.png\"\n  },\n  explosion1: {\n    name: \"explosion1\",\n    url: \"explosion1.json\"\n  },\n  explosion2: {\n    name: \"explosion2\",\n    url: \"explosion2.json\"\n  },\n  dbs: {\n    name: \"dbs\",\n    url: \"dbs.png\"\n  },\n  standard: {\n    name: \"standard\",\n    url: \"standard.png\"\n  },\n  uob: {\n    name: \"uob\",\n    url: \"uob.png\"\n  }\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/GameObject/Assets.js\n ** module id = 9\n ** module chunks = 0\n **/","const PIXI = require('PIXI');\n\nconst Global = require('../Global');\nconst Extends = require('../util/extends');\n\nfunction Background(texture, plane) {\n  var that = this;\n  PIXI.Container.call(that);\n\n  var speedY = 50;\n  var resetHeight;\n  var movableWidth;\n  var minX = plane.minX;\n  var planeMovableWidth = plane.maxX - minX;\n\n  that.init = function() {\n    var sprite = new PIXI.Sprite(texture);\n    that.addChild(sprite);\n    resetHeight = sprite.height;\n    sprite = new PIXI.Sprite(texture);\n    sprite.y = -resetHeight;\n    that.addChild(sprite);\n    that.scale.x = that.scale.y = Global.gameHeight / resetHeight;\n    resetHeight = that.height / 2;\n    that.cacheAsBitmap = true;\n    movableWidth = that.width - Global.gameWidth;\n  };\n\n  that.update = function(dt) {\n    that.y += speedY * dt;\n    if (that.y > resetHeight)\n      that.y -= resetHeight;\n    that.x = -movableWidth * (plane.x - minX) / planeMovableWidth;\n  };\n}\nExtends(Background, PIXI.Container);\nmodule.exports = Background;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/GameObject/Background.js\n ** module id = 10\n ** module chunks = 0\n **/","const PIXI = require('PIXI');\nconst TweenMax = require('TweenMax');\nconst TimelineMax = require('TimelineMax');\n\nconst Global = require('../Global');\nconst Extends = require('../util/extends');\nconst Collision = require('../Collision');\n\nfunction Plane(texture) {\n  var that = this;\n  PIXI.Sprite.call(that, texture);\n\n  var stopped = true;\n  var speed = 500;\n  var moveToPosition = null;\n\n  var isDown = false;\n\n  that.maxX = Global.gameWidth - that.width / 2;\n  that.minX = that.width / 2;\n\n  var timeline;\n  var deathTime;\n\n  function onPointerDown(event) {\n    isDown = true;\n    moveToPosition = event.data.local;\n  }\n\n  function onPointerUp() {\n    isDown = false;\n    moveToPosition = null;\n  }\n\n  function onPointerMove(event) {\n    if (isDown) moveToPosition = event.data.local;\n  }\n\n  function spawn() {\n    that.scale.x = that.scale.y = 1;\n    that.y = Global.gameHeight;\n    if (timeline) {\n      timeline.play(0);\n      return;\n    }\n    var y1 = that.y - that.height;\n    var y2 = y1 + that.height / 2;\n    timeline = new TimelineMax();\n    timeline.add(TweenMax.to(that.scale, 1.5, {\n      x: 0.5,\n      y: 0.5\n    }), 0);\n    timeline.add(TweenMax.to(that, 0.5, {\n      y: y1\n    }), 0);\n    timeline.add(TweenMax.to(that, 1, {\n      y: y2,\n      onComplete: function() {\n        stopped = false;\n        Global.gameEvent.emit('spawn');\n      }\n    }), 0.5);\n  }\n\n  that.init = function() {\n    that.anchor.x = that.anchor.y = 0.5;\n    that.x = Global.gameWidth / 2;\n    Global.Input\n      .on('mousedown', onPointerDown)\n      .on('touchstart', onPointerDown)\n      .on('mouseup', onPointerUp)\n      .on('touchend', onPointerUp)\n      .on('mouseupoutside', onPointerUp)\n      .on('touchendoutside', onPointerUp)\n      .on('mousemove', onPointerMove)\n      .on('touchmove', onPointerMove);\n    that.scale.x = that.scale.y = 0.5;\n    Collision.addGroup(that, 'plane', Collision.TYPE_CIRCLE, {\n      width: that.width - 10,\n      height: that.height - 10\n    });\n    spawn();\n  };\n\n  that.update = function(dt) {\n    if (!that.visible) {\n      if (Date.now() - deathTime >= 5000) {\n        that.visible = true;\n        spawn();\n      } else\n        return;\n    }\n    if (stopped) return;\n    if (moveToPosition) {\n      if (that.x != moveToPosition.x) {\n        var moveToX = moveToPosition.x;\n        var distance = Math.min(speed * dt, Math.abs(moveToX - that.x));\n        that.x += (that.x < moveToX) ? distance : -distance;\n      }\n    } else {\n      var keyLeft = Global.Input.isDown(Global.Input.KEY_LEFT);\n      var keyRight = Global.Input.isDown(Global.Input.KEY_RIGHT);\n      if (keyLeft || keyRight)\n        that.x += (keyLeft ? -1 : 1) * speed * dt;\n    }\n\n    //check position\n    if (that.x > that.maxX)\n      that.x = that.maxX;\n    else if (that.x < that.minX)\n      that.x = that.minX;\n\n    Global.gameEvent.emit('shoot', that.x, that.y);\n\n    //check collision with rock\n    var target = Collision.isCollide(that, 'rock');\n    if (target) {\n      target.visible = false;\n      that.visible = false;\n      deathTime = Date.now();\n      Global.gameEvent.emit('dead');\n      Global.gameEvent.emit('explosion', target.x, target.y, target.isBig);\n      Global.gameEvent.emit('explosion', that.x, that.y);\n      stopped = true;\n    }\n  };\n}\nExtends(Plane, PIXI.Sprite);\nmodule.exports = Plane;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/GameObject/Plane.js\n ** module id = 11\n ** module chunks = 0\n **/","module.exports = TweenMax;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"TweenMax\"\n ** module id = 12\n ** module chunks = 0\n **/","module.exports = TimelineMax;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"TimelineMax\"\n ** module id = 13\n ** module chunks = 0\n **/","// not complete\n// rotation not in the calculation\n\nvar groups = {};\n\nfunction rect_rect(x1, y1, width1, height1, x2, y2, width2, height2) {\n  return Math.abs(x1 - x2) < (width1 + width2) / 2 && Math.abs(y1 - y2) < (height1 + height2) / 2;\n}\n\n// not accurate\nfunction rect_cir(x1, y1, width1, height1, x2, y2, width2, height2) {\n  var halfWidth1 = width1 / 2;\n  var halfHeight1 = height1 / 2;\n  var testX = (x1 > x2) ? x1 - halfWidth1 : x1 + halfWidth1;\n  var testY = (y1 > y2) ? y1 - halfHeight1 : y1 + halfHeight1;\n  return getDistance(Math.abs(testX - x2), Math.abs(testY - y2)) < height2 / 2;\n}\n\nfunction getDistance(x, y) {\n  return Math.sqrt(Math.pow(x, 2) + Math.pow(y, 2));\n}\n\nfunction cir_cir(x1, y1, width1, height1, x2, y2, width2, height2) {\n  var totalRadius = height1 / 2 + height2 / 2;\n  var distance = getDistance(Math.abs(x1 - x2), Math.abs(y1 - y2));\n  return distance < totalRadius;\n}\n\nfunction checkCollision(x1, y1, width1, height1, type1, x2, y2, width2, height2, type2) {\n  if (type1 == Collision.TYPE_RECTANGLE) {\n    if (type2 == Collision.TYPE_RECTANGLE)\n      return rect_rect(x1, y1, width1, height1, x2, y2, width2, height2);\n    else\n      return rect_cir(x1, y1, width1, height1, x2, y2, width2, height2);\n  } else {\n    if (type2 == Collision.TYPE_RECTANGLE)\n      return rect_cir(x2, y2, width2, height2, x1, y1, width1, height1);\n    else\n      return cir_cir(x1, y1, width1, height1, x2, y2, width2, height2);\n  }\n}\n\nvar Collision = {\n  TYPE_RECTANGLE: 0,\n  TYPE_CIRCLE: 1,\n  addGroup: function(instance, group, type, area) {\n    if (!type) instance.collisionType = this.TYPE_RECTANGLE;\n    else instance.collisionType = type;\n    if (area)\n      instance.collisionArea = {\n        width: area.width,\n        height: area.height\n      };\n    else\n      instance.collisionArea = {\n        width: instance.width,\n        height: instance.height\n      };\n    var array = groups[group];\n    if (array)\n      array.push(instance);\n    else\n      groups[group] = [instance];\n  },\n  isCollide: function(instance, group) {\n    if (!instance.visible) return;\n    var width1 = instance.collisionArea.width;\n    var height1 = instance.collisionArea.height;\n    var x1 = instance.x + (0.5 - instance.anchor.x) * width1;\n    var y1 = instance.y + (0.5 - instance.anchor.y) * height1;\n    var type1 = instance.collisionType;\n    var array = groups[group];\n    var target, width2, height2, x2, y2, type2;\n    for (var i = 0, l = array.length; i < l; i++) {\n      target = array[i];\n      if (!target.visible) continue;\n      width2 = target.collisionArea.width;\n      height2 = target.collisionArea.height;\n      x2 = target.x + (0.5 - target.anchor.x) * width2;\n      y2 = target.y + (0.5 - target.anchor.y) * height2;\n      type2 = target.collisionType;\n      if (checkCollision(x1, y1, width1, height1, type1, x2, y2, width2, height2, type2))\n        return target;\n    }\n    return null;\n  }\n};\nmodule.exports = Collision;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/Collision.js\n ** module id = 14\n ** module chunks = 0\n **/","const PIXI = require('PIXI');\n\nconst Global = require('./Global');\nconst Collision = require('./Collision');\n\nvar instance = null;\n\nfunction BulletSystem(stage, texture) {\n  var that = this;\n\n  var count = 20;\n\n  var bullets = [];\n  var updates = [];\n\n  var lastFire = null;\n  var firePerSecond = 10;\n  var speed = 1000;\n\n  function shoot(x, y) {\n    var currentTime = Date.now();\n    if (lastFire && currentTime - lastFire < 1000 / firePerSecond) return;\n    lastFire = currentTime;\n    var bullet = bullets.pop();\n    bullet.x = x;\n    bullet.y = y;\n    updates.push(bullet);\n    bullet.visible = true;\n  }\n\n  for (var i = 0; i < count; i++) {\n    var bullet = new PIXI.Sprite(texture);\n    bullet.anchor.x = bullet.anchor.y = 0.5;\n    bullet.visible = false;\n    stage.addChild(bullet);\n    bullets.push(bullet);\n    Collision.addGroup(bullet, 'bullet');\n  }\n  Global.gameEvent.on('shoot', shoot);\n\n  that.init = function() {};\n\n  that.update = function(dt) {\n    for (var i = 0, l = updates.length; i < l; i++) {\n      var bullet = updates[i];\n      bullet.y -= speed * dt;\n      if (bullet.y < -bullet.height || !bullet.visible) {\n        bullet.visible = false;\n        bullets.push(bullet);\n        updates.splice(i, 1);\n        l--;\n        i--;\n      }\n    }\n  };\n}\n\nmodule.exports = {\n  getInstance: function(stage, texture) {\n    if (instance) return instance;\n    instance = new BulletSystem(stage, texture);\n    return instance;\n  }\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/BulletSystem.js\n ** module id = 15\n ** module chunks = 0\n **/","const PIXI = require('PIXI');\n\nconst Global = require('../Global');\nconst Extends = require('../util/extends');\nconst Assets = require('./Assets');\nconst Rock = require('./Rock');\n\nfunction RockArray() {\n  var that = this;\n  var count = 40;\n\n  PIXI.Container.call(that);\n\n  var rockNames = [Assets.rock1.name, Assets.rock2.name];\n  var totalNames = rockNames.length;\n  var rocks = {};\n  var updates = [];\n\n  var stopped = true;\n  var lastFire = null;\n  var spawnConstant = 2;\n  var rocksPerSecond = spawnConstant;\n\n  function spawnRock() {\n    var currentTime = Date.now();\n    if (stopped ||\n      updates.length > totalNames * count ||\n      (lastFire && currentTime - lastFire < 1000 / rocksPerSecond))\n      return;\n    lastFire = currentTime;\n    var name = rockNames[Math.floor(Math.random() * totalNames)];\n    var rock;\n    while (!rock) {\n      rock = rocks[name].pop();\n      if (!rock) {\n        name = (name + 1) % totalNames;\n        return;\n      }\n      rock.refresh();\n      updates.push(rock);\n      rock.visible = true;\n    }\n  }\n\n  that.init = function() {\n    var resources = PIXI.loader.resources;\n    var i, j, name, texture, array, rock;\n    for (j = 0; j < totalNames; j++) {\n      name = rockNames[j];\n      texture = resources[name].texture;\n      array = rocks[name] = [];\n      for (i = 0; i < count; i++) {\n        rock = new Rock(name, texture);\n        rock.init();\n        rock.visible = false;\n        that.addChild(rock);\n        array.push(rock);\n      }\n    }\n    Global.gameEvent.on('spawn', function() {\n      stopped = false;\n    });\n    Global.gameEvent.on('dead', function() {\n      stopped = true;\n    });\n  };\n\n  that.update = function(dt) {\n    for (var i = 0, l = updates.length; i < l; i++) {\n      var rock = updates[i];\n      if (rock.visible && rock.y < Global.gameHeight + rock.height)\n        rock.update(dt);\n      else {\n        rocks[rock.type].push(rock);\n        updates.splice(i, 1);\n        l--;\n        i--;\n      }\n    }\n    spawnRock();\n  };\n\n  that.updateLevel = function(level) {\n    rocksPerSecond = level * spawnConstant;\n  };\n}\nExtends(RockArray, PIXI.Container);\nmodule.exports = RockArray;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/GameObject/RockArray.js\n ** module id = 16\n ** module chunks = 0\n **/","const PIXI = require('PIXI');\n\nconst Global = require('../Global');\nconst Extends = require('../util/extends');\nconst Collision = require('../Collision');\nconst Assets = require('./Assets');\n\nfunction Rock(textureName, texture) {\n  var that = this;\n  PIXI.Sprite.call(that, texture);\n\n  if (textureName == Assets.rock1.name)\n    that.initialLife = 4;\n  else\n    that.initialLife = 1;\n\n  that.type = textureName;\n  that.isBig = textureName == Assets.rock1.name;\n\n  var speedConstant = (that.isBig) ? 2 : 4;\n\n  function refresh() {\n    that.x = Global.gameWidth / 4 + (Math.random() * Global.gameWidth) / 2;\n    that.y = -that.height;\n    that.speedX = (Math.random() * 1 - 0.5) * 100;\n    that.speedY = (1.5 + Math.random() * speedConstant) * 100;\n    that.speedRotation = (Math.random() * 1 - 0.5) * 10;\n    that.life = that.initialLife;\n  }\n\n  that.refresh = refresh;\n\n  that.init = function() {\n    that.anchor.x = that.anchor.y = 0.5;\n    Collision.addGroup(that, 'rock', Collision.TYPE_CIRCLE);\n    refresh();\n  };\n\n  that.update = function(dt) {\n    that.x += that.speedX * dt;\n    that.y += that.speedY * dt;\n    if (that.y > Global.gameHeight + that.height) {\n      that.visible = false;\n      return;\n    }\n    var target = Collision.isCollide(that, 'bullet');\n    that.rotation += that.speedRotation * dt;\n    if (target) {\n      target.visible = false;\n      that.life--;\n      if (that.life > 0) return;\n      that.visible = false;\n      Global.gameEvent.emit('explosion', that.x, that.y, that.isBig);\n      if (that.isBig)\n        Global.gameEvent.emit('score', 10);\n      else\n        Global.gameEvent.emit('score', 5);\n    }\n  };\n}\nExtends(Rock, PIXI.Sprite);\nmodule.exports = Rock;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/GameObject/Rock.js\n ** module id = 17\n ** module chunks = 0\n **/","const PIXI = require('PIXI');\n\nconst Global = require('../Global');\nconst Extends = require('../util/extends');\nconst Assets = require('./Assets');\nconst Bank = require('./Bank');\n\nfunction BankArray() {\n  var that = this;\n  var count = 2;\n\n  PIXI.Container.call(that);\n\n  var bankNames = [Assets.dbs.name, Assets.standard.name, Assets.uob.name];\n  var totalNames = bankNames.length;\n  var banks = {};\n  var updates = [];\n\n  function spawnBank() {\n    if (updates.length > totalNames * count) return;\n    var name = bankNames[Math.floor(Math.random() * totalNames)];\n    var bank;\n    while (!bank) {\n      bank = banks[name].pop();\n      if (!bank) {\n        name = (name + 1) % totalNames;\n        return;\n      }\n      bank.refresh();\n      updates.push(bank);\n      bank.visible = true;\n    }\n  }\n\n  that.init = function() {\n    var resources = PIXI.loader.resources;\n    var i, j, name, texture, array, bank;\n    for (j = 0; j < totalNames; j++) {\n      name = bankNames[j];\n      texture = resources[name].texture;\n      array = banks[name] = [];\n      for (i = 0; i < count; i++) {\n        bank = new Bank(name, texture);\n        bank.init();\n        bank.visible = false;\n        that.addChild(bank);\n        array.push(bank);\n      }\n    }\n  };\n\n  that.update = function(dt) {\n    for (var i = 0, l = updates.length; i < l; i++) {\n      var bank = updates[i];\n      if (bank.visible && bank.y < Global.gameHeight + bank.height)\n        bank.update(dt);\n      else {\n        banks[bank.type].push(bank);\n        updates.splice(i, 1);\n        l--;\n        i--;\n      }\n    }\n  };\n\n  that.spawn = spawnBank;\n}\nExtends(BankArray, PIXI.Container);\nmodule.exports = BankArray;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/GameObject/BankArray.js\n ** module id = 18\n ** module chunks = 0\n **/","const PIXI = require('PIXI');\n\nconst Global = require('../Global');\nconst Extends = require('../util/extends');\nconst Collision = require('../Collision');\nconst Assets = require('./Assets');\n\nfunction Bank(textureName, texture) {\n  var that = this;\n  PIXI.Sprite.call(that, texture);\n\n  that.type = textureName;\n\n  var initialLife = 10;\n  var speedConstant = 1;\n\n  that.refresh = function() {\n    that.x = Global.gameWidth / 4 + (Math.random() * Global.gameWidth) / 2;\n    that.y = -that.height;\n    that.speedX = (Math.random() * 1 - 0.5) * 100;\n    that.speedY = (1.5 + Math.random() * speedConstant) * 100;\n    that.life = initialLife;\n  };\n\n  that.init = function() {\n    that.anchor.x = that.anchor.y = 0.5;\n    that.refresh();\n    Collision.addGroup(that, 'bank');\n  };\n\n  that.update = function(dt) {\n    that.x += that.speedX * dt;\n    that.y += that.speedY * dt;\n    if (that.y > Global.gameHeight + that.height) {\n      that.visible = false;\n      return;\n    }\n    var target = Collision.isCollide(that, 'bullet');\n    if (target) {\n      target.visible = false;\n      that.life--;\n      if (that.life > 0) return;\n      that.visible = false;\n      Global.gameEvent.emit('explosion', that.x, that.y, true);\n      if (textureName == Assets.dbs.name)\n        Global.gameEvent.emit('resetscore');\n      else\n        Global.gameEvent.emit('score', 100);\n    }\n  };\n}\nExtends(Bank, PIXI.Sprite);\nmodule.exports = Bank;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/GameObject/Bank.js\n ** module id = 19\n ** module chunks = 0\n **/","const PIXI = require('PIXI');\n\nconst Global = require('./Global');\nconst Assets = require('./GameObject/Assets');\nconst JsonToArray = require('./util/JsonToArray');\n\nvar instance = null;\n\nfunction ExplosionSystem(stage) {\n  var explosions = {};\n  var types = [{\n    name: Assets.explosion1.name,\n    count: 10\n  }, {\n    name: Assets.explosion2.name,\n    count: 20\n  }];\n\n  (function() {\n    var totalNames = types.length;\n    var i, j, type, count, textures, array, explosion;\n    var resources = PIXI.loader.resources;\n    for (i = 0; i < totalNames; i++) {\n      type = types[i].name;\n      count = types[i].count;\n      textures = JsonToArray.convert(resources[type].textures);\n      array = explosions[type] = [];\n      for (j = 0; j < count; j++) {\n        explosion = new PIXI.extras.MovieClip(textures);\n        explosion.anchor.x = explosion.anchor.y = 0.5;\n        explosion.loop = false;\n        explosion.type = type;\n        if (i == 0) {\n          explosion.animationSpeed = 0.5;\n          explosion.scale.x = explosion.scale.y = 2;\n        }\n        explosion.onComplete = function() {\n          this.visible = false;\n          explosions[this.type].push(this);\n        };\n        explosion.visible = false;\n        stage.addChild(explosion);\n        array.push(explosion);\n      }\n    }\n  })();\n\n  Global.gameEvent.on('explosion', function(x, y, big) {\n    var type;\n    if (big)\n      type = types[0].name;\n    else\n      type = types[1].name;\n    var explosion = explosions[type].pop();\n    if (explosion) {\n      explosion.rotation = ((Math.random() > 0.5) ? -1 : 1) * Math.random() * Math.PI;\n      explosion.x = x;\n      explosion.y = y;\n      explosion.visible = true;\n      explosion.gotoAndPlay(0);\n    }\n  });\n}\n\nmodule.exports = {\n  getInstance: function(stage) {\n    if (instance) return instance;\n    instance = new ExplosionSystem(stage);\n    return instance;\n  }\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/ExplosionSystem.js\n ** module id = 20\n ** module chunks = 0\n **/","module.exports = {\n  convert: function(jsonObject) {\n    var returnObj = [];\n    for (var i in jsonObject)\n      returnObj.push(jsonObject[i]);\n    return returnObj;\n  }\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/util/JsonToArray.js\n ** module id = 21\n ** module chunks = 0\n **/","var scoreDiv;\nvar scoreSpan;\nmodule.exports = {\n  init: function() {\n    scoreDiv = $(\".scoreDiv\");\n    scoreSpan = $(\".scoreDiv span\");\n  },\n  updateScore: function(score) {\n    scoreSpan.html(score);\n  },\n  updatePosition: function(x, y) {\n    scoreDiv.css({\n      top: y,\n      left: x\n    });\n  }\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/UI/Score.js\n ** module id = 22\n ** module chunks = 0\n **/","var levelDiv;\nvar levelSpan;\nmodule.exports = {\n  init: function() {\n    levelDiv = $(\".levelDiv\");\n    levelSpan = $(\".levelDiv span\");\n  },\n  updateLevel: function(level) {\n    levelSpan.html(level);\n  },\n  updatePosition: function(x, y, width) {\n    levelDiv.css({\n      top: y,\n      left: x,\n      width: width\n    });\n  }\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/UI/Level.js\n ** module id = 23\n ** module chunks = 0\n **/"],"sourceRoot":""}