{"version":3,"sources":["webpack:///bundle.js","webpack:///webpack/bootstrap 097c889d06c32327cd24","webpack:///./src/app.js","webpack:///external \"PIXI\"","webpack:///external \"TweenMax\"","webpack:///external \"Linear\"","webpack:///./src/Global/index.js","webpack:///./~/eventemitter3/index.js","webpack:///./src/Global/Input.js","webpack:///./src/util/index.js","webpack:///./src/Manager/SoundManager.js","webpack:///external \"createjs.Sound\"","webpack:///./src/GameEngine.js","webpack:///./src/GameObject/Assets.js","webpack:///./src/GameObject/Background.js","webpack:///./src/GameObject/Plane.js","webpack:///external \"TimelineMax\"","webpack:///./src/Collision.js","webpack:///./src/Manager/BulletManager.js","webpack:///./src/Manager/RockManager.js","webpack:///./src/GameObject/Rock.js","webpack:///./src/Manager/BankManager.js","webpack:///./src/GameObject/Bank.js","webpack:///./src/Manager/ExplosionManager.js","webpack:///./src/UI/Score.js","webpack:///./src/UI/Time.js","webpack:///./src/UI/InGameText.js","webpack:///./src/LevelSetup.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","PIXI","TweenMax","Linear","Global","SoundManager","GameEngine","Assets","ScoreUI","TimeUI","InGameText","LevelSetup","getParameter","$","animate","requestAnimationFrame","gameEngine","update","renderer","render","stage","resize","screenWidth","stageWidth","screenHeight","stageHeight","winObject","width","height","gameWidth","gameHeight","screenRatio","mask","clear","beginFill","x","y","drawRect","endFill","scale","updatePosition","autoDetectRenderer","window","innerWidth","innerHeight","view","Container","Graphics","init","loadingDivText","loadingTweening","to","text","value","ease","easeNone","assetsLoaded","Deferred","soundsLoaded","loader","baseUrl","assetList","i","push","once","resolve","reject","add","load","gameEvent","when","then","levelSetup","level","parseInt","loadingScreen","displayText","dbs","banks","totalTime","length","delay","duration","progress","onComplete","on","off","detach","killTweensOf","emit","start","alert","EventEmitter","Input","this","gameStage","EE","fn","context","has","Object","prototype","hasOwnProperty","prefix","create","_events","undefined","eventNames","name","events","names","slice","getOwnPropertySymbols","concat","listeners","event","exists","evt","available","l","ee","Array","a1","a2","a3","a4","a5","args","len","arguments","removeListener","apply","j","listener","removeAllListeners","addListener","setMaxListeners","prefixed","keyListener","that","type","keyDownList","keyCode","pointerListener","data","local","toLocal","global","KEY_LEFT","KEY_UP","KEY_RIGHT","KEY_DOWN","keydown","keyup","keypress","isDown","key","isUp","interactive","Extends","extends","target","source","constructor","json2Array","jsonObject","returnObj","replace","regex","RegExp","results","exec","location","search","decodeURIComponent","lastTick","path","sounds","laser","explosion1","explosion2","explosion3","music","laserDelay","laserVolume","checkDone","done","keys","array","loadFail","SoundJS","src","registerSounds","big","play","currentTime","Date","now","volume","loop","instance","createjs","Sound","addScore","score","currentScore","updateScore","resetScore","updateTimerTick","plane","rocks","bankTick","gameObjectList","timeLimit","bankSpawnConstant","stopped","resources","Plane","texture","bg","Background","bullets","BulletManager","getInstance","bullet","RockManager","BankManager","explosions","ExplosionManager","addChild","addToStage","bonusScore","disappear","setText","updateTime","updateLevel","delta","spawn","url","rock1","rock2","standard","uob","resetHeight","movableWidth","speedY","minX","planeMovableWidth","maxX","sprite","Sprite","cacheAsBitmap","dt","onPointerDown","moveToPosition","onPointerUp","onPointerMove","timeline","y1","y2","TimelineMax","speed","deathTime","anchor","Collision","addGroup","TYPE_CIRCLE","visible","moveToX","distance","Math","min","abs","keyLeft","keyRight","isCollide","isBig","rect_rect","x1","width1","height1","x2","width2","height2","rect_cir","halfWidth1","halfHeight1","testX","testY","getDistance","sqrt","pow","cir_cir","totalRadius","checkCollision","type1","type2","TYPE_RECTANGLE","groups","group","area","collisionType","collisionArea","shoot","lastFire","firePerSecond","pop","updates","count","splice","spawnRock","totalNames","rocksPerSecond","rock","rockNames","floor","random","refresh","Rock","spawnConstant","textureName","speedX","speedConstant","speedRotation","life","initialLife","rotation","gotDbs","gotBanks","spawnBank","bank","bankNames","Bank","types","textures","explosion","JsonToArray","extras","MovieClip","animationSpeed","PI","gotoAndPlay","scoreDiv","scoreSpan","innerHTML","css","top","left","timeDiv","timeSpan","time","right","textDiv","effectTimeline","disappearEffect","paused","scaleX","scaleY","startAt","opacity","stop","color","transform","html"],"mappings":"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","file":"bundle.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// require('../css/app.css');\n\t// require('babel-polyfill');\n\t//\n\t// import Point from './Point';\n\t// console.log(Point);\n\t\n\tconst PIXI = __webpack_require__(1);\n\tconst TweenMax = __webpack_require__(2);\n\tconst Linear = __webpack_require__(3);\n\t\n\tconst Global = __webpack_require__(4);\n\tconst SoundManager = __webpack_require__(8);\n\tconst GameEngine = __webpack_require__(10);\n\tconst Assets = __webpack_require__(11);\n\tconst ScoreUI = __webpack_require__(22);\n\tconst TimeUI = __webpack_require__(23);\n\tconst InGameText = __webpack_require__(24);\n\tconst LevelSetup = __webpack_require__(25);\n\tconst getParameter = __webpack_require__(7).getParameter;\n\t\n\t$(function() {\n\t  var renderer = PIXI.autoDetectRenderer(window.innerWidth, window.innerHeight, {\n\t    view: $(\"canvas\")[0]\n\t  });\n\t\n\t  var stage = new PIXI.Container(),\n\t    mask = new PIXI.Graphics(),\n\t    gameEngine = new GameEngine(stage),\n\t    winObject = $(window);\n\t\n\t  ScoreUI.init();\n\t  TimeUI.init();\n\t  InGameText.init();\n\t\n\t  Global.init(stage);\n\t  stage.mask = mask;\n\t\n\t  //load\n\t  (function() {\n\t    var loadingDivText = $(\".loading div\");\n\t    var loadingTweening = TweenMax.to(loadingDivText, 1, {\n\t      text: {\n\t        value: \"Loading...\"\n\t      },\n\t      ease: Linear.easeNone\n\t    });\n\t\n\t    var assetsLoaded = $.Deferred();\n\t    var soundsLoaded = $.Deferred();\n\t    var loader = PIXI.loader;\n\t\n\t    loader.baseUrl = \"image/\";\n\t    var assetList = [];\n\t    for (var i in Assets)\n\t      assetList.push(Assets[i]);\n\t    loader\n\t      .once('complete', function() {\n\t        assetsLoaded.resolve();\n\t      })\n\t      .once('error', function() {\n\t        assetsLoaded.reject();\n\t      })\n\t      .add(assetList)\n\t      .load();\n\t\n\t    Global.gameEvent.once('soundDone', function() {\n\t      soundsLoaded.resolve();\n\t    });\n\t    Global.gameEvent.once('soundFail', function() {\n\t      soundsLoaded.reject();\n\t    });\n\t    SoundManager.init();\n\t\n\t    $.when(assetsLoaded, soundsLoaded).then(function() {\n\t      assetsLoaded = soundsLoaded = loader = assetList = null;\n\t      gameEngine.init();\n\t      // var area = new PIXI.Graphics();\n\t      // area.beginFill(0xFFFFFF);\n\t      // area.drawRect(0, 0, Global.gameWidth, Global.gameHeight);\n\t      // area.endFill();\n\t      // stage.addChild(area);\n\t\n\t      var level = getParameter(\"level\");\n\t      var levelSetup;\n\t      if (level) levelSetup = LevelSetup[parseInt(level) - 1];\n\t      if (!levelSetup) return;\n\t\n\t      var loadingScreen = $(\".loading\");\n\t      var displayText = \"Level \" + level + \"<br/>\";\n\t      if (levelSetup.dbs)\n\t        displayText += \"Avoid shooting DBS<br/>\";\n\t      if (levelSetup.banks)\n\t        displayText += \"Shoot other banks for getting bonus points<br/>\";\n\t      displayText += \"Tap on screen to start\";\n\t      var totalTime = displayText.length * 0.05;\n\t      var delay = loadingTweening.duration() * (1 - loadingTweening.progress());\n\t      TweenMax.to(loadingDivText, totalTime, {\n\t        text: {\n\t          value: displayText\n\t        },\n\t        onComplete: function() {\n\t          loadingScreen.on(\"click\", function() {\n\t            loadingScreen.off(\"click\");\n\t            loadingScreen.detach();\n\t            loadingScreen = null;\n\t            loadingTweening = null;\n\t            TweenMax.killTweensOf(loadingDivText);\n\t            Global.gameEvent.emit('gameStart');\n\t            gameEngine.start();\n\t            animate();\n\t          });\n\t        },\n\t        ease: Linear.easeNone,\n\t        delay: delay\n\t      });\n\t    }, function() {\n\t      alert(\"Loading failed\");\n\t    });\n\t  })();\n\t\n\t  function animate() {\n\t    requestAnimationFrame(animate);\n\t    gameEngine.update();\n\t    renderer.render(stage);\n\t  }\n\t\n\t  winObject.on(\"resize\", resize);\n\t  resize();\n\t\n\t  function resize() {\n\t    var screenWidth, stageWidth, screenHeight, stageHeight;\n\t    screenWidth = stageWidth = winObject.width();\n\t    screenHeight = stageHeight = winObject.height();\n\t    var gameWidth = Global.gameWidth;\n\t    var gameHeight = Global.gameHeight;\n\t    var screenRatio = gameHeight / gameWidth;\n\t    if (stageHeight / stageWidth < screenRatio)\n\t      stageWidth = stageHeight / screenRatio;\n\t    else\n\t      stageHeight = stageWidth * screenRatio;\n\t    mask.clear();\n\t    mask.beginFill(0xFFFFFF, 1);\n\t    var x = (screenWidth - stageWidth) / 2;\n\t    var y = (screenHeight - stageHeight) / 2;\n\t    mask.drawRect(x, y, stageWidth, stageHeight);\n\t    mask.endFill();\n\t    stage.x = x;\n\t    stage.y = y;\n\t    stage.scale.x = stageWidth / gameWidth;\n\t    stage.scale.y = stageHeight / gameHeight;\n\t    renderer.resize(screenWidth, screenHeight);\n\t    ScoreUI.updatePosition(x, y);\n\t    TimeUI.updatePosition((screenWidth - stageWidth) / 2, y);\n\t  }\n\t});\n\n\n/***/ },\n/* 1 */\n/***/ function(module, exports) {\n\n\tmodule.exports = PIXI;\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\n\tmodule.exports = TweenMax;\n\n/***/ },\n/* 3 */\n/***/ function(module, exports) {\n\n\tmodule.exports = Linear;\n\n/***/ },\n/* 4 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tconst EventEmitter = __webpack_require__(5);\n\tconst Input = __webpack_require__(6);\n\tmodule.exports = {\n\t  init: function(stage) {\n\t    this.gameStage = stage;\n\t    this.Input = new Input(stage);\n\t  },\n\t  gameStage: null,\n\t  gameWidth: 500,\n\t  gameHeight: 800,\n\t  gameEvent: new EventEmitter(),\n\t  Input: null\n\t};\n\n\n/***/ },\n/* 5 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar has = Object.prototype.hasOwnProperty;\n\t\n\t//\n\t// We store our EE objects in a plain object whose properties are event names.\n\t// If `Object.create(null)` is not supported we prefix the event names with a\n\t// `~` to make sure that the built-in object properties are not overridden or\n\t// used as an attack vector.\n\t// We also assume that `Object.create(null)` is available when the event name\n\t// is an ES6 Symbol.\n\t//\n\tvar prefix = typeof Object.create !== 'function' ? '~' : false;\n\t\n\t/**\n\t * Representation of a single EventEmitter function.\n\t *\n\t * @param {Function} fn Event handler to be called.\n\t * @param {Mixed} context Context for function execution.\n\t * @param {Boolean} [once=false] Only emit once\n\t * @api private\n\t */\n\tfunction EE(fn, context, once) {\n\t  this.fn = fn;\n\t  this.context = context;\n\t  this.once = once || false;\n\t}\n\t\n\t/**\n\t * Minimal EventEmitter interface that is molded against the Node.js\n\t * EventEmitter interface.\n\t *\n\t * @constructor\n\t * @api public\n\t */\n\tfunction EventEmitter() { /* Nothing to set */ }\n\t\n\t/**\n\t * Hold the assigned EventEmitters by name.\n\t *\n\t * @type {Object}\n\t * @private\n\t */\n\tEventEmitter.prototype._events = undefined;\n\t\n\t/**\n\t * Return an array listing the events for which the emitter has registered\n\t * listeners.\n\t *\n\t * @returns {Array}\n\t * @api public\n\t */\n\tEventEmitter.prototype.eventNames = function eventNames() {\n\t  var events = this._events\n\t    , names = []\n\t    , name;\n\t\n\t  if (!events) return names;\n\t\n\t  for (name in events) {\n\t    if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);\n\t  }\n\t\n\t  if (Object.getOwnPropertySymbols) {\n\t    return names.concat(Object.getOwnPropertySymbols(events));\n\t  }\n\t\n\t  return names;\n\t};\n\t\n\t/**\n\t * Return a list of assigned event listeners.\n\t *\n\t * @param {String} event The events that should be listed.\n\t * @param {Boolean} exists We only need to know if there are listeners.\n\t * @returns {Array|Boolean}\n\t * @api public\n\t */\n\tEventEmitter.prototype.listeners = function listeners(event, exists) {\n\t  var evt = prefix ? prefix + event : event\n\t    , available = this._events && this._events[evt];\n\t\n\t  if (exists) return !!available;\n\t  if (!available) return [];\n\t  if (available.fn) return [available.fn];\n\t\n\t  for (var i = 0, l = available.length, ee = new Array(l); i < l; i++) {\n\t    ee[i] = available[i].fn;\n\t  }\n\t\n\t  return ee;\n\t};\n\t\n\t/**\n\t * Emit an event to all registered event listeners.\n\t *\n\t * @param {String} event The name of the event.\n\t * @returns {Boolean} Indication if we've emitted an event.\n\t * @api public\n\t */\n\tEventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n\t  var evt = prefix ? prefix + event : event;\n\t\n\t  if (!this._events || !this._events[evt]) return false;\n\t\n\t  var listeners = this._events[evt]\n\t    , len = arguments.length\n\t    , args\n\t    , i;\n\t\n\t  if ('function' === typeof listeners.fn) {\n\t    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\n\t\n\t    switch (len) {\n\t      case 1: return listeners.fn.call(listeners.context), true;\n\t      case 2: return listeners.fn.call(listeners.context, a1), true;\n\t      case 3: return listeners.fn.call(listeners.context, a1, a2), true;\n\t      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;\n\t      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n\t      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n\t    }\n\t\n\t    for (i = 1, args = new Array(len -1); i < len; i++) {\n\t      args[i - 1] = arguments[i];\n\t    }\n\t\n\t    listeners.fn.apply(listeners.context, args);\n\t  } else {\n\t    var length = listeners.length\n\t      , j;\n\t\n\t    for (i = 0; i < length; i++) {\n\t      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\n\t\n\t      switch (len) {\n\t        case 1: listeners[i].fn.call(listeners[i].context); break;\n\t        case 2: listeners[i].fn.call(listeners[i].context, a1); break;\n\t        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;\n\t        default:\n\t          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {\n\t            args[j - 1] = arguments[j];\n\t          }\n\t\n\t          listeners[i].fn.apply(listeners[i].context, args);\n\t      }\n\t    }\n\t  }\n\t\n\t  return true;\n\t};\n\t\n\t/**\n\t * Register a new EventListener for the given event.\n\t *\n\t * @param {String} event Name of the event.\n\t * @param {Function} fn Callback function.\n\t * @param {Mixed} [context=this] The context of the function.\n\t * @api public\n\t */\n\tEventEmitter.prototype.on = function on(event, fn, context) {\n\t  var listener = new EE(fn, context || this)\n\t    , evt = prefix ? prefix + event : event;\n\t\n\t  if (!this._events) this._events = prefix ? {} : Object.create(null);\n\t  if (!this._events[evt]) this._events[evt] = listener;\n\t  else {\n\t    if (!this._events[evt].fn) this._events[evt].push(listener);\n\t    else this._events[evt] = [\n\t      this._events[evt], listener\n\t    ];\n\t  }\n\t\n\t  return this;\n\t};\n\t\n\t/**\n\t * Add an EventListener that's only called once.\n\t *\n\t * @param {String} event Name of the event.\n\t * @param {Function} fn Callback function.\n\t * @param {Mixed} [context=this] The context of the function.\n\t * @api public\n\t */\n\tEventEmitter.prototype.once = function once(event, fn, context) {\n\t  var listener = new EE(fn, context || this, true)\n\t    , evt = prefix ? prefix + event : event;\n\t\n\t  if (!this._events) this._events = prefix ? {} : Object.create(null);\n\t  if (!this._events[evt]) this._events[evt] = listener;\n\t  else {\n\t    if (!this._events[evt].fn) this._events[evt].push(listener);\n\t    else this._events[evt] = [\n\t      this._events[evt], listener\n\t    ];\n\t  }\n\t\n\t  return this;\n\t};\n\t\n\t/**\n\t * Remove event listeners.\n\t *\n\t * @param {String} event The event we want to remove.\n\t * @param {Function} fn The listener that we need to find.\n\t * @param {Mixed} context Only remove listeners matching this context.\n\t * @param {Boolean} once Only remove once listeners.\n\t * @api public\n\t */\n\tEventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\n\t  var evt = prefix ? prefix + event : event;\n\t\n\t  if (!this._events || !this._events[evt]) return this;\n\t\n\t  var listeners = this._events[evt]\n\t    , events = [];\n\t\n\t  if (fn) {\n\t    if (listeners.fn) {\n\t      if (\n\t           listeners.fn !== fn\n\t        || (once && !listeners.once)\n\t        || (context && listeners.context !== context)\n\t      ) {\n\t        events.push(listeners);\n\t      }\n\t    } else {\n\t      for (var i = 0, length = listeners.length; i < length; i++) {\n\t        if (\n\t             listeners[i].fn !== fn\n\t          || (once && !listeners[i].once)\n\t          || (context && listeners[i].context !== context)\n\t        ) {\n\t          events.push(listeners[i]);\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  //\n\t  // Reset the array, or remove it completely if we have no more listeners.\n\t  //\n\t  if (events.length) {\n\t    this._events[evt] = events.length === 1 ? events[0] : events;\n\t  } else {\n\t    delete this._events[evt];\n\t  }\n\t\n\t  return this;\n\t};\n\t\n\t/**\n\t * Remove all listeners or only the listeners for the specified event.\n\t *\n\t * @param {String} event The event want to remove all listeners for.\n\t * @api public\n\t */\n\tEventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\n\t  if (!this._events) return this;\n\t\n\t  if (event) delete this._events[prefix ? prefix + event : event];\n\t  else this._events = prefix ? {} : Object.create(null);\n\t\n\t  return this;\n\t};\n\t\n\t//\n\t// Alias methods names because people roll like that.\n\t//\n\tEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\tEventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\t\n\t//\n\t// This function doesn't apply anymore.\n\t//\n\tEventEmitter.prototype.setMaxListeners = function setMaxListeners() {\n\t  return this;\n\t};\n\t\n\t//\n\t// Expose the prefix.\n\t//\n\tEventEmitter.prefixed = prefix;\n\t\n\t//\n\t// Expose the module.\n\t//\n\tif (true) {\n\t  module.exports = EventEmitter;\n\t}\n\n\n/***/ },\n/* 6 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tconst EventEmitter = __webpack_require__(5);\n\tconst Extends = __webpack_require__(7).extends;\n\t// const Global = require('../Global');\n\t\n\tfunction Input(stage) {\n\t  var that = this;\n\t  EventEmitter.call(that);\n\t\n\t  var keyDownList = {};\n\t  // var pointerList = {};\n\t\n\t  that.KEY_LEFT = 37;\n\t  that.KEY_UP = 38;\n\t  that.KEY_RIGHT = 39;\n\t  that.KEY_DOWN = 40;\n\t\n\t  $(function() {\n\t    $(window)\n\t      .keydown(keyListener)\n\t      .keyup(keyListener)\n\t      .keypress(keyListener);\n\t  });\n\t\n\t  function keyListener(event) {\n\t    that.emit(event.type, event);\n\t    if (event.type == \"keydown\")\n\t      keyDownList[event.keyCode] = true;\n\t    else if (event.type == \"keyup\")\n\t      keyDownList[event.keyCode] = false;\n\t  }\n\t\n\t  function pointerListener(event) {\n\t    event.data.local = stage.toLocal(event.data.global);\n\t    that.emit(event.type, event);\n\t  }\n\t\n\t  that.isDown = function(key) {\n\t    return keyDownList[key];\n\t  };\n\t\n\t  that.isUp = function(key) {\n\t    return !keyDownList[key];\n\t  };\n\t\n\t  // that.isPointerDown = function() {\n\t  //\n\t  // };\n\t  //\n\t  // that.isPointerUp = function() {\n\t  //\n\t  // };\n\t  //\n\t  // that.isPointerMove = function() {\n\t  //\n\t  // };\n\t  //\n\t  // function pointerListener(event) {\n\t  // }\n\t  //\n\t\n\t  stage.interactive = true;\n\t  stage\n\t    .on('mousedown', pointerListener)\n\t    .on('touchstart', pointerListener)\n\t    .on('mouseup', pointerListener)\n\t    .on('touchend', pointerListener)\n\t    .on('mouseupoutside', pointerListener)\n\t    .on('touchendoutside', pointerListener)\n\t    .on('mousemove', pointerListener)\n\t    .on('touchmove', pointerListener);\n\t}\n\tExtends(Input, EventEmitter);\n\tmodule.exports = Input;\n\n\n/***/ },\n/* 7 */\n/***/ function(module, exports) {\n\n\tmodule.exports = {\n\t  extends: function(target, source) {\n\t    target.prototype = Object.create(source.prototype);\n\t    target.prototype.constructor = target;\n\t  },\n\t  json2Array: function(jsonObject) {\n\t    var returnObj = [];\n\t    for (var i in jsonObject)\n\t      returnObj.push(jsonObject[i]);\n\t    return returnObj;\n\t  },\n\t  getParameter: function(name) {\n\t    name = name.replace(/[\\[]/, \"\\\\[\").replace(/[\\]]/, \"\\\\]\");\n\t    var regex = new RegExp(\"[\\\\?&]\" + name + \"=([^&#]*)\", \"i\"),\n\t      results = regex.exec(location.search);\n\t    return results === null ? \"\" : decodeURIComponent(results[1].replace(/\\+/g, \" \"));\n\t  }\n\t};\n\n\n/***/ },\n/* 8 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tconst SoundJS = __webpack_require__(9);\n\t\n\tconst Global = __webpack_require__(4);\n\t\n\tvar instance = null;\n\t\n\tfunction SoundManager() {\n\t  var path = \"sound/\";\n\t  var sounds = {\n\t    laser: \"laser\",\n\t    explosion1: \"explosion1\",\n\t    explosion2: \"explosion2\",\n\t    explosion3: \"explosion3\",\n\t    music: \"music\"\n\t  };\n\t\n\t  var laserDelay = 200;\n\t  var laserVolume = 0.2;\n\t  var lastTick;\n\t\n\t  (function() {\n\t    var done = 0;\n\t    var array = [];\n\t\n\t    function checkDone() {\n\t      done++;\n\t      if (done >= Object.keys(sounds).length) {\n\t        done = array = null;\n\t        Global.gameEvent.emit('soundDone');\n\t      }\n\t    }\n\t\n\t    function loadFail() {\n\t      Global.gameEvent.emit('soundFail');\n\t    }\n\t\n\t    SoundJS.on(\"fileload\", checkDone);\n\t    SoundJS.on(\"fileerror\", loadFail);\n\t\n\t    for (var i in sounds)\n\t      array.push({\n\t        id: i,\n\t        src: sounds[i] + \".mp3\"\n\t      });\n\t\n\t    SoundJS.registerSounds(array, path);\n\t  })();\n\t\n\t  Global.gameEvent.on('explosion', function(x, y, big) {\n\t    if (big)\n\t      SoundJS.play(sounds.explosion2);\n\t    else\n\t      SoundJS.play(sounds.explosion1);\n\t  });\n\t  Global.gameEvent.on('dead', function() {\n\t    SoundJS.play(sounds.explosion3);\n\t  });\n\t  Global.gameEvent.on('shoot', function() {\n\t    var currentTime = Date.now();\n\t    if (lastTick && currentTime - lastTick < laserDelay) return;\n\t    lastTick = currentTime;\n\t    SoundJS.play(sounds.laser, {\n\t      volume: laserVolume\n\t    });\n\t  });\n\t  Global.gameEvent.once('gameStart', function() {\n\t    SoundJS.play(sounds.music, {\n\t      loop: -1\n\t    });\n\t  });\n\t}\n\t\n\tmodule.exports = {\n\t  init: function() {\n\t    if (instance) return instance;\n\t    instance = new SoundManager();\n\t    return instance;\n\t  }\n\t};\n\n\n/***/ },\n/* 9 */\n/***/ function(module, exports) {\n\n\tmodule.exports = createjs.Sound;\n\n/***/ },\n/* 10 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tconst PIXI = __webpack_require__(1);\n\t\n\tconst Global = __webpack_require__(4);\n\tconst Assets = __webpack_require__(11);\n\tconst Background = __webpack_require__(12);\n\tconst Plane = __webpack_require__(13);\n\tconst BulletManager = __webpack_require__(16);\n\tconst RockManager = __webpack_require__(17);\n\tconst BankManager = __webpack_require__(19);\n\tconst ExplosionManager = __webpack_require__(21);\n\tconst ScoreUI = __webpack_require__(22);\n\tconst TimeUI = __webpack_require__(23);\n\tconst InGameText = __webpack_require__(24);\n\tconst LevelSetup = __webpack_require__(25);\n\tconst getParameter = __webpack_require__(7).getParameter;\n\t\n\tfunction GameEngine(stage) {\n\t  var that = this;\n\t\n\t  var lastTick;\n\t  var gameObjectList = [];\n\t  var currentScore = 0;\n\t  // var currentLevel = 1;\n\t  var timeLimit = 60;\n\t\n\t  var updateTimerTick;\n\t\n\t  var plane;\n\t  var rocks;\n\t  var banks;\n\t\n\t  var bankSpawnConstant = 8000;\n\t  var bankTick;\n\t\n\t  var levelSetup;\n\t  var target = 0;\n\t  var stopped = false;\n\t\n\t  function addScore(score) {\n\t    currentScore += score;\n\t    ScoreUI.updateScore(currentScore);\n\t  }\n\t\n\t  function resetScore() {\n\t    currentScore = 0;\n\t    ScoreUI.updateScore(currentScore);\n\t    InGameText.resetScore();\n\t  }\n\t\n\t  that.init = function() {\n\t    var level = getParameter(\"level\");\n\t    if (level) levelSetup = LevelSetup[parseInt(level) - 1];\n\t    if (!levelSetup) {\n\t      $(\"body\").detach();\n\t      alert(\"Please use correct link to play the game\");\n\t      return;\n\t    }\n\t    target = levelSetup.target;\n\t\n\t    var resources = PIXI.loader.resources;\n\t\n\t    plane = new Plane(resources[Assets.plane.name].texture);\n\t\n\t    var bg = new Background(resources[Assets.bg.name].texture, plane);\n\t\n\t    var bullets = BulletManager.getInstance(resources[Assets.bullet.name].texture);\n\t\n\t    rocks = RockManager.getInstance();\n\t    banks = BankManager.getInstance(levelSetup.dbs, levelSetup.banks);\n\t\n\t    var explosions = ExplosionManager.getInstance();\n\t\n\t    stage.addChild(bg);\n\t    stage.addChild(plane);\n\t    bullets.addToStage(stage);\n\t    rocks.addToStage(stage);\n\t    banks.addToStage(stage);\n\t    explosions.addToStage(stage);\n\t\n\t    gameObjectList.push(plane);\n\t    gameObjectList.push(bg);\n\t    gameObjectList.push(bullets);\n\t    gameObjectList.push(rocks);\n\t    gameObjectList.push(banks);\n\t\n\t    for (var i = 0, l = gameObjectList.length; i < l; i++)\n\t      gameObjectList[i].init();\n\t\n\t    Global.gameEvent.on('score', addScore);\n\t    Global.gameEvent.on('bonus', function() {\n\t      InGameText.bonusScore();\n\t    });\n\t    Global.gameEvent.on('resetscore', resetScore);\n\t    Global.gameEvent.once('spawn', function() {\n\t      updateTimerTick = Date.now();\n\t      InGameText.disappear();\n\t    });\n\t    Global.gameEvent.once('gameover', function() {\n\t      stopped = true;\n\t      if (currentScore >= target)\n\t        InGameText.setText(\"MISSION SUCCESS\");\n\t      else\n\t        InGameText.setText(\"MISSION FAILED\");\n\t    });\n\t\n\t    ScoreUI.updateScore(currentScore);\n\t    TimeUI.updateTime(timeLimit);\n\t\n\t    rocks.updateLevel(levelSetup.rocks);\n\t  };\n\t\n\t  that.start = function() {\n\t    InGameText.setText(\"Target<br/>\" + target);\n\t    plane.start();\n\t    bankTick = lastTick = Date.now();\n\t  };\n\t\n\t  that.update = function() {\n\t    if (stopped) return;\n\t    var currentTime = Date.now();\n\t    var delta = (currentTime - lastTick) * 0.001;\n\t    for (var i = 0, l = gameObjectList.length; i < l; i++)\n\t      gameObjectList[i].update(delta);\n\t    if (currentTime - bankTick > bankSpawnConstant) {\n\t      banks.spawn();\n\t      bankTick = currentTime;\n\t    }\n\t    if (updateTimerTick && currentTime - updateTimerTick > 1000) {\n\t      updateTimerTick += 1000;\n\t      timeLimit--;\n\t      TimeUI.updateTime(timeLimit);\n\t      if (timeLimit == 0)\n\t        Global.gameEvent.emit('gameover');\n\t    }\n\t    lastTick = currentTime;\n\t  };\n\t}\n\tmodule.exports = GameEngine;\n\n\n/***/ },\n/* 11 */\n/***/ function(module, exports) {\n\n\tmodule.exports = {\n\t  plane: {\n\t    name: \"plane\",\n\t    url: \"redfighter.png\"\n\t  },\n\t  bg: {\n\t    name: \"bg\",\n\t    url: \"spacebg.jpg\"\n\t  },\n\t  rock1: {\n\t    name: \"rock1\",\n\t    url: \"rock1.png\"\n\t  },\n\t  rock2: {\n\t    name: \"rock2\",\n\t    url: \"rock2.png\"\n\t  },\n\t  bullet: {\n\t    name: \"bullet\",\n\t    url: \"bullet.png\"\n\t  },\n\t  explosion1: {\n\t    name: \"explosion1\",\n\t    url: \"explosion1.json\"\n\t  },\n\t  explosion2: {\n\t    name: \"explosion2\",\n\t    url: \"explosion2.json\"\n\t  },\n\t  dbs: {\n\t    name: \"dbs\",\n\t    url: \"dbs.png\"\n\t  },\n\t  standard: {\n\t    name: \"standard\",\n\t    url: \"standard.png\"\n\t  },\n\t  uob: {\n\t    name: \"uob\",\n\t    url: \"uob.png\"\n\t  }\n\t};\n\n\n/***/ },\n/* 12 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tconst PIXI = __webpack_require__(1);\n\t\n\tconst Global = __webpack_require__(4);\n\tconst Extends = __webpack_require__(7).extends;\n\t\n\tfunction Background(texture, plane) {\n\t  var that = this;\n\t  PIXI.Container.call(that);\n\t\n\t  var speedY = 50;\n\t  var resetHeight;\n\t  var movableWidth;\n\t  var minX = plane.minX;\n\t  var planeMovableWidth = plane.maxX - minX;\n\t\n\t  that.init = function() {\n\t    var sprite = new PIXI.Sprite(texture);\n\t    that.addChild(sprite);\n\t    resetHeight = sprite.height;\n\t    sprite = new PIXI.Sprite(texture);\n\t    sprite.y = -resetHeight;\n\t    that.addChild(sprite);\n\t    that.scale.x = that.scale.y = Global.gameHeight / resetHeight;\n\t    resetHeight = that.height / 2;\n\t    that.cacheAsBitmap = true;\n\t    movableWidth = that.width - Global.gameWidth;\n\t  };\n\t\n\t  that.update = function(dt) {\n\t    that.y += speedY * dt;\n\t    if (that.y > resetHeight)\n\t      that.y -= resetHeight;\n\t    that.x = -movableWidth * (plane.x - minX) / planeMovableWidth;\n\t  };\n\t}\n\tExtends(Background, PIXI.Container);\n\tmodule.exports = Background;\n\n\n/***/ },\n/* 13 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tconst PIXI = __webpack_require__(1);\n\tconst TweenMax = __webpack_require__(2);\n\tconst TimelineMax = __webpack_require__(14);\n\t\n\tconst Global = __webpack_require__(4);\n\tconst Extends = __webpack_require__(7).extends;\n\tconst Collision = __webpack_require__(15);\n\t\n\tfunction Plane(texture) {\n\t  var that = this;\n\t  PIXI.Sprite.call(that, texture);\n\t\n\t  var stopped = true;\n\t  var speed = 500;\n\t  var moveToPosition = null;\n\t\n\t  var isDown = false;\n\t\n\t  that.maxX = Global.gameWidth - that.width / 2;\n\t  that.minX = that.width / 2;\n\t\n\t  var timeline;\n\t  var deathTime;\n\t\n\t  function onPointerDown(event) {\n\t    isDown = true;\n\t    moveToPosition = event.data.local;\n\t  }\n\t\n\t  function onPointerUp() {\n\t    isDown = false;\n\t    moveToPosition = null;\n\t  }\n\t\n\t  function onPointerMove(event) {\n\t    if (isDown) moveToPosition = event.data.local;\n\t  }\n\t\n\t  function spawn() {\n\t    that.scale.x = that.scale.y = 1;\n\t    that.y = Global.gameHeight;\n\t    if (timeline) {\n\t      timeline.play(0);\n\t      return;\n\t    }\n\t    var y1 = that.y - that.height;\n\t    var y2 = y1 + that.height / 2;\n\t    timeline = new TimelineMax();\n\t    timeline.add(TweenMax.to(that.scale, 1.5, {\n\t      x: 0.5,\n\t      y: 0.5\n\t    }), 0);\n\t    timeline.add(TweenMax.to(that, 0.5, {\n\t      y: y1\n\t    }), 0);\n\t    timeline.add(TweenMax.to(that, 1, {\n\t      y: y2,\n\t      onComplete: function() {\n\t        stopped = false;\n\t        Global.gameEvent.emit('spawn');\n\t      }\n\t    }), 0.5);\n\t  }\n\t\n\t  that.init = function() {\n\t    that.anchor.x = that.anchor.y = 0.5;\n\t    that.x = Global.gameWidth / 2;\n\t    Global.Input\n\t      .on('mousedown', onPointerDown)\n\t      .on('touchstart', onPointerDown)\n\t      .on('mouseup', onPointerUp)\n\t      .on('touchend', onPointerUp)\n\t      .on('mouseupoutside', onPointerUp)\n\t      .on('touchendoutside', onPointerUp)\n\t      .on('mousemove', onPointerMove)\n\t      .on('touchmove', onPointerMove);\n\t    that.scale.x = that.scale.y = 0.5;\n\t    Collision.addGroup(that, 'plane', Collision.TYPE_CIRCLE, {\n\t      width: that.width - 10,\n\t      height: that.height - 10\n\t    });\n\t  };\n\t\n\t  that.start = spawn;\n\t\n\t  that.update = function(dt) {\n\t    if (!that.visible) {\n\t      if (Date.now() - deathTime >= 5000) {\n\t        that.visible = true;\n\t        spawn();\n\t      } else\n\t        return;\n\t    }\n\t    if (stopped) return;\n\t    if (moveToPosition) {\n\t      if (that.x != moveToPosition.x) {\n\t        var moveToX = moveToPosition.x;\n\t        var distance = Math.min(speed * dt, Math.abs(moveToX - that.x));\n\t        that.x += (that.x < moveToX) ? distance : -distance;\n\t      }\n\t    } else {\n\t      var keyLeft = Global.Input.isDown(Global.Input.KEY_LEFT);\n\t      var keyRight = Global.Input.isDown(Global.Input.KEY_RIGHT);\n\t      if (keyLeft || keyRight)\n\t        that.x += (keyLeft ? -1 : 1) * speed * dt;\n\t    }\n\t\n\t    //check position\n\t    if (that.x > that.maxX)\n\t      that.x = that.maxX;\n\t    else if (that.x < that.minX)\n\t      that.x = that.minX;\n\t\n\t    Global.gameEvent.emit('shoot', that.x, that.y);\n\t\n\t    //check collision with rock\n\t    var target = Collision.isCollide(that, 'rock');\n\t    if (target) {\n\t      target.visible = false;\n\t      that.visible = false;\n\t      deathTime = Date.now();\n\t      Global.gameEvent.emit('dead');\n\t      Global.gameEvent.emit('gameover');\n\t      Global.gameEvent.emit('explosion', target.x, target.y, target.isBig);\n\t      Global.gameEvent.emit('explosion', that.x, that.y);\n\t      stopped = true;\n\t    }\n\t  };\n\t}\n\tExtends(Plane, PIXI.Sprite);\n\tmodule.exports = Plane;\n\n\n/***/ },\n/* 14 */\n/***/ function(module, exports) {\n\n\tmodule.exports = TimelineMax;\n\n/***/ },\n/* 15 */\n/***/ function(module, exports) {\n\n\t// not complete\n\t// rotation not in the calculation\n\t\n\tvar groups = {};\n\t\n\tfunction rect_rect(x1, y1, width1, height1, x2, y2, width2, height2) {\n\t  return Math.abs(x1 - x2) < (width1 + width2) / 2 && Math.abs(y1 - y2) < (height1 + height2) / 2;\n\t}\n\t\n\t// not accurate\n\tfunction rect_cir(x1, y1, width1, height1, x2, y2, width2, height2) {\n\t  var halfWidth1 = width1 / 2;\n\t  var halfHeight1 = height1 / 2;\n\t  var testX = (x1 > x2) ? x1 - halfWidth1 : x1 + halfWidth1;\n\t  var testY = (y1 > y2) ? y1 - halfHeight1 : y1 + halfHeight1;\n\t  return getDistance(Math.abs(testX - x2), Math.abs(testY - y2)) < height2 / 2;\n\t}\n\t\n\tfunction getDistance(x, y) {\n\t  return Math.sqrt(Math.pow(x, 2) + Math.pow(y, 2));\n\t}\n\t\n\tfunction cir_cir(x1, y1, width1, height1, x2, y2, width2, height2) {\n\t  var totalRadius = height1 / 2 + height2 / 2;\n\t  var distance = getDistance(Math.abs(x1 - x2), Math.abs(y1 - y2));\n\t  return distance < totalRadius;\n\t}\n\t\n\tfunction checkCollision(x1, y1, width1, height1, type1, x2, y2, width2, height2, type2) {\n\t  if (type1 == Collision.TYPE_RECTANGLE) {\n\t    if (type2 == Collision.TYPE_RECTANGLE)\n\t      return rect_rect(x1, y1, width1, height1, x2, y2, width2, height2);\n\t    else\n\t      return rect_cir(x1, y1, width1, height1, x2, y2, width2, height2);\n\t  } else {\n\t    if (type2 == Collision.TYPE_RECTANGLE)\n\t      return rect_cir(x2, y2, width2, height2, x1, y1, width1, height1);\n\t    else\n\t      return cir_cir(x1, y1, width1, height1, x2, y2, width2, height2);\n\t  }\n\t}\n\t\n\tvar Collision = {\n\t  TYPE_RECTANGLE: 0,\n\t  TYPE_CIRCLE: 1,\n\t  addGroup: function(instance, group, type, area) {\n\t    if (!type) instance.collisionType = this.TYPE_RECTANGLE;\n\t    else instance.collisionType = type;\n\t    if (area)\n\t      instance.collisionArea = {\n\t        width: area.width,\n\t        height: area.height\n\t      };\n\t    else\n\t      instance.collisionArea = {\n\t        width: instance.width,\n\t        height: instance.height\n\t      };\n\t    var array = groups[group];\n\t    if (array)\n\t      array.push(instance);\n\t    else\n\t      groups[group] = [instance];\n\t  },\n\t  isCollide: function(instance, group) {\n\t    if (!instance.visible) return;\n\t    var width1 = instance.collisionArea.width;\n\t    var height1 = instance.collisionArea.height;\n\t    var x1 = instance.x + (0.5 - instance.anchor.x) * width1;\n\t    var y1 = instance.y + (0.5 - instance.anchor.y) * height1;\n\t    var type1 = instance.collisionType;\n\t    var array = groups[group];\n\t    var target, width2, height2, x2, y2, type2;\n\t    for (var i = 0, l = array.length; i < l; i++) {\n\t      target = array[i];\n\t      if (!target.visible) continue;\n\t      width2 = target.collisionArea.width;\n\t      height2 = target.collisionArea.height;\n\t      x2 = target.x + (0.5 - target.anchor.x) * width2;\n\t      y2 = target.y + (0.5 - target.anchor.y) * height2;\n\t      type2 = target.collisionType;\n\t      if (checkCollision(x1, y1, width1, height1, type1, x2, y2, width2, height2, type2))\n\t        return target;\n\t    }\n\t    return null;\n\t  }\n\t};\n\tmodule.exports = Collision;\n\n\n/***/ },\n/* 16 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tconst PIXI = __webpack_require__(1);\n\t\n\tconst Global = __webpack_require__(4);\n\tconst Collision = __webpack_require__(15);\n\t\n\tvar instance = null;\n\t\n\tfunction BulletManager(texture) {\n\t  var that = this;\n\t\n\t  var count = 20;\n\t\n\t  var bullets = [];\n\t  var updates = [];\n\t\n\t  var lastFire = null;\n\t  var firePerSecond = 10;\n\t  var speed = 1000;\n\t\n\t  (function() {\n\t    for (var i = 0; i < count; i++) {\n\t      var bullet = new PIXI.Sprite(texture);\n\t      bullet.anchor.x = bullet.anchor.y = 0.5;\n\t      bullet.visible = false;\n\t      bullets.push(bullet);\n\t      Collision.addGroup(bullet, 'bullet');\n\t    }\n\t  })();\n\t\n\t  that.addToStage = function(stage) {\n\t    var i;\n\t    for (i = 0; i < count; i++)\n\t      stage.addChild(bullets[i]);\n\t  };\n\t\n\t  function shoot(x, y) {\n\t    var currentTime = Date.now();\n\t    if (lastFire && currentTime - lastFire < 1000 / firePerSecond) return;\n\t    lastFire = currentTime;\n\t    var bullet = bullets.pop();\n\t    bullet.x = x;\n\t    bullet.y = y;\n\t    updates.push(bullet);\n\t    bullet.visible = true;\n\t  }\n\t\n\t  that.init = function() {\n\t    Global.gameEvent.on('shoot', shoot);\n\t  };\n\t\n\t  that.update = function(dt) {\n\t    for (var i = 0, l = updates.length; i < l; i++) {\n\t      var bullet = updates[i];\n\t      bullet.y -= speed * dt;\n\t      if (bullet.y < -bullet.height || !bullet.visible) {\n\t        bullet.visible = false;\n\t        bullets.push(bullet);\n\t        updates.splice(i, 1);\n\t        l--;\n\t        i--;\n\t      }\n\t    }\n\t  };\n\t}\n\t\n\tmodule.exports = {\n\t  getInstance: function(texture) {\n\t    if (instance) return instance;\n\t    instance = new BulletManager(texture);\n\t    return instance;\n\t  }\n\t};\n\n\n/***/ },\n/* 17 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tconst PIXI = __webpack_require__(1);\n\t\n\tconst Global = __webpack_require__(4);\n\tconst Assets = __webpack_require__(11);\n\tconst Rock = __webpack_require__(18);\n\t\n\tvar instance = null;\n\t\n\tfunction RockManager() {\n\t  var that = this;\n\t  var count = 40;\n\t\n\t  var rockNames = [Assets.rock1.name, Assets.rock2.name];\n\t  var totalNames = rockNames.length;\n\t  var rocks = {};\n\t  var updates = [];\n\t\n\t  var stopped = true;\n\t  var lastFire = null;\n\t  var rocksPerSecond = 2;\n\t\n\t  (function() {\n\t    var resources = PIXI.loader.resources;\n\t    var i, j, name, texture, array, rock;\n\t    for (i = 0; i < totalNames; i++) {\n\t      name = rockNames[i];\n\t      texture = resources[name].texture;\n\t      array = rocks[name] = [];\n\t      for (j = 0; j < count; j++) {\n\t        rock = new Rock(name, texture);\n\t        rock.init();\n\t        rock.visible = false;\n\t        array.push(rock);\n\t      }\n\t    }\n\t  })();\n\t\n\t  that.addToStage = function(stage) {\n\t    var name, array, i;\n\t    for (name in rocks) {\n\t      array = rocks[name];\n\t      for (i = 0; i < count; i++)\n\t        stage.addChild(array[i]);\n\t    }\n\t  };\n\t\n\t  function spawnRock() {\n\t    var currentTime = Date.now();\n\t    if (stopped ||\n\t      updates.length > totalNames * count ||\n\t      (lastFire && currentTime - lastFire < 1000 / rocksPerSecond))\n\t      return;\n\t    lastFire = currentTime;\n\t    var name = rockNames[Math.floor(Math.random() * totalNames)];\n\t    var rock;\n\t    while (!rock) {\n\t      rock = rocks[name].pop();\n\t      if (!rock) {\n\t        name = (name + 1) % totalNames;\n\t        return;\n\t      }\n\t      rock.refresh();\n\t      updates.push(rock);\n\t      rock.visible = true;\n\t    }\n\t  }\n\t\n\t  that.init = function() {\n\t    Global.gameEvent.on('spawn', function() {\n\t      stopped = false;\n\t    });\n\t    Global.gameEvent.on('dead', function() {\n\t      stopped = true;\n\t    });\n\t  };\n\t\n\t  that.update = function(dt) {\n\t    for (var i = 0, l = updates.length; i < l; i++) {\n\t      var rock = updates[i];\n\t      if (rock.visible && rock.y < Global.gameHeight + rock.height)\n\t        rock.update(dt);\n\t      else {\n\t        rocks[rock.type].push(rock);\n\t        updates.splice(i, 1);\n\t        l--;\n\t        i--;\n\t      }\n\t    }\n\t    spawnRock();\n\t  };\n\t\n\t  that.updateLevel = function(spawnConstant) {\n\t    rocksPerSecond = spawnConstant;\n\t  };\n\t}\n\t\n\tmodule.exports = {\n\t  getInstance: function() {\n\t    if (instance) return instance;\n\t    instance = new RockManager();\n\t    return instance;\n\t  }\n\t};\n\n\n/***/ },\n/* 18 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tconst PIXI = __webpack_require__(1);\n\t\n\tconst Global = __webpack_require__(4);\n\tconst Extends = __webpack_require__(7).extends;\n\tconst Collision = __webpack_require__(15);\n\tconst Assets = __webpack_require__(11);\n\t\n\tfunction Rock(textureName, texture) {\n\t  var that = this;\n\t  PIXI.Sprite.call(that, texture);\n\t\n\t  if (textureName == Assets.rock1.name)\n\t    that.initialLife = 4;\n\t  else\n\t    that.initialLife = 1;\n\t\n\t  that.type = textureName;\n\t  that.isBig = textureName == Assets.rock1.name;\n\t\n\t  var speedConstant = (that.isBig) ? 2 : 4;\n\t\n\t  function refresh() {\n\t    that.x = Global.gameWidth / 4 + (Math.random() * Global.gameWidth) / 2;\n\t    that.y = -that.height;\n\t    that.speedX = (Math.random() * 1 - 0.5) * 100;\n\t    that.speedY = (1.5 + Math.random() * speedConstant) * 100;\n\t    that.speedRotation = (Math.random() * 1 - 0.5) * 10;\n\t    that.life = that.initialLife;\n\t  }\n\t\n\t  that.refresh = refresh;\n\t\n\t  that.init = function() {\n\t    that.anchor.x = that.anchor.y = 0.5;\n\t    Collision.addGroup(that, 'rock', Collision.TYPE_CIRCLE);\n\t    refresh();\n\t  };\n\t\n\t  that.update = function(dt) {\n\t    that.x += that.speedX * dt;\n\t    that.y += that.speedY * dt;\n\t    if (that.y > Global.gameHeight + that.height) {\n\t      that.visible = false;\n\t      return;\n\t    }\n\t    var target = Collision.isCollide(that, 'bullet');\n\t    that.rotation += that.speedRotation * dt;\n\t    if (target) {\n\t      target.visible = false;\n\t      that.life--;\n\t      if (that.life > 0) return;\n\t      that.visible = false;\n\t      Global.gameEvent.emit('explosion', that.x, that.y, that.isBig);\n\t      if (that.isBig)\n\t        Global.gameEvent.emit('score', 30);\n\t      else\n\t        Global.gameEvent.emit('score', 10);\n\t    }\n\t  };\n\t}\n\tExtends(Rock, PIXI.Sprite);\n\tmodule.exports = Rock;\n\n\n/***/ },\n/* 19 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tconst PIXI = __webpack_require__(1);\n\t\n\tconst Global = __webpack_require__(4);\n\tconst Assets = __webpack_require__(11);\n\tconst Bank = __webpack_require__(20);\n\t\n\tvar instance = null;\n\t\n\tfunction BankManager(gotDbs, gotBanks) {\n\t  var that = this;\n\t  var count = 2;\n\t\n\t  var bankNames = [];\n\t  if (gotDbs)\n\t    bankNames.push(Assets.dbs.name);\n\t  if (gotBanks) {\n\t    bankNames.push(Assets.standard.name, Assets.uob.name);\n\t  }\n\t  var totalNames = bankNames.length;\n\t  var banks = {};\n\t  var updates = [];\n\t\n\t  (function() {\n\t    var resources = PIXI.loader.resources;\n\t    var i, j, name, texture, array, bank;\n\t    for (i = 0; i < totalNames; i++) {\n\t      name = bankNames[i];\n\t      texture = resources[name].texture;\n\t      array = banks[name] = [];\n\t      for (j = 0; j < count; j++) {\n\t        bank = new Bank(name, texture);\n\t        bank.init();\n\t        bank.visible = false;\n\t        array.push(bank);\n\t      }\n\t    }\n\t  })();\n\t\n\t  that.addToStage = function(stage) {\n\t    var name, array, i;\n\t    for (name in banks) {\n\t      array = banks[name];\n\t      for (i = 0; i < count; i++)\n\t        stage.addChild(array[i]);\n\t    }\n\t  };\n\t\n\t  function spawnBank() {\n\t    if (!totalNames) return;\n\t    if (updates.length > totalNames * count) return;\n\t    var name = bankNames[Math.floor(Math.random() * totalNames)];\n\t    var bank;\n\t    while (!bank) {\n\t      bank = banks[name].pop();\n\t      if (!bank) {\n\t        name = (name + 1) % totalNames;\n\t        return;\n\t      }\n\t      bank.refresh();\n\t      updates.push(bank);\n\t      bank.visible = true;\n\t    }\n\t  }\n\t\n\t  that.init = function() {};\n\t\n\t  that.update = function(dt) {\n\t    for (var i = 0, l = updates.length; i < l; i++) {\n\t      var bank = updates[i];\n\t      if (bank.visible && bank.y < Global.gameHeight + bank.height)\n\t        bank.update(dt);\n\t      else {\n\t        banks[bank.type].push(bank);\n\t        updates.splice(i, 1);\n\t        l--;\n\t        i--;\n\t      }\n\t    }\n\t  };\n\t\n\t  that.spawn = spawnBank;\n\t}\n\t\n\tmodule.exports = {\n\t  getInstance: function(dbs, banks) {\n\t    if (instance) return instance;\n\t    instance = new BankManager(dbs, banks);\n\t    return instance;\n\t  }\n\t};\n\n\n/***/ },\n/* 20 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tconst PIXI = __webpack_require__(1);\n\t\n\tconst Global = __webpack_require__(4);\n\tconst Extends = __webpack_require__(7).extends;\n\tconst Collision = __webpack_require__(15);\n\tconst Assets = __webpack_require__(11);\n\t\n\tfunction Bank(textureName, texture) {\n\t  var that = this;\n\t  PIXI.Sprite.call(that, texture);\n\t\n\t  that.type = textureName;\n\t\n\t  var initialLife = 10;\n\t  var speedConstant = 1;\n\t\n\t  that.refresh = function() {\n\t    that.x = Global.gameWidth / 4 + (Math.random() * Global.gameWidth) / 2;\n\t    that.y = -that.height;\n\t    that.speedX = (Math.random() * 1 - 0.5) * 100;\n\t    that.speedY = (1.5 + Math.random() * speedConstant) * 100;\n\t    that.life = initialLife;\n\t  };\n\t\n\t  that.init = function() {\n\t    that.anchor.x = that.anchor.y = 0.5;\n\t    that.refresh();\n\t    Collision.addGroup(that, 'bank');\n\t  };\n\t\n\t  that.update = function(dt) {\n\t    that.x += that.speedX * dt;\n\t    that.y += that.speedY * dt;\n\t    if (that.y > Global.gameHeight + that.height) {\n\t      that.visible = false;\n\t      return;\n\t    }\n\t    var target = Collision.isCollide(that, 'bullet');\n\t    if (target) {\n\t      target.visible = false;\n\t      that.life--;\n\t      if (that.life > 0) return;\n\t      that.visible = false;\n\t      Global.gameEvent.emit('explosion', that.x, that.y, true);\n\t      if (textureName == Assets.dbs.name)\n\t        Global.gameEvent.emit('resetscore');\n\t      else {\n\t        Global.gameEvent.emit('score', 50);\n\t        Global.gameEvent.emit('bonus');\n\t      }\n\t    }\n\t  };\n\t}\n\tExtends(Bank, PIXI.Sprite);\n\tmodule.exports = Bank;\n\n\n/***/ },\n/* 21 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tconst PIXI = __webpack_require__(1);\n\t\n\tconst Global = __webpack_require__(4);\n\tconst Assets = __webpack_require__(11);\n\tconst JsonToArray = __webpack_require__(7).json2Array;\n\t\n\tvar instance = null;\n\t\n\tfunction ExplosionManager() {\n\t  var that = this;\n\t\n\t  var explosions = {};\n\t  var types = [{\n\t    name: Assets.explosion1.name,\n\t    count: 10\n\t  }, {\n\t    name: Assets.explosion2.name,\n\t    count: 20\n\t  }];\n\t\n\t  (function() {\n\t    var totalNames = types.length;\n\t    var i, j, type, count, textures, array, explosion;\n\t    var resources = PIXI.loader.resources;\n\t    for (i = 0; i < totalNames; i++) {\n\t      type = types[i].name;\n\t      count = types[i].count;\n\t      textures = JsonToArray(resources[type].textures);\n\t      array = explosions[type] = [];\n\t      for (j = 0; j < count; j++) {\n\t        explosion = new PIXI.extras.MovieClip(textures);\n\t        explosion.anchor.x = explosion.anchor.y = 0.5;\n\t        explosion.loop = false;\n\t        explosion.type = type;\n\t        if (i == 0) {\n\t          explosion.animationSpeed = 0.5;\n\t          explosion.scale.x = explosion.scale.y = 2;\n\t        }\n\t        explosion.onComplete = function() {\n\t          this.visible = false;\n\t          explosions[this.type].push(this);\n\t        };\n\t        explosion.visible = false;\n\t        array.push(explosion);\n\t      }\n\t    }\n\t  })();\n\t\n\t  that.addToStage = function(stage) {\n\t    var name, array, i, count;\n\t    for (name in explosions) {\n\t      array = explosions[name];\n\t      count = array.length;\n\t      for (i = 0; i < count; i++)\n\t        stage.addChild(array[i]);\n\t    }\n\t  };\n\t\n\t  Global.gameEvent.on('explosion', function(x, y, big) {\n\t    var type;\n\t    if (big)\n\t      type = types[0].name;\n\t    else\n\t      type = types[1].name;\n\t    var explosion = explosions[type].pop();\n\t    if (explosion) {\n\t      explosion.rotation = ((Math.random() > 0.5) ? -1 : 1) * Math.random() * Math.PI;\n\t      explosion.x = x;\n\t      explosion.y = y;\n\t      explosion.visible = true;\n\t      explosion.gotoAndPlay(0);\n\t    }\n\t  });\n\t}\n\t\n\tmodule.exports = {\n\t  getInstance: function() {\n\t    if (instance) return instance;\n\t    instance = new ExplosionManager();\n\t    return instance;\n\t  }\n\t};\n\n\n/***/ },\n/* 22 */\n/***/ function(module, exports) {\n\n\tvar scoreDiv;\n\tvar scoreSpan;\n\tmodule.exports = {\n\t  init: function() {\n\t    scoreDiv = $(\".scoreDiv\");\n\t    scoreSpan = $(\".scoreDiv span\")[0];\n\t  },\n\t  updateScore: function(score) {\n\t    scoreSpan.innerHTML = score;\n\t  },\n\t  updatePosition: function(x, y) {\n\t    scoreDiv.css({\n\t      top: y,\n\t      left: x\n\t    });\n\t  }\n\t};\n\n\n/***/ },\n/* 23 */\n/***/ function(module, exports) {\n\n\tvar timeDiv;\n\tvar timeSpan;\n\t\n\tmodule.exports = {\n\t  init: function() {\n\t    timeDiv = $(\".timeDiv\");\n\t    timeSpan = $(\".timeDiv span\")[0];\n\t  },\n\t  updateTime: function(time) {\n\t    timeSpan.innerHTML = time;\n\t  },\n\t  updatePosition: function(x, y) {\n\t    timeDiv.css({\n\t      top: y,\n\t      right: x\n\t    });\n\t  }\n\t};\n\n\n/***/ },\n/* 24 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tconst TweenMax = __webpack_require__(2);\n\tconst TimelineMax = __webpack_require__(14);\n\tconst Linear = __webpack_require__(3);\n\t\n\tvar textDiv;\n\tvar effectTimeline;\n\tvar disappearEffect;\n\t\n\tmodule.exports = {\n\t  init: function() {\n\t    textDiv = $(\".inGameTextDiv\");\n\t    effectTimeline = new TimelineMax({\n\t      paused: true\n\t    });\n\t    effectTimeline.add(TweenMax.to(textDiv, 1.2, {\n\t      css: {\n\t        scaleX: 2,\n\t        scaleY: 2\n\t      },\n\t      startAt: {\n\t        opacity: 1,\n\t        scaleX: 1,\n\t        scaleY: 1\n\t      }\n\t    })).add(TweenMax.to(textDiv, 0.4, {\n\t      opacity: 0\n\t    }), 0.8);\n\t    disappearEffect = TweenMax.to(textDiv, 2, {\n\t      opacity: 0,\n\t      paused: true\n\t    });\n\t  },\n\t  setText: function(text) {\n\t    effectTimeline.stop();\n\t    textDiv.css({\n\t      opacity: 1,\n\t      color: \"#fff\",\n\t      transform: \"\"\n\t    }).html(\"\");\n\t    TweenMax.to(textDiv, 1, {\n\t      text: {\n\t        value: text\n\t      },\n\t      ease: Linear.easeNone\n\t    });\n\t  },\n\t  disappear: function() {\n\t    disappearEffect.play(0);\n\t  },\n\t  resetScore: function() {\n\t    textDiv.css({\n\t      color: \"#e6262d\"\n\t    }).html(\"Score Reset!!\");\n\t    effectTimeline.play(0);\n\t  },\n\t  bonusScore: function() {\n\t    textDiv.css({\n\t      color: \"#fff500\"\n\t    }).html(\"Bonus Score!!\");\n\t    effectTimeline.play(0);\n\t  }\n\t};\n\n\n/***/ },\n/* 25 */\n/***/ function(module, exports) {\n\n\tmodule.exports = [{\n\t  rocks: 1,\n\t  dbs: false,\n\t  banks: false,\n\t  target: 10\n\t}, {\n\t  rocks: 2,\n\t  dbs: false,\n\t  banks: false,\n\t  target: 100\n\t}, {\n\t  rocks: 3,\n\t  dbs: true,\n\t  banks: false,\n\t  target: 100\n\t}, {\n\t  rocks: 4,\n\t  dbs: true,\n\t  banks: true,\n\t  target: 200\n\t}];\n\n\n/***/ }\n/******/ ]);\n\n\n/** WEBPACK FOOTER **\n ** bundle.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 097c889d06c32327cd24\n **/","// require('../css/app.css');\n// require('babel-polyfill');\n//\n// import Point from './Point';\n// console.log(Point);\n\nconst PIXI = require('PIXI');\nconst TweenMax = require('TweenMax');\nconst Linear = require('Linear');\n\nconst Global = require('./Global');\nconst SoundManager = require('./Manager/SoundManager');\nconst GameEngine = require('./GameEngine');\nconst Assets = require('./GameObject/Assets');\nconst ScoreUI = require('./UI/Score');\nconst TimeUI = require('./UI/Time');\nconst InGameText = require('./UI/InGameText');\nconst LevelSetup = require('./LevelSetup');\nconst getParameter = require('./util').getParameter;\n\n$(function() {\n  var renderer = PIXI.autoDetectRenderer(window.innerWidth, window.innerHeight, {\n    view: $(\"canvas\")[0]\n  });\n\n  var stage = new PIXI.Container(),\n    mask = new PIXI.Graphics(),\n    gameEngine = new GameEngine(stage),\n    winObject = $(window);\n\n  ScoreUI.init();\n  TimeUI.init();\n  InGameText.init();\n\n  Global.init(stage);\n  stage.mask = mask;\n\n  //load\n  (function() {\n    var loadingDivText = $(\".loading div\");\n    var loadingTweening = TweenMax.to(loadingDivText, 1, {\n      text: {\n        value: \"Loading...\"\n      },\n      ease: Linear.easeNone\n    });\n\n    var assetsLoaded = $.Deferred();\n    var soundsLoaded = $.Deferred();\n    var loader = PIXI.loader;\n\n    loader.baseUrl = \"image/\";\n    var assetList = [];\n    for (var i in Assets)\n      assetList.push(Assets[i]);\n    loader\n      .once('complete', function() {\n        assetsLoaded.resolve();\n      })\n      .once('error', function() {\n        assetsLoaded.reject();\n      })\n      .add(assetList)\n      .load();\n\n    Global.gameEvent.once('soundDone', function() {\n      soundsLoaded.resolve();\n    });\n    Global.gameEvent.once('soundFail', function() {\n      soundsLoaded.reject();\n    });\n    SoundManager.init();\n\n    $.when(assetsLoaded, soundsLoaded).then(function() {\n      assetsLoaded = soundsLoaded = loader = assetList = null;\n      gameEngine.init();\n      // var area = new PIXI.Graphics();\n      // area.beginFill(0xFFFFFF);\n      // area.drawRect(0, 0, Global.gameWidth, Global.gameHeight);\n      // area.endFill();\n      // stage.addChild(area);\n\n      var level = getParameter(\"level\");\n      var levelSetup;\n      if (level) levelSetup = LevelSetup[parseInt(level) - 1];\n      if (!levelSetup) return;\n\n      var loadingScreen = $(\".loading\");\n      var displayText = \"Level \" + level + \"<br/>\";\n      if (levelSetup.dbs)\n        displayText += \"Avoid shooting DBS<br/>\";\n      if (levelSetup.banks)\n        displayText += \"Shoot other banks for getting bonus points<br/>\";\n      displayText += \"Tap on screen to start\";\n      var totalTime = displayText.length * 0.05;\n      var delay = loadingTweening.duration() * (1 - loadingTweening.progress());\n      TweenMax.to(loadingDivText, totalTime, {\n        text: {\n          value: displayText\n        },\n        onComplete: function() {\n          loadingScreen.on(\"click\", function() {\n            loadingScreen.off(\"click\");\n            loadingScreen.detach();\n            loadingScreen = null;\n            loadingTweening = null;\n            TweenMax.killTweensOf(loadingDivText);\n            Global.gameEvent.emit('gameStart');\n            gameEngine.start();\n            animate();\n          });\n        },\n        ease: Linear.easeNone,\n        delay: delay\n      });\n    }, function() {\n      alert(\"Loading failed\");\n    });\n  })();\n\n  function animate() {\n    requestAnimationFrame(animate);\n    gameEngine.update();\n    renderer.render(stage);\n  }\n\n  winObject.on(\"resize\", resize);\n  resize();\n\n  function resize() {\n    var screenWidth, stageWidth, screenHeight, stageHeight;\n    screenWidth = stageWidth = winObject.width();\n    screenHeight = stageHeight = winObject.height();\n    var gameWidth = Global.gameWidth;\n    var gameHeight = Global.gameHeight;\n    var screenRatio = gameHeight / gameWidth;\n    if (stageHeight / stageWidth < screenRatio)\n      stageWidth = stageHeight / screenRatio;\n    else\n      stageHeight = stageWidth * screenRatio;\n    mask.clear();\n    mask.beginFill(0xFFFFFF, 1);\n    var x = (screenWidth - stageWidth) / 2;\n    var y = (screenHeight - stageHeight) / 2;\n    mask.drawRect(x, y, stageWidth, stageHeight);\n    mask.endFill();\n    stage.x = x;\n    stage.y = y;\n    stage.scale.x = stageWidth / gameWidth;\n    stage.scale.y = stageHeight / gameHeight;\n    renderer.resize(screenWidth, screenHeight);\n    ScoreUI.updatePosition(x, y);\n    TimeUI.updatePosition((screenWidth - stageWidth) / 2, y);\n  }\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/app.js\n ** module id = 0\n ** module chunks = 0\n **/","module.exports = PIXI;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"PIXI\"\n ** module id = 1\n ** module chunks = 0\n **/","module.exports = TweenMax;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"TweenMax\"\n ** module id = 2\n ** module chunks = 0\n **/","module.exports = Linear;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"Linear\"\n ** module id = 3\n ** module chunks = 0\n **/","const EventEmitter = require('eventemitter3');\nconst Input = require('./Input');\nmodule.exports = {\n  init: function(stage) {\n    this.gameStage = stage;\n    this.Input = new Input(stage);\n  },\n  gameStage: null,\n  gameWidth: 500,\n  gameHeight: 800,\n  gameEvent: new EventEmitter(),\n  Input: null\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/Global/index.js\n ** module id = 4\n ** module chunks = 0\n **/","'use strict';\n\nvar has = Object.prototype.hasOwnProperty;\n\n//\n// We store our EE objects in a plain object whose properties are event names.\n// If `Object.create(null)` is not supported we prefix the event names with a\n// `~` to make sure that the built-in object properties are not overridden or\n// used as an attack vector.\n// We also assume that `Object.create(null)` is available when the event name\n// is an ES6 Symbol.\n//\nvar prefix = typeof Object.create !== 'function' ? '~' : false;\n\n/**\n * Representation of a single EventEmitter function.\n *\n * @param {Function} fn Event handler to be called.\n * @param {Mixed} context Context for function execution.\n * @param {Boolean} [once=false] Only emit once\n * @api private\n */\nfunction EE(fn, context, once) {\n  this.fn = fn;\n  this.context = context;\n  this.once = once || false;\n}\n\n/**\n * Minimal EventEmitter interface that is molded against the Node.js\n * EventEmitter interface.\n *\n * @constructor\n * @api public\n */\nfunction EventEmitter() { /* Nothing to set */ }\n\n/**\n * Hold the assigned EventEmitters by name.\n *\n * @type {Object}\n * @private\n */\nEventEmitter.prototype._events = undefined;\n\n/**\n * Return an array listing the events for which the emitter has registered\n * listeners.\n *\n * @returns {Array}\n * @api public\n */\nEventEmitter.prototype.eventNames = function eventNames() {\n  var events = this._events\n    , names = []\n    , name;\n\n  if (!events) return names;\n\n  for (name in events) {\n    if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);\n  }\n\n  if (Object.getOwnPropertySymbols) {\n    return names.concat(Object.getOwnPropertySymbols(events));\n  }\n\n  return names;\n};\n\n/**\n * Return a list of assigned event listeners.\n *\n * @param {String} event The events that should be listed.\n * @param {Boolean} exists We only need to know if there are listeners.\n * @returns {Array|Boolean}\n * @api public\n */\nEventEmitter.prototype.listeners = function listeners(event, exists) {\n  var evt = prefix ? prefix + event : event\n    , available = this._events && this._events[evt];\n\n  if (exists) return !!available;\n  if (!available) return [];\n  if (available.fn) return [available.fn];\n\n  for (var i = 0, l = available.length, ee = new Array(l); i < l; i++) {\n    ee[i] = available[i].fn;\n  }\n\n  return ee;\n};\n\n/**\n * Emit an event to all registered event listeners.\n *\n * @param {String} event The name of the event.\n * @returns {Boolean} Indication if we've emitted an event.\n * @api public\n */\nEventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events || !this._events[evt]) return false;\n\n  var listeners = this._events[evt]\n    , len = arguments.length\n    , args\n    , i;\n\n  if ('function' === typeof listeners.fn) {\n    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\n\n    switch (len) {\n      case 1: return listeners.fn.call(listeners.context), true;\n      case 2: return listeners.fn.call(listeners.context, a1), true;\n      case 3: return listeners.fn.call(listeners.context, a1, a2), true;\n      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;\n      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n    }\n\n    for (i = 1, args = new Array(len -1); i < len; i++) {\n      args[i - 1] = arguments[i];\n    }\n\n    listeners.fn.apply(listeners.context, args);\n  } else {\n    var length = listeners.length\n      , j;\n\n    for (i = 0; i < length; i++) {\n      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\n\n      switch (len) {\n        case 1: listeners[i].fn.call(listeners[i].context); break;\n        case 2: listeners[i].fn.call(listeners[i].context, a1); break;\n        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;\n        default:\n          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {\n            args[j - 1] = arguments[j];\n          }\n\n          listeners[i].fn.apply(listeners[i].context, args);\n      }\n    }\n  }\n\n  return true;\n};\n\n/**\n * Register a new EventListener for the given event.\n *\n * @param {String} event Name of the event.\n * @param {Function} fn Callback function.\n * @param {Mixed} [context=this] The context of the function.\n * @api public\n */\nEventEmitter.prototype.on = function on(event, fn, context) {\n  var listener = new EE(fn, context || this)\n    , evt = prefix ? prefix + event : event;\n\n  if (!this._events) this._events = prefix ? {} : Object.create(null);\n  if (!this._events[evt]) this._events[evt] = listener;\n  else {\n    if (!this._events[evt].fn) this._events[evt].push(listener);\n    else this._events[evt] = [\n      this._events[evt], listener\n    ];\n  }\n\n  return this;\n};\n\n/**\n * Add an EventListener that's only called once.\n *\n * @param {String} event Name of the event.\n * @param {Function} fn Callback function.\n * @param {Mixed} [context=this] The context of the function.\n * @api public\n */\nEventEmitter.prototype.once = function once(event, fn, context) {\n  var listener = new EE(fn, context || this, true)\n    , evt = prefix ? prefix + event : event;\n\n  if (!this._events) this._events = prefix ? {} : Object.create(null);\n  if (!this._events[evt]) this._events[evt] = listener;\n  else {\n    if (!this._events[evt].fn) this._events[evt].push(listener);\n    else this._events[evt] = [\n      this._events[evt], listener\n    ];\n  }\n\n  return this;\n};\n\n/**\n * Remove event listeners.\n *\n * @param {String} event The event we want to remove.\n * @param {Function} fn The listener that we need to find.\n * @param {Mixed} context Only remove listeners matching this context.\n * @param {Boolean} once Only remove once listeners.\n * @api public\n */\nEventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events || !this._events[evt]) return this;\n\n  var listeners = this._events[evt]\n    , events = [];\n\n  if (fn) {\n    if (listeners.fn) {\n      if (\n           listeners.fn !== fn\n        || (once && !listeners.once)\n        || (context && listeners.context !== context)\n      ) {\n        events.push(listeners);\n      }\n    } else {\n      for (var i = 0, length = listeners.length; i < length; i++) {\n        if (\n             listeners[i].fn !== fn\n          || (once && !listeners[i].once)\n          || (context && listeners[i].context !== context)\n        ) {\n          events.push(listeners[i]);\n        }\n      }\n    }\n  }\n\n  //\n  // Reset the array, or remove it completely if we have no more listeners.\n  //\n  if (events.length) {\n    this._events[evt] = events.length === 1 ? events[0] : events;\n  } else {\n    delete this._events[evt];\n  }\n\n  return this;\n};\n\n/**\n * Remove all listeners or only the listeners for the specified event.\n *\n * @param {String} event The event want to remove all listeners for.\n * @api public\n */\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\n  if (!this._events) return this;\n\n  if (event) delete this._events[prefix ? prefix + event : event];\n  else this._events = prefix ? {} : Object.create(null);\n\n  return this;\n};\n\n//\n// Alias methods names because people roll like that.\n//\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\nEventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n//\n// This function doesn't apply anymore.\n//\nEventEmitter.prototype.setMaxListeners = function setMaxListeners() {\n  return this;\n};\n\n//\n// Expose the prefix.\n//\nEventEmitter.prefixed = prefix;\n\n//\n// Expose the module.\n//\nif ('undefined' !== typeof module) {\n  module.exports = EventEmitter;\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/eventemitter3/index.js\n ** module id = 5\n ** module chunks = 0\n **/","const EventEmitter = require('eventemitter3');\nconst Extends = require('../util').extends;\n// const Global = require('../Global');\n\nfunction Input(stage) {\n  var that = this;\n  EventEmitter.call(that);\n\n  var keyDownList = {};\n  // var pointerList = {};\n\n  that.KEY_LEFT = 37;\n  that.KEY_UP = 38;\n  that.KEY_RIGHT = 39;\n  that.KEY_DOWN = 40;\n\n  $(function() {\n    $(window)\n      .keydown(keyListener)\n      .keyup(keyListener)\n      .keypress(keyListener);\n  });\n\n  function keyListener(event) {\n    that.emit(event.type, event);\n    if (event.type == \"keydown\")\n      keyDownList[event.keyCode] = true;\n    else if (event.type == \"keyup\")\n      keyDownList[event.keyCode] = false;\n  }\n\n  function pointerListener(event) {\n    event.data.local = stage.toLocal(event.data.global);\n    that.emit(event.type, event);\n  }\n\n  that.isDown = function(key) {\n    return keyDownList[key];\n  };\n\n  that.isUp = function(key) {\n    return !keyDownList[key];\n  };\n\n  // that.isPointerDown = function() {\n  //\n  // };\n  //\n  // that.isPointerUp = function() {\n  //\n  // };\n  //\n  // that.isPointerMove = function() {\n  //\n  // };\n  //\n  // function pointerListener(event) {\n  // }\n  //\n\n  stage.interactive = true;\n  stage\n    .on('mousedown', pointerListener)\n    .on('touchstart', pointerListener)\n    .on('mouseup', pointerListener)\n    .on('touchend', pointerListener)\n    .on('mouseupoutside', pointerListener)\n    .on('touchendoutside', pointerListener)\n    .on('mousemove', pointerListener)\n    .on('touchmove', pointerListener);\n}\nExtends(Input, EventEmitter);\nmodule.exports = Input;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/Global/Input.js\n ** module id = 6\n ** module chunks = 0\n **/","module.exports = {\n  extends: function(target, source) {\n    target.prototype = Object.create(source.prototype);\n    target.prototype.constructor = target;\n  },\n  json2Array: function(jsonObject) {\n    var returnObj = [];\n    for (var i in jsonObject)\n      returnObj.push(jsonObject[i]);\n    return returnObj;\n  },\n  getParameter: function(name) {\n    name = name.replace(/[\\[]/, \"\\\\[\").replace(/[\\]]/, \"\\\\]\");\n    var regex = new RegExp(\"[\\\\?&]\" + name + \"=([^&#]*)\", \"i\"),\n      results = regex.exec(location.search);\n    return results === null ? \"\" : decodeURIComponent(results[1].replace(/\\+/g, \" \"));\n  }\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/util/index.js\n ** module id = 7\n ** module chunks = 0\n **/","const SoundJS = require('SoundJS');\n\nconst Global = require('../Global');\n\nvar instance = null;\n\nfunction SoundManager() {\n  var path = \"sound/\";\n  var sounds = {\n    laser: \"laser\",\n    explosion1: \"explosion1\",\n    explosion2: \"explosion2\",\n    explosion3: \"explosion3\",\n    music: \"music\"\n  };\n\n  var laserDelay = 200;\n  var laserVolume = 0.2;\n  var lastTick;\n\n  (function() {\n    var done = 0;\n    var array = [];\n\n    function checkDone() {\n      done++;\n      if (done >= Object.keys(sounds).length) {\n        done = array = null;\n        Global.gameEvent.emit('soundDone');\n      }\n    }\n\n    function loadFail() {\n      Global.gameEvent.emit('soundFail');\n    }\n\n    SoundJS.on(\"fileload\", checkDone);\n    SoundJS.on(\"fileerror\", loadFail);\n\n    for (var i in sounds)\n      array.push({\n        id: i,\n        src: sounds[i] + \".mp3\"\n      });\n\n    SoundJS.registerSounds(array, path);\n  })();\n\n  Global.gameEvent.on('explosion', function(x, y, big) {\n    if (big)\n      SoundJS.play(sounds.explosion2);\n    else\n      SoundJS.play(sounds.explosion1);\n  });\n  Global.gameEvent.on('dead', function() {\n    SoundJS.play(sounds.explosion3);\n  });\n  Global.gameEvent.on('shoot', function() {\n    var currentTime = Date.now();\n    if (lastTick && currentTime - lastTick < laserDelay) return;\n    lastTick = currentTime;\n    SoundJS.play(sounds.laser, {\n      volume: laserVolume\n    });\n  });\n  Global.gameEvent.once('gameStart', function() {\n    SoundJS.play(sounds.music, {\n      loop: -1\n    });\n  });\n}\n\nmodule.exports = {\n  init: function() {\n    if (instance) return instance;\n    instance = new SoundManager();\n    return instance;\n  }\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/Manager/SoundManager.js\n ** module id = 8\n ** module chunks = 0\n **/","module.exports = createjs.Sound;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"createjs.Sound\"\n ** module id = 9\n ** module chunks = 0\n **/","const PIXI = require('PIXI');\n\nconst Global = require('./Global');\nconst Assets = require('./GameObject/Assets');\nconst Background = require('./GameObject/Background');\nconst Plane = require('./GameObject/Plane');\nconst BulletManager = require('./Manager/BulletManager');\nconst RockManager = require('./Manager/RockManager');\nconst BankManager = require('./Manager/BankManager');\nconst ExplosionManager = require('./Manager/ExplosionManager');\nconst ScoreUI = require('./UI/Score');\nconst TimeUI = require('./UI/Time');\nconst InGameText = require('./UI/InGameText');\nconst LevelSetup = require('./LevelSetup');\nconst getParameter = require('./util').getParameter;\n\nfunction GameEngine(stage) {\n  var that = this;\n\n  var lastTick;\n  var gameObjectList = [];\n  var currentScore = 0;\n  // var currentLevel = 1;\n  var timeLimit = 60;\n\n  var updateTimerTick;\n\n  var plane;\n  var rocks;\n  var banks;\n\n  var bankSpawnConstant = 8000;\n  var bankTick;\n\n  var levelSetup;\n  var target = 0;\n  var stopped = false;\n\n  function addScore(score) {\n    currentScore += score;\n    ScoreUI.updateScore(currentScore);\n  }\n\n  function resetScore() {\n    currentScore = 0;\n    ScoreUI.updateScore(currentScore);\n    InGameText.resetScore();\n  }\n\n  that.init = function() {\n    var level = getParameter(\"level\");\n    if (level) levelSetup = LevelSetup[parseInt(level) - 1];\n    if (!levelSetup) {\n      $(\"body\").detach();\n      alert(\"Please use correct link to play the game\");\n      return;\n    }\n    target = levelSetup.target;\n\n    var resources = PIXI.loader.resources;\n\n    plane = new Plane(resources[Assets.plane.name].texture);\n\n    var bg = new Background(resources[Assets.bg.name].texture, plane);\n\n    var bullets = BulletManager.getInstance(resources[Assets.bullet.name].texture);\n\n    rocks = RockManager.getInstance();\n    banks = BankManager.getInstance(levelSetup.dbs, levelSetup.banks);\n\n    var explosions = ExplosionManager.getInstance();\n\n    stage.addChild(bg);\n    stage.addChild(plane);\n    bullets.addToStage(stage);\n    rocks.addToStage(stage);\n    banks.addToStage(stage);\n    explosions.addToStage(stage);\n\n    gameObjectList.push(plane);\n    gameObjectList.push(bg);\n    gameObjectList.push(bullets);\n    gameObjectList.push(rocks);\n    gameObjectList.push(banks);\n\n    for (var i = 0, l = gameObjectList.length; i < l; i++)\n      gameObjectList[i].init();\n\n    Global.gameEvent.on('score', addScore);\n    Global.gameEvent.on('bonus', function() {\n      InGameText.bonusScore();\n    });\n    Global.gameEvent.on('resetscore', resetScore);\n    Global.gameEvent.once('spawn', function() {\n      updateTimerTick = Date.now();\n      InGameText.disappear();\n    });\n    Global.gameEvent.once('gameover', function() {\n      stopped = true;\n      if (currentScore >= target)\n        InGameText.setText(\"MISSION SUCCESS\");\n      else\n        InGameText.setText(\"MISSION FAILED\");\n    });\n\n    ScoreUI.updateScore(currentScore);\n    TimeUI.updateTime(timeLimit);\n\n    rocks.updateLevel(levelSetup.rocks);\n  };\n\n  that.start = function() {\n    InGameText.setText(\"Target<br/>\" + target);\n    plane.start();\n    bankTick = lastTick = Date.now();\n  };\n\n  that.update = function() {\n    if (stopped) return;\n    var currentTime = Date.now();\n    var delta = (currentTime - lastTick) * 0.001;\n    for (var i = 0, l = gameObjectList.length; i < l; i++)\n      gameObjectList[i].update(delta);\n    if (currentTime - bankTick > bankSpawnConstant) {\n      banks.spawn();\n      bankTick = currentTime;\n    }\n    if (updateTimerTick && currentTime - updateTimerTick > 1000) {\n      updateTimerTick += 1000;\n      timeLimit--;\n      TimeUI.updateTime(timeLimit);\n      if (timeLimit == 0)\n        Global.gameEvent.emit('gameover');\n    }\n    lastTick = currentTime;\n  };\n}\nmodule.exports = GameEngine;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/GameEngine.js\n ** module id = 10\n ** module chunks = 0\n **/","module.exports = {\n  plane: {\n    name: \"plane\",\n    url: \"redfighter.png\"\n  },\n  bg: {\n    name: \"bg\",\n    url: \"spacebg.jpg\"\n  },\n  rock1: {\n    name: \"rock1\",\n    url: \"rock1.png\"\n  },\n  rock2: {\n    name: \"rock2\",\n    url: \"rock2.png\"\n  },\n  bullet: {\n    name: \"bullet\",\n    url: \"bullet.png\"\n  },\n  explosion1: {\n    name: \"explosion1\",\n    url: \"explosion1.json\"\n  },\n  explosion2: {\n    name: \"explosion2\",\n    url: \"explosion2.json\"\n  },\n  dbs: {\n    name: \"dbs\",\n    url: \"dbs.png\"\n  },\n  standard: {\n    name: \"standard\",\n    url: \"standard.png\"\n  },\n  uob: {\n    name: \"uob\",\n    url: \"uob.png\"\n  }\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/GameObject/Assets.js\n ** module id = 11\n ** module chunks = 0\n **/","const PIXI = require('PIXI');\n\nconst Global = require('../Global');\nconst Extends = require('../util').extends;\n\nfunction Background(texture, plane) {\n  var that = this;\n  PIXI.Container.call(that);\n\n  var speedY = 50;\n  var resetHeight;\n  var movableWidth;\n  var minX = plane.minX;\n  var planeMovableWidth = plane.maxX - minX;\n\n  that.init = function() {\n    var sprite = new PIXI.Sprite(texture);\n    that.addChild(sprite);\n    resetHeight = sprite.height;\n    sprite = new PIXI.Sprite(texture);\n    sprite.y = -resetHeight;\n    that.addChild(sprite);\n    that.scale.x = that.scale.y = Global.gameHeight / resetHeight;\n    resetHeight = that.height / 2;\n    that.cacheAsBitmap = true;\n    movableWidth = that.width - Global.gameWidth;\n  };\n\n  that.update = function(dt) {\n    that.y += speedY * dt;\n    if (that.y > resetHeight)\n      that.y -= resetHeight;\n    that.x = -movableWidth * (plane.x - minX) / planeMovableWidth;\n  };\n}\nExtends(Background, PIXI.Container);\nmodule.exports = Background;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/GameObject/Background.js\n ** module id = 12\n ** module chunks = 0\n **/","const PIXI = require('PIXI');\nconst TweenMax = require('TweenMax');\nconst TimelineMax = require('TimelineMax');\n\nconst Global = require('../Global');\nconst Extends = require('../util').extends;\nconst Collision = require('../Collision');\n\nfunction Plane(texture) {\n  var that = this;\n  PIXI.Sprite.call(that, texture);\n\n  var stopped = true;\n  var speed = 500;\n  var moveToPosition = null;\n\n  var isDown = false;\n\n  that.maxX = Global.gameWidth - that.width / 2;\n  that.minX = that.width / 2;\n\n  var timeline;\n  var deathTime;\n\n  function onPointerDown(event) {\n    isDown = true;\n    moveToPosition = event.data.local;\n  }\n\n  function onPointerUp() {\n    isDown = false;\n    moveToPosition = null;\n  }\n\n  function onPointerMove(event) {\n    if (isDown) moveToPosition = event.data.local;\n  }\n\n  function spawn() {\n    that.scale.x = that.scale.y = 1;\n    that.y = Global.gameHeight;\n    if (timeline) {\n      timeline.play(0);\n      return;\n    }\n    var y1 = that.y - that.height;\n    var y2 = y1 + that.height / 2;\n    timeline = new TimelineMax();\n    timeline.add(TweenMax.to(that.scale, 1.5, {\n      x: 0.5,\n      y: 0.5\n    }), 0);\n    timeline.add(TweenMax.to(that, 0.5, {\n      y: y1\n    }), 0);\n    timeline.add(TweenMax.to(that, 1, {\n      y: y2,\n      onComplete: function() {\n        stopped = false;\n        Global.gameEvent.emit('spawn');\n      }\n    }), 0.5);\n  }\n\n  that.init = function() {\n    that.anchor.x = that.anchor.y = 0.5;\n    that.x = Global.gameWidth / 2;\n    Global.Input\n      .on('mousedown', onPointerDown)\n      .on('touchstart', onPointerDown)\n      .on('mouseup', onPointerUp)\n      .on('touchend', onPointerUp)\n      .on('mouseupoutside', onPointerUp)\n      .on('touchendoutside', onPointerUp)\n      .on('mousemove', onPointerMove)\n      .on('touchmove', onPointerMove);\n    that.scale.x = that.scale.y = 0.5;\n    Collision.addGroup(that, 'plane', Collision.TYPE_CIRCLE, {\n      width: that.width - 10,\n      height: that.height - 10\n    });\n  };\n\n  that.start = spawn;\n\n  that.update = function(dt) {\n    if (!that.visible) {\n      if (Date.now() - deathTime >= 5000) {\n        that.visible = true;\n        spawn();\n      } else\n        return;\n    }\n    if (stopped) return;\n    if (moveToPosition) {\n      if (that.x != moveToPosition.x) {\n        var moveToX = moveToPosition.x;\n        var distance = Math.min(speed * dt, Math.abs(moveToX - that.x));\n        that.x += (that.x < moveToX) ? distance : -distance;\n      }\n    } else {\n      var keyLeft = Global.Input.isDown(Global.Input.KEY_LEFT);\n      var keyRight = Global.Input.isDown(Global.Input.KEY_RIGHT);\n      if (keyLeft || keyRight)\n        that.x += (keyLeft ? -1 : 1) * speed * dt;\n    }\n\n    //check position\n    if (that.x > that.maxX)\n      that.x = that.maxX;\n    else if (that.x < that.minX)\n      that.x = that.minX;\n\n    Global.gameEvent.emit('shoot', that.x, that.y);\n\n    //check collision with rock\n    var target = Collision.isCollide(that, 'rock');\n    if (target) {\n      target.visible = false;\n      that.visible = false;\n      deathTime = Date.now();\n      Global.gameEvent.emit('dead');\n      Global.gameEvent.emit('gameover');\n      Global.gameEvent.emit('explosion', target.x, target.y, target.isBig);\n      Global.gameEvent.emit('explosion', that.x, that.y);\n      stopped = true;\n    }\n  };\n}\nExtends(Plane, PIXI.Sprite);\nmodule.exports = Plane;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/GameObject/Plane.js\n ** module id = 13\n ** module chunks = 0\n **/","module.exports = TimelineMax;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"TimelineMax\"\n ** module id = 14\n ** module chunks = 0\n **/","// not complete\n// rotation not in the calculation\n\nvar groups = {};\n\nfunction rect_rect(x1, y1, width1, height1, x2, y2, width2, height2) {\n  return Math.abs(x1 - x2) < (width1 + width2) / 2 && Math.abs(y1 - y2) < (height1 + height2) / 2;\n}\n\n// not accurate\nfunction rect_cir(x1, y1, width1, height1, x2, y2, width2, height2) {\n  var halfWidth1 = width1 / 2;\n  var halfHeight1 = height1 / 2;\n  var testX = (x1 > x2) ? x1 - halfWidth1 : x1 + halfWidth1;\n  var testY = (y1 > y2) ? y1 - halfHeight1 : y1 + halfHeight1;\n  return getDistance(Math.abs(testX - x2), Math.abs(testY - y2)) < height2 / 2;\n}\n\nfunction getDistance(x, y) {\n  return Math.sqrt(Math.pow(x, 2) + Math.pow(y, 2));\n}\n\nfunction cir_cir(x1, y1, width1, height1, x2, y2, width2, height2) {\n  var totalRadius = height1 / 2 + height2 / 2;\n  var distance = getDistance(Math.abs(x1 - x2), Math.abs(y1 - y2));\n  return distance < totalRadius;\n}\n\nfunction checkCollision(x1, y1, width1, height1, type1, x2, y2, width2, height2, type2) {\n  if (type1 == Collision.TYPE_RECTANGLE) {\n    if (type2 == Collision.TYPE_RECTANGLE)\n      return rect_rect(x1, y1, width1, height1, x2, y2, width2, height2);\n    else\n      return rect_cir(x1, y1, width1, height1, x2, y2, width2, height2);\n  } else {\n    if (type2 == Collision.TYPE_RECTANGLE)\n      return rect_cir(x2, y2, width2, height2, x1, y1, width1, height1);\n    else\n      return cir_cir(x1, y1, width1, height1, x2, y2, width2, height2);\n  }\n}\n\nvar Collision = {\n  TYPE_RECTANGLE: 0,\n  TYPE_CIRCLE: 1,\n  addGroup: function(instance, group, type, area) {\n    if (!type) instance.collisionType = this.TYPE_RECTANGLE;\n    else instance.collisionType = type;\n    if (area)\n      instance.collisionArea = {\n        width: area.width,\n        height: area.height\n      };\n    else\n      instance.collisionArea = {\n        width: instance.width,\n        height: instance.height\n      };\n    var array = groups[group];\n    if (array)\n      array.push(instance);\n    else\n      groups[group] = [instance];\n  },\n  isCollide: function(instance, group) {\n    if (!instance.visible) return;\n    var width1 = instance.collisionArea.width;\n    var height1 = instance.collisionArea.height;\n    var x1 = instance.x + (0.5 - instance.anchor.x) * width1;\n    var y1 = instance.y + (0.5 - instance.anchor.y) * height1;\n    var type1 = instance.collisionType;\n    var array = groups[group];\n    var target, width2, height2, x2, y2, type2;\n    for (var i = 0, l = array.length; i < l; i++) {\n      target = array[i];\n      if (!target.visible) continue;\n      width2 = target.collisionArea.width;\n      height2 = target.collisionArea.height;\n      x2 = target.x + (0.5 - target.anchor.x) * width2;\n      y2 = target.y + (0.5 - target.anchor.y) * height2;\n      type2 = target.collisionType;\n      if (checkCollision(x1, y1, width1, height1, type1, x2, y2, width2, height2, type2))\n        return target;\n    }\n    return null;\n  }\n};\nmodule.exports = Collision;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/Collision.js\n ** module id = 15\n ** module chunks = 0\n **/","const PIXI = require('PIXI');\n\nconst Global = require('../Global');\nconst Collision = require('../Collision');\n\nvar instance = null;\n\nfunction BulletManager(texture) {\n  var that = this;\n\n  var count = 20;\n\n  var bullets = [];\n  var updates = [];\n\n  var lastFire = null;\n  var firePerSecond = 10;\n  var speed = 1000;\n\n  (function() {\n    for (var i = 0; i < count; i++) {\n      var bullet = new PIXI.Sprite(texture);\n      bullet.anchor.x = bullet.anchor.y = 0.5;\n      bullet.visible = false;\n      bullets.push(bullet);\n      Collision.addGroup(bullet, 'bullet');\n    }\n  })();\n\n  that.addToStage = function(stage) {\n    var i;\n    for (i = 0; i < count; i++)\n      stage.addChild(bullets[i]);\n  };\n\n  function shoot(x, y) {\n    var currentTime = Date.now();\n    if (lastFire && currentTime - lastFire < 1000 / firePerSecond) return;\n    lastFire = currentTime;\n    var bullet = bullets.pop();\n    bullet.x = x;\n    bullet.y = y;\n    updates.push(bullet);\n    bullet.visible = true;\n  }\n\n  that.init = function() {\n    Global.gameEvent.on('shoot', shoot);\n  };\n\n  that.update = function(dt) {\n    for (var i = 0, l = updates.length; i < l; i++) {\n      var bullet = updates[i];\n      bullet.y -= speed * dt;\n      if (bullet.y < -bullet.height || !bullet.visible) {\n        bullet.visible = false;\n        bullets.push(bullet);\n        updates.splice(i, 1);\n        l--;\n        i--;\n      }\n    }\n  };\n}\n\nmodule.exports = {\n  getInstance: function(texture) {\n    if (instance) return instance;\n    instance = new BulletManager(texture);\n    return instance;\n  }\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/Manager/BulletManager.js\n ** module id = 16\n ** module chunks = 0\n **/","const PIXI = require('PIXI');\n\nconst Global = require('../Global');\nconst Assets = require('../GameObject/Assets');\nconst Rock = require('../GameObject/Rock');\n\nvar instance = null;\n\nfunction RockManager() {\n  var that = this;\n  var count = 40;\n\n  var rockNames = [Assets.rock1.name, Assets.rock2.name];\n  var totalNames = rockNames.length;\n  var rocks = {};\n  var updates = [];\n\n  var stopped = true;\n  var lastFire = null;\n  var rocksPerSecond = 2;\n\n  (function() {\n    var resources = PIXI.loader.resources;\n    var i, j, name, texture, array, rock;\n    for (i = 0; i < totalNames; i++) {\n      name = rockNames[i];\n      texture = resources[name].texture;\n      array = rocks[name] = [];\n      for (j = 0; j < count; j++) {\n        rock = new Rock(name, texture);\n        rock.init();\n        rock.visible = false;\n        array.push(rock);\n      }\n    }\n  })();\n\n  that.addToStage = function(stage) {\n    var name, array, i;\n    for (name in rocks) {\n      array = rocks[name];\n      for (i = 0; i < count; i++)\n        stage.addChild(array[i]);\n    }\n  };\n\n  function spawnRock() {\n    var currentTime = Date.now();\n    if (stopped ||\n      updates.length > totalNames * count ||\n      (lastFire && currentTime - lastFire < 1000 / rocksPerSecond))\n      return;\n    lastFire = currentTime;\n    var name = rockNames[Math.floor(Math.random() * totalNames)];\n    var rock;\n    while (!rock) {\n      rock = rocks[name].pop();\n      if (!rock) {\n        name = (name + 1) % totalNames;\n        return;\n      }\n      rock.refresh();\n      updates.push(rock);\n      rock.visible = true;\n    }\n  }\n\n  that.init = function() {\n    Global.gameEvent.on('spawn', function() {\n      stopped = false;\n    });\n    Global.gameEvent.on('dead', function() {\n      stopped = true;\n    });\n  };\n\n  that.update = function(dt) {\n    for (var i = 0, l = updates.length; i < l; i++) {\n      var rock = updates[i];\n      if (rock.visible && rock.y < Global.gameHeight + rock.height)\n        rock.update(dt);\n      else {\n        rocks[rock.type].push(rock);\n        updates.splice(i, 1);\n        l--;\n        i--;\n      }\n    }\n    spawnRock();\n  };\n\n  that.updateLevel = function(spawnConstant) {\n    rocksPerSecond = spawnConstant;\n  };\n}\n\nmodule.exports = {\n  getInstance: function() {\n    if (instance) return instance;\n    instance = new RockManager();\n    return instance;\n  }\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/Manager/RockManager.js\n ** module id = 17\n ** module chunks = 0\n **/","const PIXI = require('PIXI');\n\nconst Global = require('../Global');\nconst Extends = require('../util').extends;\nconst Collision = require('../Collision');\nconst Assets = require('./Assets');\n\nfunction Rock(textureName, texture) {\n  var that = this;\n  PIXI.Sprite.call(that, texture);\n\n  if (textureName == Assets.rock1.name)\n    that.initialLife = 4;\n  else\n    that.initialLife = 1;\n\n  that.type = textureName;\n  that.isBig = textureName == Assets.rock1.name;\n\n  var speedConstant = (that.isBig) ? 2 : 4;\n\n  function refresh() {\n    that.x = Global.gameWidth / 4 + (Math.random() * Global.gameWidth) / 2;\n    that.y = -that.height;\n    that.speedX = (Math.random() * 1 - 0.5) * 100;\n    that.speedY = (1.5 + Math.random() * speedConstant) * 100;\n    that.speedRotation = (Math.random() * 1 - 0.5) * 10;\n    that.life = that.initialLife;\n  }\n\n  that.refresh = refresh;\n\n  that.init = function() {\n    that.anchor.x = that.anchor.y = 0.5;\n    Collision.addGroup(that, 'rock', Collision.TYPE_CIRCLE);\n    refresh();\n  };\n\n  that.update = function(dt) {\n    that.x += that.speedX * dt;\n    that.y += that.speedY * dt;\n    if (that.y > Global.gameHeight + that.height) {\n      that.visible = false;\n      return;\n    }\n    var target = Collision.isCollide(that, 'bullet');\n    that.rotation += that.speedRotation * dt;\n    if (target) {\n      target.visible = false;\n      that.life--;\n      if (that.life > 0) return;\n      that.visible = false;\n      Global.gameEvent.emit('explosion', that.x, that.y, that.isBig);\n      if (that.isBig)\n        Global.gameEvent.emit('score', 30);\n      else\n        Global.gameEvent.emit('score', 10);\n    }\n  };\n}\nExtends(Rock, PIXI.Sprite);\nmodule.exports = Rock;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/GameObject/Rock.js\n ** module id = 18\n ** module chunks = 0\n **/","const PIXI = require('PIXI');\n\nconst Global = require('../Global');\nconst Assets = require('../GameObject/Assets');\nconst Bank = require('../GameObject/Bank');\n\nvar instance = null;\n\nfunction BankManager(gotDbs, gotBanks) {\n  var that = this;\n  var count = 2;\n\n  var bankNames = [];\n  if (gotDbs)\n    bankNames.push(Assets.dbs.name);\n  if (gotBanks) {\n    bankNames.push(Assets.standard.name, Assets.uob.name);\n  }\n  var totalNames = bankNames.length;\n  var banks = {};\n  var updates = [];\n\n  (function() {\n    var resources = PIXI.loader.resources;\n    var i, j, name, texture, array, bank;\n    for (i = 0; i < totalNames; i++) {\n      name = bankNames[i];\n      texture = resources[name].texture;\n      array = banks[name] = [];\n      for (j = 0; j < count; j++) {\n        bank = new Bank(name, texture);\n        bank.init();\n        bank.visible = false;\n        array.push(bank);\n      }\n    }\n  })();\n\n  that.addToStage = function(stage) {\n    var name, array, i;\n    for (name in banks) {\n      array = banks[name];\n      for (i = 0; i < count; i++)\n        stage.addChild(array[i]);\n    }\n  };\n\n  function spawnBank() {\n    if (!totalNames) return;\n    if (updates.length > totalNames * count) return;\n    var name = bankNames[Math.floor(Math.random() * totalNames)];\n    var bank;\n    while (!bank) {\n      bank = banks[name].pop();\n      if (!bank) {\n        name = (name + 1) % totalNames;\n        return;\n      }\n      bank.refresh();\n      updates.push(bank);\n      bank.visible = true;\n    }\n  }\n\n  that.init = function() {};\n\n  that.update = function(dt) {\n    for (var i = 0, l = updates.length; i < l; i++) {\n      var bank = updates[i];\n      if (bank.visible && bank.y < Global.gameHeight + bank.height)\n        bank.update(dt);\n      else {\n        banks[bank.type].push(bank);\n        updates.splice(i, 1);\n        l--;\n        i--;\n      }\n    }\n  };\n\n  that.spawn = spawnBank;\n}\n\nmodule.exports = {\n  getInstance: function(dbs, banks) {\n    if (instance) return instance;\n    instance = new BankManager(dbs, banks);\n    return instance;\n  }\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/Manager/BankManager.js\n ** module id = 19\n ** module chunks = 0\n **/","const PIXI = require('PIXI');\n\nconst Global = require('../Global');\nconst Extends = require('../util').extends;\nconst Collision = require('../Collision');\nconst Assets = require('./Assets');\n\nfunction Bank(textureName, texture) {\n  var that = this;\n  PIXI.Sprite.call(that, texture);\n\n  that.type = textureName;\n\n  var initialLife = 10;\n  var speedConstant = 1;\n\n  that.refresh = function() {\n    that.x = Global.gameWidth / 4 + (Math.random() * Global.gameWidth) / 2;\n    that.y = -that.height;\n    that.speedX = (Math.random() * 1 - 0.5) * 100;\n    that.speedY = (1.5 + Math.random() * speedConstant) * 100;\n    that.life = initialLife;\n  };\n\n  that.init = function() {\n    that.anchor.x = that.anchor.y = 0.5;\n    that.refresh();\n    Collision.addGroup(that, 'bank');\n  };\n\n  that.update = function(dt) {\n    that.x += that.speedX * dt;\n    that.y += that.speedY * dt;\n    if (that.y > Global.gameHeight + that.height) {\n      that.visible = false;\n      return;\n    }\n    var target = Collision.isCollide(that, 'bullet');\n    if (target) {\n      target.visible = false;\n      that.life--;\n      if (that.life > 0) return;\n      that.visible = false;\n      Global.gameEvent.emit('explosion', that.x, that.y, true);\n      if (textureName == Assets.dbs.name)\n        Global.gameEvent.emit('resetscore');\n      else {\n        Global.gameEvent.emit('score', 50);\n        Global.gameEvent.emit('bonus');\n      }\n    }\n  };\n}\nExtends(Bank, PIXI.Sprite);\nmodule.exports = Bank;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/GameObject/Bank.js\n ** module id = 20\n ** module chunks = 0\n **/","const PIXI = require('PIXI');\n\nconst Global = require('../Global');\nconst Assets = require('../GameObject/Assets');\nconst JsonToArray = require('../util').json2Array;\n\nvar instance = null;\n\nfunction ExplosionManager() {\n  var that = this;\n\n  var explosions = {};\n  var types = [{\n    name: Assets.explosion1.name,\n    count: 10\n  }, {\n    name: Assets.explosion2.name,\n    count: 20\n  }];\n\n  (function() {\n    var totalNames = types.length;\n    var i, j, type, count, textures, array, explosion;\n    var resources = PIXI.loader.resources;\n    for (i = 0; i < totalNames; i++) {\n      type = types[i].name;\n      count = types[i].count;\n      textures = JsonToArray(resources[type].textures);\n      array = explosions[type] = [];\n      for (j = 0; j < count; j++) {\n        explosion = new PIXI.extras.MovieClip(textures);\n        explosion.anchor.x = explosion.anchor.y = 0.5;\n        explosion.loop = false;\n        explosion.type = type;\n        if (i == 0) {\n          explosion.animationSpeed = 0.5;\n          explosion.scale.x = explosion.scale.y = 2;\n        }\n        explosion.onComplete = function() {\n          this.visible = false;\n          explosions[this.type].push(this);\n        };\n        explosion.visible = false;\n        array.push(explosion);\n      }\n    }\n  })();\n\n  that.addToStage = function(stage) {\n    var name, array, i, count;\n    for (name in explosions) {\n      array = explosions[name];\n      count = array.length;\n      for (i = 0; i < count; i++)\n        stage.addChild(array[i]);\n    }\n  };\n\n  Global.gameEvent.on('explosion', function(x, y, big) {\n    var type;\n    if (big)\n      type = types[0].name;\n    else\n      type = types[1].name;\n    var explosion = explosions[type].pop();\n    if (explosion) {\n      explosion.rotation = ((Math.random() > 0.5) ? -1 : 1) * Math.random() * Math.PI;\n      explosion.x = x;\n      explosion.y = y;\n      explosion.visible = true;\n      explosion.gotoAndPlay(0);\n    }\n  });\n}\n\nmodule.exports = {\n  getInstance: function() {\n    if (instance) return instance;\n    instance = new ExplosionManager();\n    return instance;\n  }\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/Manager/ExplosionManager.js\n ** module id = 21\n ** module chunks = 0\n **/","var scoreDiv;\nvar scoreSpan;\nmodule.exports = {\n  init: function() {\n    scoreDiv = $(\".scoreDiv\");\n    scoreSpan = $(\".scoreDiv span\")[0];\n  },\n  updateScore: function(score) {\n    scoreSpan.innerHTML = score;\n  },\n  updatePosition: function(x, y) {\n    scoreDiv.css({\n      top: y,\n      left: x\n    });\n  }\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/UI/Score.js\n ** module id = 22\n ** module chunks = 0\n **/","var timeDiv;\nvar timeSpan;\n\nmodule.exports = {\n  init: function() {\n    timeDiv = $(\".timeDiv\");\n    timeSpan = $(\".timeDiv span\")[0];\n  },\n  updateTime: function(time) {\n    timeSpan.innerHTML = time;\n  },\n  updatePosition: function(x, y) {\n    timeDiv.css({\n      top: y,\n      right: x\n    });\n  }\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/UI/Time.js\n ** module id = 23\n ** module chunks = 0\n **/","const TweenMax = require('TweenMax');\nconst TimelineMax = require('TimelineMax');\nconst Linear = require('Linear');\n\nvar textDiv;\nvar effectTimeline;\nvar disappearEffect;\n\nmodule.exports = {\n  init: function() {\n    textDiv = $(\".inGameTextDiv\");\n    effectTimeline = new TimelineMax({\n      paused: true\n    });\n    effectTimeline.add(TweenMax.to(textDiv, 1.2, {\n      css: {\n        scaleX: 2,\n        scaleY: 2\n      },\n      startAt: {\n        opacity: 1,\n        scaleX: 1,\n        scaleY: 1\n      }\n    })).add(TweenMax.to(textDiv, 0.4, {\n      opacity: 0\n    }), 0.8);\n    disappearEffect = TweenMax.to(textDiv, 2, {\n      opacity: 0,\n      paused: true\n    });\n  },\n  setText: function(text) {\n    effectTimeline.stop();\n    textDiv.css({\n      opacity: 1,\n      color: \"#fff\",\n      transform: \"\"\n    }).html(\"\");\n    TweenMax.to(textDiv, 1, {\n      text: {\n        value: text\n      },\n      ease: Linear.easeNone\n    });\n  },\n  disappear: function() {\n    disappearEffect.play(0);\n  },\n  resetScore: function() {\n    textDiv.css({\n      color: \"#e6262d\"\n    }).html(\"Score Reset!!\");\n    effectTimeline.play(0);\n  },\n  bonusScore: function() {\n    textDiv.css({\n      color: \"#fff500\"\n    }).html(\"Bonus Score!!\");\n    effectTimeline.play(0);\n  }\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/UI/InGameText.js\n ** module id = 24\n ** module chunks = 0\n **/","module.exports = [{\n  rocks: 1,\n  dbs: false,\n  banks: false,\n  target: 10\n}, {\n  rocks: 2,\n  dbs: false,\n  banks: false,\n  target: 100\n}, {\n  rocks: 3,\n  dbs: true,\n  banks: false,\n  target: 100\n}, {\n  rocks: 4,\n  dbs: true,\n  banks: true,\n  target: 200\n}];\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/LevelSetup.js\n ** module id = 25\n ** module chunks = 0\n **/"],"sourceRoot":""}